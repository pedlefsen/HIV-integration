\documentclass[a4paper]{article}
\usepackage[T1]{fontenc}
\usepackage[utf8]{inputenc}
\usepackage{tabularx,ragged2e,booktabs,caption}
\newcolumntype{C}[1]{>{\Centering}m{#1}}
\renewcommand\tabularxcolumn[1]{C{#1}}

\title{Analysis report: Do Tenofovir's Up- and Down-Regulated Genes Harbor HIV Integration Sites?}
\author{Paul Edlefsen}
\date{}

\begin{document}

\maketitle

<<echo = FALSE>>=
## R packages needed
library( "xtable" )
library( "coin" )
library( "ggplot2" )

## for prettyPrintPValuesTo4Digits
source( "~/src/from-git/projects/pedlefse/rapporttemplates/rapporttemplates-util.R" )

# Setup for prettier Sweave output.
old.continue.option <- options( continue = " " )
@ 

% \section{TODO}
% Look into whether the apparent enrichment of upregulated.Rectal is possibly an artifact, and more generally assure the properties of the method when the genes don't overlap between Wang and SCRI.  Need to ensure the null is appropriate!  Maybe subset on common genes????
% Follow up on interpretation : is the null the same as if we selected a random (eg 12) genes to be ``upregulated Rectal''? I think we need to evaluate a null where we randomize the genes with the feature rather than the ISs.
% 
% Gene-level analysis will help.
% 
% Orientations.


% \section{Executive Summary}
% Here we report on an evaluation of integration sites using integration site data of long term ART-treated human subjects from two papers, the ``SCRI'' data set of three subjects sampled at three post-infection timepoints each, and the ``Malderelli'' data set of five subjects, one of whom was sampled at three time points, another one at two, and the remaining three subjects sampled at only one timepoint (the latest timepoint).  In particular, we have a) evaluated the hypothesis of enrichment of integration sites in genes associated with up- or down- regulation by Tenofovir; and b) re-evaluated the hypothesis of enrichment of integration sites in genes associated with cancer.  We have conducted this analysis using a) the SCRI data set alone, b) the Malderelli data set alone, and c) the two datasets combined.  This document is divided into three main sections to address these three data sets.  In addition to descriptive statistics and analyses of correspondence between proliferation, cancer-associated, and Tenofovir-associated features, we compare these datasets to the Wang dataset of integration sites determined in Jurkat cells.
% 
% In summary, we find consistent evidence that there is an enrichment among SCRI and Malderelli subjects of integration sites (ISs) in genes that were found to be upregulated by Tenofovir in rectal samples, and some evidence of enrichment of ISs in genes found to be downregulated by Tenofovir in rectal samples.  We found that the cancer feature results are inconsistent between the two features tested, ``isCancer'' and ``isAnyCancer.GO'', with some support for enrichment among uniqueISs (though not when considering the multiplicities (counts) of proliferating cells with the same IS) in the Malderelli but not the SCRI data set.  The isAnyCancer.GO results are surprisingly in that they reveal that in the Malderelli (but not the SCRI) data set, ISs into genes with this feature are strongly under-represented relative the expected value from the Jurkat cells.  This could reflect an error in defining these for the Malderelli data (recommend further QC), something different about those subjects than the SCRI subjects, or a real and general effect that remains to be explained.
% 
% In the SCRI and Malderelli (combined) dataset, there were (trending) more ISs found in genes that are found to be upregulated by Tenofovir in rectal samples (unadjusted p = 0.0248 among all IS counts, Holm-adjusted across the four tests this is p = 0.0992; unadjusted p = 0.0492 among proliferating IS counts, Holm-adjusted across four tests this is p = 0.1968).  There is some support for a trend of enrichment of ISs in genes downregulated by Tenofovir in rectal samples also (unadjusted p = 0.0734, Holm-adjusted p = 0.2202).  When considering uniqueISs, all four tested Tenofovir features had strongly significantly higher values than expected except for unique ISs into genes found to be upregulated by Tenofovir in ex vivo samples (which was significantly lower than expected), with all Holm-adjusted p-values $leq$ 0.0084; among proliferating genes only the enrichment of unique ISs in genes found to be downregulated by Tenofovir in rectal samples was trending (unadjusted p = 0.0230, Holm-adjusted p = 0.0920).
%  
% In the SCRI (only) dataset, there were significantly more ISs in genes found to be upregulated by Tenofovir in rectal samples (unadjusted p = 0.0066 among all IS counts, Holm-adjusted p = 0.0264; unadjusted p = 0.0110 among proliferating IS counts, Holm-adjusted p = 0.0440), but the result was not significant for the other three Tenofovir tests, with the observed values in the center of the null distributions in each case (except for the analysis of genes found to be downregulated by Tenofovir in rectal samples, which trended toward enrichment with unadjusted p = 0.1702 among all ISs).  Considering uniqueISs, there is enrichment of ISs both into genes found to be downregulated by Tenofovir in rectal samples (uadjusted p = 0.0066, Holm-adjusted p = 0.0264) and (trending) into genes found to be upregulated by Tenofovir in rectal samples (unadjusted p = 0.0258, Holm-adjusted p = 0.0774), but none of these is significant when considering only proliferating ISs.
% 
% In the Malderelli (only) dataset, there were non-significant trends to more ISs found in genes upregulated by Tenofovir in rectal samples (unadjusted p = 0.0792) and in genes downregulated by Tenofovir in rectal samples (unadjusted p = 0.1080), and there was a non-significant trend to fewer ISs found in genes upregulated by Tenofovir ex vivo (unadjusted p = 0.0836).  Considering the uniqueISs analysis, all four tested Tenofovir features were significant at Holm-adjusted p-values $\leq$ 0.0254 (higher than expected for all except for the genes upregulated by Tenofovir in ex vivo samples, which were lower than expected); among proliferating genes only the enrichment of unique ISs in genes found to be downregulated by Tenofovir in rectal samples was trending (unadjusted p = 0.0164, Holm-adjusted p = 0.0648).
% 
% \subsection{isCancer results}
% In the SCRI and Malderelli (combined) data set, the ``isCancer'' feature was non-significantly trending higher than expected (unadjusted p = 0.1740).  When considering uniqueISs, the ``isCancer'' feature was significantly enriched (unadjusted p = 0.0002).
% 
% In the SCRI (only) data set, the ``isCancer'' feature was not significant by the new IS counts analysis (unadjusted p = 0.37 for all IS counts and p = 0.38 for proliferating IS counts). When considering uniqueISs, the ``isCancer'' feature was also not significantly different from its expected value from the Jurkat cells.
% 
% In the Malderelli (only) data set analysis of IS counts, the ``isCancer'' feature was non-significant being near the center of the null distribution.  When considering uniqueISs, significantly more unique ISs had this feature than expected from the Jurkat data (unadjusted p = 0.0002).
% 
% \subsection{isAnyCancer.GO results} 
% In the SCRI (alone) data set, the isAnyCancer.GO feature was non-significantly trending higher than expected from the Wang dataset (unadjusted p = 0.0610 among all IS counts; unadjusted p = 0.1334 among proliferating IS counts).  In the Malderelli (alone) data set, the isAnyCancer.GO feature was (strongly) significantly less often encountered than would be expected under the distribution of ISs found in Jurkat cells (p = 0.0002 for all IS counts and p = 0.0002 for proliferating IS counts).  In the SCRI and Malderelli (combined) dataset, we see the same effect as among just the Malderelli IS counts (p = 0.0002 for all IS counts and p = 0.0004 for proliferating IS counts).  It is possible that the isAnyCancer.GO signal reflects problem with the data; it should be further QCed.
% 
% \section{Statistical Methodology}
% The statistical methods used to compare the \textit{in vivo} ISs to those discovered in Jurkat cells include two familiar sampling methods and one new method, in addition to some use of Fisher's exact test and a new variant thereof.  These methods address different questions.  First, we consider only ``uniqueISs'', which means that we ignore multiplicity of integration sites, just using the information that they are observed at least once.  This analysis addresses hypotheses about the act of integration, free from the effects of proliferation, though it is expected to be biased to some degree by the fact that even low-abundance proliferating cells have a higher probability of being selected exactly once (hence appearing to be non-proliferating in the sample) than non-proliferating cells; this bias is bounded under the scenario that proliferating cells are a small minority of cells with integrations.  This analysis, similar to a Fisher's exact test comparing across two data sets (eg the SCRI data set vs the Wang data set) the number of ISs into genes with and without a given feature (e.g. the feature that the gene is Tenofovir-associated), compares the observed count of unique ISs with the feature to the null distribution obtained by drawing unique ISs without replacement from the Wang ISs.  For comparison we also include the results of conducting the Fisher's exact test, which additionally conditions on the total number of unique ISs that are Tenofovir-associated in each dataset.  We prefer the method that does not condition on the total number of uniqueISs because the datasets are independent.  Fisher's test is appropriate for evaluation of whether two features measured on the same cell are independent, and we do use it for this purpose (eg evaluating association between the feature of being Tenofovir-associated and being cancer-associated).  Note that the correct comparison of features between proliferating and non-proliferating cells would treat the measures as independent, but we lazily use only the Fisher's test for that analysis here.
% 
% Second, when we consider ``allISs'', we evaluate the frequency with which each cell with an integration site has that IS in a gene with the particular feature under analysis, as compared to the frequency found in the Wang dataset.  In this case we make the simplifying assumption that under the null the ISs are drawn independently, which is not the case in our dataset due to the proliferation of cells with identical ISs.  Rejection of the null hypothesis in this case can reflect either a violation of the independent-draws hypothesis or of the non-enriched-for-the-feature hypothesis, or both.
% 
% We have added a third analysis with a test that isolates the hypothesis of enrichment by conditioning on the observed distribution of IS counts across unique ISs; we call this the analysis of ``countISs''.  This compares the frequency of the feature among all ISs to a null distribution obtained by drawing uniqueIS without replacement, just as in the uniqueIS analysis, but counting these in concordance with the counts of the observed ISs (randomly permuting the observed counts among the randomly drawn unique ISs).  This leads to a more stringent test with the more clear interpretation that a rejection of the null implies an enrichment of the feature among cells sampled in one data set as compared to the other, given the non-independence of the cells due to proliferation.  This is our preferred test of feature enrichment over the other two, as it conditions on the observed count distribution.  The analysis of ``uniqueISs'' is useful as a test of whether an enrichment is obviously driven by proliferation or if integration bias alone could explain it (though the caveat noted above, about our inability to determine that an IS found once is truly non-proliferating, limits this interpretation).  We retain and present results of the ``allISs'' analysis for comparison purposes only.
% 
% We have also developed a variant of Fisher's test to address tests that need to condition on both margins while also conditioning on the observed counts of each unique IS.  We apply this in the case of comparing two features (such as cancer-association and Tenofovir-association) within a data set.  Here we condition on both margins because of the paired nature of the feature observations (one cell has two measurements).  Note that this is not an exact test; this variant is analogous to the Monte Carlo version of Fisher's test, which yields approximate, not exact, p-values.
% 
% All p-values reported here are two-sided.  Simulation-based p-values are based on 10,000 simulations, with the effect that the minimum one-sided p-value is 0.0001 and thus the minimum two-sided p-value is 0.0002; most values of p=0.0002 will become p < 0.0001 when we rerun this with a greater number of iterations.
% <<echo = FALSE, results = hide>>=
% ## Calculate conservative two-sided p-values for the observed number of ISs with each feature exceeding the observed number.
% calculatePValue <- function ( .test.statistic, .null.test.statistics, add.one.for.observed.test.statistic = TRUE ) { if( is.na( .test.statistic ) ) { NA } else { min( 1, 2 * ( min( sum( .test.statistic >= .null.test.statistics, na.rm=T ), sum( .test.statistic <= .null.test.statistics, na.rm=T ) ) + as.numeric( add.one.for.observed.test.statistic ) ) / (  sum( !is.na( .null.test.statistics ) ) + as.numeric( add.one.for.observed.test.statistic ) ), na.rm=T ) } };
% @ 
% 
% \subsection{Fisher's test conditioning on observed counts}
% Fisher's exact test can be expressed as a test of the cross product ratio of two binary-valued measures, A and B, measured as a pair in independent observations, when conditioning on the marginal totals (the counts of the observations having property A and property B).  Fisher showed that under the null hypothesis of independence of these properties (an cross product ratio of 1), the first cell value follows a hypergeometric distribution, and that in general for an arbitrary cross product ratio it follows a non-central hypergeometric distribution (with non-centrality parameter equal to the cross product ratio) \cite{Fisher1935}.  The test p-value is computed by summing hypergeometric probabilities of ``more extreme'' configurations, which are those less-probable (i.e., with cross product ratios more distant from 1).  Here we want to know whether there is a higher or lower odds of property A among cells with property B, when considering a cell selected randomly from all cells harboring an integration site.  This is almost the setting of the Fisher's exact test, however we know that the properties are at least dependent through the fact that some of the cells are members of a common clonal lineage.  That is, the properties of the observations are not independent.  Should we then ignore multiplicity?  We can address the question of whether there is dependence of the properties among independent \textit{lineages} by conducting a Fisher's exact test on the lineages (here these are equivalent to unique integration sites).  But suppose that there is only one lineage with the two properties in common, but this lineage is highly abundant.  Then when considering a randomly-drawn cell, its odds of having property B, given that it has property A, is high, and we are confident of that.  The test of lineages would ignore the abundances, as it is not meant to test the relationship for a randomly-selected cell.  Should a test of cells ignore the lineages and simply count cells?  The historical reason for the relationship (being partially explained by clonal expansion) is irrelevant to address the question of whether there is a relationship, this argument goes. However, by ignoring the differential clonal expansions across lineages, most of the null configurations that are considered will not follow the observed distribution of those expansions.  This seems incorrect, since even if properties A and B were independent, the clonal relationships would vastly constrain the possible configurations.
% 
% %% Fisher 1935: [Fisher, R. A. (1935) The logic of inductive inference.  _Journal of the Royal Statistical Society Series A_ *98*, 39-54.]
% 
% We propose a simple correction for the case of testing a cross product ratio of two properties of a population from a random sample, when the properties of the population are dependent by duplication such that the random sample can be represented as counts $x_i$, $n = 1 \cdots n$, each categorized by a pair of binary properties $A(x_i)$ and $B(x_i)$.  The test follows the spirit of Fisher's exact test, which considers the probability of configurations of the observations subject to the constraint that the marginal totals remain intact, essentially by independently shuffling the properties among the observations and recomputing the cross product ratio.  Here we modify this; we retain the computation of the cross product ratio over all observations (summing over counts in each category and computing the cross product ratio as the test statistic), however we independently shuffle the counts rather than the individual observations, retaining the marginal total numbers of counts.  In a sense we simply modify Fisher's exact test of the $n$ counts (as if each were $1$) by how we evaluate the rareness of each configuration, since our approach includes the probability of any table for which the cross product ratio of the sums over the counts is more extremely-different from 1 as compared to that of the observed table.  Note that in a sense this generalizes Fisher's test, because when the counts are all $x_i = 1$, the test is the same (although we use a monte carlo procedure to obtain an estimated p-value, whereas Fisher's test has an exact analytical calculation).
% 
% An exact solution requires computing every configuration, so is out of reach for all but the teensiest problems. The Monte Carlo procedure is simple.  Given the $n$ counts, we compute the cross-product ratio (which estimates the cross product ratio) $\hat{OR} = \frac{ad}{bc}$, where $a = \sum_i{x_i A(x_i)B(x_i)}$, $b = \sum_i{x_i A(x_i)(1-B(x_i))}$, $c = \sum_i{x_i (1-A(x_i))B(x_i)}$, and $d = \sum_i{x_i (1-A(x_i))(1-B(x_i))}$ are the sums of the counts in the four cells.  We then compute this same statistic on $B$ shuffles of the $A$ and $B$ categories across the $n$ counts to determine a null distribution of the statistic.  The conservative two-sided p-value is twice the area under the smaller end of the null distribution (this reflects the rareness of all tables as rare or rarer than this one, without keeping track).
% 
% <<echo = FALSE, results = hide>>=
% # This is like Fisher's exact test, in that there are data in a 2x2 table; the difference is that here the values are not binary, but instead have a value.  This could be any scalar real value.  Where under the Fisher's exact test null, the binary observations are shuffled independently in rows and columns, for this test the continuous observations are so-shuffled.  This is sensible as a non-parametric test for independence of two categories of a count-valued trait (it is not clear what meaning it has for a continuous-valued trait).  For example is knowing that an integration site is into a cancer-associated gene providing any information about whether or not that integration is into a proliferating gene?  We want to answer this under the scenario in which we see the same distribution of counts of observations as is seen in the real data, across subjects.  So we condition the null on the observed distribution of counts.
% # 
%     calculateCrossProductRatio <- function ( x ) {
%         x[1,1]*x[2,2] / x[1,2]*x[2,1];
%     };
%     calculateCrossProductRatio.helper <- function ( .A1, .A2, .B1, .B2 ) {
%         calculateCrossProductRatio(
%             matrix( c( sum( .A1 ), sum( .A2 ), sum( .B1 ), sum( .B2 ) ), nrow = 2, byrow = TRUE )
%         );
%     }
% 
% ## TODO: Consider conditioning on the (hypergeometrically-distributed) count in the first cell (hence all cells), ie. summing over each the hypergeometric probability of that configuration times the probability, given that configuration, that the cross product ratio is more extreme than the observed stat.  The latter is not obvious how to compute, but could be done by Monte Carlo.  This would amount to a bunch ($n + 1$) of separate Monte Carlo estimates, and may or may not be an improvement.
% fisher.test.conditioning.on.grouped.observations <-
% function ( list.A1, list.A2, list.B1, list.B2, B = 100000, DNAME = "",  ALLOW.SANITY.CHECKS = FALSE, RETURN.NULLS = FALSE ) {
%     list.A1 <- as.numeric( list.A1 );
%     list.A2 <- as.numeric( list.A2 );
%     list.B1 <- as.numeric( list.B1 );
%     list.B2 <- as.numeric( list.B2 );
% 
%     METHOD <- "Fisher's Exact Test for Count Data, modified for grouped observations"
%             METHOD <- paste(METHOD, "with simulated p-value\n\t (based on", 
%                 B, "replicates)")
%     ## The idea is that under the null, we randomly assign the traits "A" (vs B) and "1" (vs 2), incontinuously, to the elements of the list, and we keep track of the test statistic that is the cross product ratio.
%     length.list.A <- length( list.A1 ) + length( list.A2 );
%     length.list.1 <- length( list.A1 ) + length( list.B1 );
%     list.AB12 <- c( list.A1, list.A2, list.B1, list.B2 );
%     length.list.total <- length( list.AB12 );
%     
%     if( ALLOW.SANITY.CHECKS ) {
%         length.list.2 <- length( list.A2 ) + length( list.B2 );
%         length.list.B <- length( list.B1 ) + length( list.B2 );
%         stopifnot( length.list.1 + length.list.2 == length.list.total );
%         stopifnot( length.list.A + length.list.B == length.list.total );
%     }
% 
%     cross.product.ratio <-
%         calculateCrossProductRatio.helper( list.A1, list.A2, list.B1, list.B2 );
% 
%     draw.one.null.cross.product.ratio <- function () {
%         .A.indices <- sample.int( length.list.total, length.list.A );
%         .B.indices <- setdiff( 1:length.list.total, .A.indices );
%         .indices.1 <- sample.int( length.list.total, length.list.1 );
%         .indices.2 <- setdiff( 1:length.list.total, .indices.1 );
% 
%         .A1.indices <- intersect( .A.indices, .indices.1 );
%         .A2.indices <- intersect( .A.indices, .indices.2 );
%         .B1.indices <- intersect( .B.indices, .indices.1 );
%         .B2.indices <- intersect( .B.indices, .indices.2 );
% 
%         # It should be all of the indices.
%         if( ALLOW.SANITY.CHECKS ) {
%             stopifnot( length( setdiff( 1:length.list.total, c( .A1.indices, .A2.indices, .B1.indices, .B2.indices ) ) ) == 0 );
%         }
%         
%         return( 
%         calculateCrossProductRatio.helper(
%             list.AB12[ .A1.indices ], list.AB12[ .A2.indices ],
%             list.AB12[ .B1.indices ], list.AB12[ .B2.indices ]
%         ) );
%     } # draw.one.null.cross.product.ratio
%     
%     .null.cross.product.ratios <-
%         replicate( B, draw.one.null.cross.product.ratio() );
%     PVAL <- calculatePValue( cross.product.ratio, .null.cross.product.ratios, TRUE );
%     RVAL <- list(p.value = max(0, min(1, PVAL)));
%     RVAL <- c(RVAL, alternative = "two.sided", method = METHOD, data.name = DNAME);
%     attr(RVAL, "class") <- "htest";
%     if( RETURN.NULLS ) {
%         attr( RVAL, "cross.product.ratio" ) <- cross.product.ratio;
%         attr( RVAL, "nulls" ) <- .null.cross.product.ratios;
%     }
%     return(RVAL);
% }; # fisher.test.conditioning.on.grouped.observations (..)
% 
% ## TODO: power.fisher.test.conditioning.on.grouped.observations <- function (..)
% 
% # Return nran samples from a multivariate (central) hypergeometric distribution with draws (without replacement) of size n from the given vector (m) of balls (separated by color).
% rHypergeo <- function ( nran, m, n ) {
%     if( is.null( names( m ) ) ) {
%         names( m ) <- 1:length( m );
%     }
%     return.matrix <- matrix( 0, nrow = nran, ncol = length( m ) );
%     colnames( return.matrix ) <- names( m );
%     balls <- unlist( sapply( names( m ), function( .color ) { rep( .color, m[ .color ] ) } ) );
%     .result.ignored <- sapply( 1:nran, function ( .sample.i ) {
%         .table <- table( sample( balls, n, replace = FALSE ) );
%         return.matrix[ .sample.i, names( .table ) ] <<- .table;
%         return( NULL );
%     } );
%     return( return.matrix );
% } # rHypergeo (..)
% 
% 
% @ 
% 
% <<echo = FALSE, results = hide>>=
% #### Control parameters
% #SCRIDataDir <- "~/Google Drive/analysis/dataset/";
% SCRIDataDir <- "~/Dropbox/Mullins_IntegrationSites/dataset/";
% EntrezAnnotDir <- paste( SCRIDataDir, "KavitasCode/", sep = "" );
% HallmarkCancerGODir <- paste( SCRIDataDir, "Kavita_new/", sep = "" );
% CancerGenesDir <- HallmarkCancerGODir;
% TenofovirDataDir <- "~/Dropbox/HladikHIVCure/";
% MalderelliDataDir <- "~/src/from-git/ClaireLevy/HIV-integration/";
% CohnDataDir <- "~/Dropbox/HladikHIVCure/";
% Top200GODir <- paste( SCRIDataDir, "Kavita-May18/", sep = "" );
% ExcludedGenesDir <- "~/Dropbox/HladikHIVCure/excludedDueToInsignificantExpression/";
% ConditionalFisherTestResultsDir <- TenofovirDataDir;
% 
% the.seed <- 1000;
% num.samples <- 10000;
% #num.samples <- 1000;
% num.samples.cooccurrence.twoSubjectGenes <- 10000;## NOTE differs from num.samples
% num.samples.for.conditional.fisher.tests <- 1000000; # 1 Million is required to be stable to about the third decimal.
% 
% SCRIData.filename <- paste( SCRIDataDir, "June18/CodingAndNonCoding-treatment-June18-Kavita-corrected.txt", sep = "" );
% WangData.filename <- paste( SCRIDataDir, "control-corrected-May18-Relim-select5.txt", sep = "" );
% #MalderelliData.filename <- paste( MalderelliDataDir, "Maldarelli_Science_2014_TableS3_xw3-23.csv", sep = "" );
% TenofovirData.Rectal.filename <- paste( TenofovirDataDir, "Gene_expression_Tenofovir_Bx and exvivo.Rectal_Bx Tenofovir.csv", sep = "" );
% TenofovirData.exvivo.filename <- paste( TenofovirDataDir, "Gene_expression_Tenofovir_Bx and exvivo.exvivo tenofovir.csv", sep = "" );
% EntrezAnnot.filename <- paste( EntrezAnnotDir, "entrez_annot.Rda", sep = "" );
% HallmarkCancerGO.filename <- paste( HallmarkCancerGODir, "HallmarkCancerGO.txt", sep = "" );
% CancerGenes.filename <- paste( CancerGenesDir, "CancerGenes", sep = "" );
% Top200GO.filename <- paste( Top200GODir, "SCRI_5NodesGO.tsv", sep = "" );
% 
% MalderelliData.formatted.likeSCRIData.Rda.filename <-
%     paste( MalderelliDataDir, "MalderelliData.formatted.likeSCRIData.fixed.Rda", sep = "" );
% CohnData.formatted.likeSCRIData.Rda.filename <-
%     paste( CohnDataDir, "CohnData.formatted.likeSCRIData.Rda", sep = "" );
% 
% ## Excluded genes from comparison that determined Tenofovir, overlap with each data set:
% excluded.genes.Rda.filenames <- dir( ExcludedGenesDir, pattern = "*.Rda", full.names = T )
% # [1] "CohnNotExVivo.Rda"       "CohnNotRectal.Rda"      
% # [3] "MalderelliNotExVivo.Rda" "MalderelliNotRectal.Rda"
% # [5] "SCRINotExVivo.Rda"       "SCRINotRectal.Rda"      
% # [7] "WangNotExVivo.Rda"       "WangNotRectal.Rda"      
% for( .excluded.genes.Rda.filename in excluded.genes.Rda.filenames ) {
%     load( .excluded.genes.Rda.filename );
% } # foreach .excluded.genes.Rda.filename
% 
% #### OUTPUTS #####
% ## SCRIData:
% # Unique ISs #
% SCRIData.the.samples.Rda.filename <- paste( TenofovirDataDir, "SCRIData_WangIS_samples_Sept21_10K.Rda", sep = "" );
% SCRIData.feature.nulls.Rda.filename <- paste( TenofovirDataDir, "SCRIData_WangIS_samples_Sept21_featureCounts.Rda", sep = "" );
% SCRIData.cooccurrence.nulls.Rda.filename <- paste( TenofovirDataDir, "SCRIData_WangIS_samples_Sept21_cooccurrenceCounts.Rda", sep = "" );
% SCRIData.cooccurrence.twoSubjectGenes.nulls.Rda.filename <- paste( TenofovirDataDir, "SCRIData_WangIS_samples_Sept21_cooccurrence.twoSubjectGenes.Rda", sep = "" );
% # genesWithAnyISs #
% SCRIData.genesWithAnyISs.the.samples.Rda.filename <- paste( TenofovirDataDir, "SCRIData_WangIS_genesWithAnyISs_samples_Sept21_10K.Rda", sep = "" );
% SCRIData.genesWithAnyISs.feature.nulls.Rda.filename <- paste( TenofovirDataDir, "SCRIData_WangIS_genesWithAnyISs_samples_Sept21_featureCounts.Rda", sep = "" );
% # ALL ISs #
% SCRIData.IS.the.samples.Rda.filename <- paste( TenofovirDataDir, "SCRIData_WangIS_allIS_samples_Sept21_10K.Rda", sep = "" );
% SCRIData.IS.feature.nulls.Rda.filename <- paste( TenofovirDataDir, "SCRIData_WangIS_allIS_samples_Sept21_featureCounts.Rda", sep = "" );
% # IS Counts #
% SCRIData.countIS.the.samples.Rda.filename <- paste( TenofovirDataDir, "SCRIData_WangIS_countIS_samples_Sept21_10K.Rda", sep = "" );
% SCRIData.countIS.feature.nulls.Rda.filename <- paste( TenofovirDataDir, "SCRIData_WangIS_countIS_samples_Sept21_featureCounts.Rda", sep = "" );
% 
% 
% ## MalderelliData:
% # Unique ISs #
% MalderelliData.the.samples.Rda.filename <- paste( TenofovirDataDir, "MalderelliData_WangIS_samples_Sept21_10K.Rda", sep = "" );
% MalderelliData.feature.nulls.Rda.filename <- paste( TenofovirDataDir, "MalderelliData_WangIS_samples_Sept21_featureCounts.Rda", sep = "" );
% MalderelliData.cooccurrence.nulls.Rda.filename <- paste( TenofovirDataDir, "MalderelliData_WangIS_samples_Sept21_cooccurrenceCounts.Rda", sep = "" );
% MalderelliData.cooccurrence.twoSubjectGenes.nulls.Rda.filename <- paste( TenofovirDataDir, "MalderelliData_WangIS_samples_Sept21_cooccurrence.twoSubjectGenes.Rda", sep = "" );
% # genesWithAnyISs #
% MalderelliData.genesWithAnyISs.the.samples.Rda.filename <- paste( TenofovirDataDir, "MalderelliData_WangIS_genesWithAnyISs_samples_Sept21_10K.Rda", sep = "" );
% MalderelliData.genesWithAnyISs.feature.nulls.Rda.filename <- paste( TenofovirDataDir, "MalderelliData_WangIS_genesWithAnyISs_samples_Sept21_featureCounts.Rda", sep = "" );
% # ALL ISs #
% MalderelliData.IS.the.samples.Rda.filename <- paste( TenofovirDataDir, "MalderelliData_WangIS_allIS_samples_Sept21_10K.Rda", sep = "" );
% MalderelliData.IS.feature.nulls.Rda.filename <- paste( TenofovirDataDir, "MalderelliData_WangIS_allIS_samples_Sept21_featureCounts.Rda", sep = "" );
% # IS Counts #
% MalderelliData.countIS.the.samples.Rda.filename <- paste( TenofovirDataDir, "MalderelliData_WangIS_countIS_samples_Sept21_10K.Rda", sep = "" );
% MalderelliData.countIS.feature.nulls.Rda.filename <- paste( TenofovirDataDir, "MalderelliData_WangIS_countIS_samples_Sept21_featureCounts.Rda", sep = "" );
% 
% 
% ## SCRIMalderelliData:
% # Unique ISs #
% SCRIMalderelliData.the.samples.Rda.filename <- paste( TenofovirDataDir, "SCRIMalderelliData_WangIS_samples_Sept21_10K.Rda", sep = "" );
% SCRIMalderelliData.feature.nulls.Rda.filename <- paste( TenofovirDataDir, "SCRIMalderelliData_WangIS_samples_Sept21_featureCounts.Rda", sep = "" );
% SCRIMalderelliData.cooccurrence.nulls.Rda.filename <- paste( TenofovirDataDir, "SCRIMalderelliData_WangIS_samples_Sept21_cooccurrenceCounts.Rda", sep = "" );
% SCRIMalderelliData.cooccurrence.twoSubjectGenes.nulls.Rda.filename <- paste( TenofovirDataDir, "SCRIMalderelliData_WangIS_samples_Sept21_cooccurrence.twoSubjectGenes.Rda", sep = "" );
% # genesWithAnyISs #
% SCRIMalderelliData.genesWithAnyISs.the.samples.Rda.filename <- paste( TenofovirDataDir, "SCRIMalderelliData_WangIS_genesWithAnyISs_samples_Sept21_10K.Rda", sep = "" );
% SCRIMalderelliData.genesWithAnyISs.feature.nulls.Rda.filename <- paste( TenofovirDataDir, "SCRIMalderelliData_WangIS_genesWithAnyISs_samples_Sept21_featureCounts.Rda", sep = "" );
% # ALL ISs #
% SCRIMalderelliData.IS.the.samples.Rda.filename <- paste( TenofovirDataDir, "SCRIMalderelliData_WangIS_allIS_samples_Sept21_10K.Rda", sep = "" );
% SCRIMalderelliData.IS.feature.nulls.Rda.filename <- paste( TenofovirDataDir, "SCRIMalderelliData_WangIS_allIS_samples_Sept21_featureCounts.Rda", sep = "" );
% # IS Counts #
% SCRIMalderelliData.countIS.the.samples.Rda.filename <- paste( TenofovirDataDir, "SCRIMalderelliData_WangIS_countIS_samples_Sept21_10K.Rda", sep = "" );
% SCRIMalderelliData.countIS.feature.nulls.Rda.filename <- paste( TenofovirDataDir, "SCRIMalderelliData_WangIS_countIS_samples_Sept21_featureCounts.Rda", sep = "" );
% 
% time.points <- c( "X1st", "X2nd", "X3rd" );
% 
% # In both treatment and Wang data, column 61 to 260 are the top 200 genes. column 261 is the any top 20 (twenty)[not 200]
% first.feature.column <- 9;
% 
% if( exists( "DATA.ARE.LOADED.ALREADY" ) && DATA.ARE.LOADED.ALREADY ) {
%     # GREAT.
% # } else {
% #     load( file = "Tenofovir_vs_ISs_DATA_LOADED.Rda" );
% #     DATA.ARE.LOADED.ALREADY <- TRUE;
% }
%     
% if( !exists( "DATA.ARE.LOADED.ALREADY" ) || !DATA.ARE.LOADED.ALREADY ) {
% stopifnot( file.exists( SCRIData.filename ) );
% stopifnot( file.exists( WangData.filename ) );
% #stopifnot( file.exists( MalderelliData.filename ) );
% stopifnot( file.exists( TenofovirData.Rectal.filename ) );
% stopifnot( file.exists( TenofovirData.exvivo.filename ) );
% stopifnot( file.exists( EntrezAnnot.filename ) );
% stopifnot( file.exists( HallmarkCancerGO.filename ) );
% stopifnot( file.exists( CancerGenes.filename ) );
% stopifnot( file.exists( Top200GO.filename ) );
% 
% ## Exclude the genes that were excluded from the Tenofovir analysis from all analyses?  Any IS in an excluded gene is ignored.  The alternative is to consider them not-up- and not-down-regulated, which is pretending we know more than we do.  Effectively what we are doing is making those columns of isUpregulatedByTenofovir.Rectal "NA" whenever the gene was not tested on the array or was excluded from the comparative analysis across array conditions.
% 
% ## Load the Tenofovir data.
% # Rectal data
% # NOTE: For this (Rectal) we have V6 vs V2 fold changes, no other time points. 
% # NOTE: This also only has the 9cm (not 15cm) biopsy data, because that's where the most changes were seen.
% TenofovirData.Rectal <- read.csv( TenofovirData.Rectal.filename );
% TenofovirData.Rectal.passesCriteria <- ( as.logical( ( TenofovirData.Rectal)[ ,"ARB.ARM.2.V6.V2.Pass.FC.....0.5.and.FDR.0.05." ] ) );
% TenofovirData.Rectal.isDownregulated <- ( ( TenofovirData.Rectal)[ , "log2.Fold.change.V6.V2" ] < 0 );
% TenofovirData.Rectal.downregulatedGenes <- unique( TenofovirData.Rectal[ ( TenofovirData.Rectal.isDownregulated & TenofovirData.Rectal.passesCriteria ), "TargetID" ] );
% TenofovirData.Rectal.isUpregulated <- ( ( TenofovirData.Rectal)[ , "log2.Fold.change.V6.V2" ] > 0 );
% TenofovirData.Rectal.upregulatedGenes <- unique( TenofovirData.Rectal[ ( TenofovirData.Rectal.isUpregulated & TenofovirData.Rectal.passesCriteria ), "TargetID" ] );
% 
% # NOTE: For this (exvivo) we have V6 vs V2 fold changes, no other time points.
% TenofovirData.exvivo <- read.csv( TenofovirData.exvivo.filename );
% TenofovirData.exvivo.downregulatedGenes.by.kind <- sapply( grep( "^D\\d.+\\.?DEG", colnames( TenofovirData.exvivo ), value = T ), function( .colname ) { unique( TenofovirData.exvivo[ TenofovirData.exvivo[ , .colname ] == "DOWN", "TargetID" ] ) } );
% TenofovirData.exvivo.downregulatedGenes.any <- unique( unlist( TenofovirData.exvivo.downregulatedGenes.by.kind ) );
% ## Too many?
% length( TenofovirData.exvivo.downregulatedGenes.any )
% # [1] 3503
% TenofovirData.exvivo.upregulatedGenes.by.kind <- sapply( grep( "^D\\d.+\\.?DEG", colnames( TenofovirData.exvivo ), value = T ), function( .colname ) { unique( TenofovirData.exvivo[ TenofovirData.exvivo[ , .colname ] == "UP", "TargetID" ] ) } );
% TenofovirData.exvivo.upregulatedGenes.any <- unique( unlist( TenofovirData.exvivo.upregulatedGenes.by.kind ) );
% ## Too many?
% length( TenofovirData.exvivo.upregulatedGenes.any )
% # [1] 3674
% 
% #### Analyses involving simulation from the Wang set
% ## Load SCRI Data:
% SCRIDataIncludingNoncoding <- read.table( SCRIData.filename, header=T, string=F, sep="\t");
% SCRIData <- SCRIDataIncludingNoncoding[ ( SCRIDataIncludingNoncoding$Gene != "X" ), ];
% 
% # For each integration site, an indicator of whether it is observed at each of the three time points.
% SCRIData.observed.at.time.includingNoncoding <- apply( SCRIDataIncludingNoncoding[, c( "X1st", "X2nd", "X3rd" ) ], 1:2, function( .x ) { as.numeric( .x > 0 ) } );
% SCRIData.observed.at.time <- apply( SCRIData[, c( "X1st", "X2nd", "X3rd" ) ], 1:2, function( .x ) { as.numeric( .x > 0 ) } );
% 
% SCRIData.treatment.genes <- unique( SCRIData$Gene );
% 
% ### Sanity checks.
% # None of the integration sites should have zero integrations over all time points.
% stopifnot( all( apply( SCRIData.observed.at.time, 1, sum ) > 0 ) );
% # Passes.
% 
% # Column "Persist" should be 1 iff at least two time points were observed with the same IS.
% stopifnot( all( SCRIData[, "Persist" ] == as.numeric( ( apply( SCRIData.observed.at.time, 1, sum ) > 1 ) ) ) );
% # Passes.
% 
% # For some reason we are redundantly storing the gene information.  Make sure it's consistent.
% ## This is very slow so I'm commenting it out now (it passes, see below).
% # stopifnot( all( sapply( unique( SCRIData$Gene ), function ( .gene ) {
% #     apply( SCRIData[ SCRIData$Gene == .gene, first.feature.column:ncol( SCRIData ) ], 2, function ( .column ) { all( .column == .column[ 1 ] ) } )
% # } ) ) );
% # Passes.
% ### End sanity checks.
% 
% # We've realized that persist is incorrect; we should call it "proliferating" and it should be 1 iff there are more than 1 observations of an integration site at any time, not just across multiple time points.
% SCRIData[ , "Persist" ] <- as.numeric( apply( SCRIData[ , c( "X1st", "X2nd", "X3rd" ) ], 1, sum ) > 1 );
% colnames( SCRIData )[ colnames( SCRIData ) == "Persist" ] <- "Proliferating";
% ## Also do it for the data that includes the noncoding genes
% SCRIDataIncludingNoncoding[ , "Persist" ] <- as.numeric( apply( SCRIDataIncludingNoncoding[ , c( "X1st", "X2nd", "X3rd" ) ], 1, sum ) > 1 );
% colnames( SCRIDataIncludingNoncoding )[ colnames( SCRIDataIncludingNoncoding ) == "Persist" ] <- "Proliferating";
% 
% SCRIData.subjectIDs <- unique( SCRIData$Pt. );
% 
% #############################################
% # Load the Wang data, and note that it has the same columns as the treatment data, so 
% # some of the columns are irrelevant (X1st, X2nd, X3rd, Proliferating).
% 
% # Every row is a unique integration site.
% WangData <- read.table( WangData.filename , header=T, string=F, sep="\t" );
% Wang.genes <- unique( WangData$Gene );
% Wang.all.features <- colnames( WangData )[ first.feature.column:ncol( WangData ) ];
% 
% ### Sanity checks.
% stopifnot( ncol( SCRIData ) == ncol( WangData ) );
% # Passes.
% 
% # For some reason we are redundantly storing the gene information.  Make sure it's consistent within the Wang data and also between treatment and Wang.
% ## This is very slow so I'm commenting it out now (it passes, see below).
% # stopifnot( all( sapply( Wang.genes, function ( .gene ) {
% #     apply( WangData[ WangData$Gene == .gene, first.feature.column:ncol( WangData ) ], 2, function ( .column ) { all( .column == .column[ 1 ] ) } )
% # } ) ) );
% # Passes
% 
% ## This is very slow so I'm commenting it out now (it passes, see below).
% # stopifnot( all( sapply( SCRIData.treatment.genes, function ( .gene ) {
% #     print( .gene );
% #     if( !( .gene %in% Wang.genes ) ) {
% #         # Ok, this gene is not in the Wang data so there is nothing to check.
% #         return( TRUE );
% #     }
% #     .comparison.from.treatment.group <-
% #         SCRIData[ SCRIData$Gene == .gene, first.feature.column:ncol( SCRIData ) ][ 1, ];
% #     .comparison.from.Wang.group <-
% #         WangData[ WangData$Gene == .gene, first.feature.column:ncol( WangData ) ][ 1, ];
% #     .rv <- all( sapply( 1:length( .comparison.from.Wang.group ), function( .col.i ) {
% #         .comparison.from.treatment.group[ .col.i ] == .comparison.from.Wang.group[ .col.i ]
% #     } ) );
% #     if( !.rv ) {
% #         print( "OOPS" );
% #     }
% #     return( .rv );
% # } ) ) );
% # Passes.
% ## End sanity checks.
% 
% ## Cohn data..
% if( file.exists( CohnData.formatted.likeSCRIData.Rda.filename ) ) {
%     # loads: CohnData.formatted.likeSCRIData (note it's not really formatted like the SCRIData just yet).
%     load( CohnData.formatted.likeSCRIData.Rda.filename );
%     # Fix colnames to match SCRIData colnames (GO terms sep is dot).
%     colnames( CohnData.formatted.likeSCRIData ) <- 
%         gsub( ":", ".", colnames( CohnData.formatted.likeSCRIData ) );
%     .new.CohnData.formatted.likeSCRIData <-
%         as.data.frame( matrix( 0, nrow = nrow( CohnData.formatted.likeSCRIData ), ncol = ncol( SCRIData ) ) );
%     colnames( .new.CohnData.formatted.likeSCRIData ) <- colnames( SCRIData );
%     # Copy first 8 cols.  Note this puts "X.shears" (the count of observations of this IS at a single timepoint) into "X1st".
%     .new.CohnData.formatted.likeSCRIData[ , 1:5 ] <-
%         CohnData.formatted.likeSCRIData[ , 1:5 ];
%     # For the Cohn data, note that subjects P11, P1, P2, and P3 have multiple time points, stored as sepatate "Pt." values in the raw data (P11.1-P11.2; P1.1-P1.5;P2.1-P2.5;P3.1-P3.3).
%     # Persisting.  Are the sites identical?
%     Persisting.P11 <- intersect( .new.CohnData.formatted.likeSCRIData[ .new.CohnData.formatted.likeSCRIData[ , "Pt." ] == "P11.1", "Read" ], .new.CohnData.formatted.likeSCRIData[ .new.CohnData.formatted.likeSCRIData[ , "Pt." ] == "P11.2", "Read" ] );
%     .Persisting.P1.allreads <-  .new.CohnData.formatted.likeSCRIData[ grep( "P1\\.[1-5]", .new.CohnData.formatted.likeSCRIData[ , "Pt." ] ), "Read" ];
%     .Persisting.P1.allreads.tbl <- table( .Persisting.P1.allreads );
%     Persisting.P1 <- names( .Persisting.P1.allreads.tbl[ .Persisting.P1.allreads.tbl > 1 ] );
%     .Persisting.P2.allreads <-  .new.CohnData.formatted.likeSCRIData[ grep( "P2\\.[1-5]", .new.CohnData.formatted.likeSCRIData[ , "Pt." ] ), "Read" ];
%     .Persisting.P2.allreads.tbl <- table( .Persisting.P2.allreads );
%     Persisting.P2 <- names( .Persisting.P2.allreads.tbl[ .Persisting.P2.allreads.tbl > 1 ] );
%     .Persisting.P3.allreads <-  .new.CohnData.formatted.likeSCRIData[ grep( "P3\\.[1-5]", .new.CohnData.formatted.likeSCRIData[ , "Pt." ] ), "Read" ];
%     .Persisting.P3.allreads.tbl <- table( .Persisting.P3.allreads );
%     Persisting.P3 <- names( .Persisting.P3.allreads.tbl[ .Persisting.P3.allreads.tbl > 1 ] );
%     ## ERE I AM.  QC FAIL: integration sites are not unique across subjects!!?!
%     ### SEE NOTES
%     sum( .new.CohnData.formatted.likeSCRIData[ , "Read" ] %in% Persisting.P3 )
%     # [1] 70
%     sum( .new.CohnData.formatted.likeSCRIData[ grep( "P3\\.[1-5]", .new.CohnData.formatted.likeSCRIData[ , "Pt." ] ), "Read" ] %in% Persisting.P3 )
%     # [1] 30
%     sum( .new.CohnData.formatted.likeSCRIData[ grep( "P2\\.[1-5]", .new.CohnData.formatted.likeSCRIData[ , "Pt." ] ), "Read" ] %in% Persisting.P3 )
%     # [1] 18
%     sum( .new.CohnData.formatted.likeSCRIData[ grep( "P1\\.[1-5]", .new.CohnData.formatted.likeSCRIData[ , "Pt." ] ), "Read" ] %in% Persisting.P3 )
%     # [1] 6    
%     .new.CohnData.formatted.likeSCRIData[ .new.CohnData.formatted.likeSCRIData[ , "Read" ] == "chr1+168583489", 1:5]
% #        Pt.           Read Gene Strand X1st
% # 47      P7 chr1+168583489 XCL1      +    4
% # 645  P11.2 chr1+168583489 XCL1      +    3
% # 1099  P1.3 chr1+168583489 XCL1      +    3
% # 1570  P2.2 chr1+168583489 XCL1      +   14
% # 2374  P2.4 chr1+168583489 XCL1      +   28
% # 4928  P3.1 chr1+168583489 XCL1      +    9
% # 5169  P3.2 chr1+168583489 XCL1      +    1
% # 5312  P3.3 chr1+168583489 XCL1      +   15
%     # We store in "X2nd" the "Persist" indicator.
%     .new.CohnData.formatted.likeSCRIData[ rownames( .new.CohnData.formatted.likeSCRIData[ grep( "P11\\.[1-5]", .new.CohnData.formatted.likeSCRIData[ , "Pt." ] ), ][ .new.CohnData.formatted.likeSCRIData[ grep( "P11\\.[1-5]", .new.CohnData.formatted.likeSCRIData[ , "Pt." ] ), "Read" ] %in% Persisting.P11, 1:7, drop = FALSE ] ), "X2nd" ] <- 1;
%     .new.CohnData.formatted.likeSCRIData[ rownames( .new.CohnData.formatted.likeSCRIData[ grep( "P1\\.[1-5]", .new.CohnData.formatted.likeSCRIData[ , "Pt." ] ), ][ .new.CohnData.formatted.likeSCRIData[ grep( "P1\\.[1-5]", .new.CohnData.formatted.likeSCRIData[ , "Pt." ] ), "Read" ] %in% Persisting.P1, 1:7, drop = FALSE ] ), "X2nd" ] <- 1;
%     .new.CohnData.formatted.likeSCRIData[ rownames( .new.CohnData.formatted.likeSCRIData[ grep( "P2\\.[1-5]", .new.CohnData.formatted.likeSCRIData[ , "Pt." ] ), ][ .new.CohnData.formatted.likeSCRIData[ grep( "P2\\.[1-5]", .new.CohnData.formatted.likeSCRIData[ , "Pt." ] ), "Read" ] %in% Persisting.P2, 1:7, drop = FALSE ] ), "X2nd" ] <- 1;
%     .new.CohnData.formatted.likeSCRIData[ rownames( .new.CohnData.formatted.likeSCRIData[ grep( "P3\\.[1-5]", .new.CohnData.formatted.likeSCRIData[ , "Pt." ] ), ][ .new.CohnData.formatted.likeSCRIData[ grep( "P3\\.[1-5]", .new.CohnData.formatted.likeSCRIData[ , "Pt." ] ), "Read" ] %in% Persisting.P3, 1:7, drop = FALSE ] ), "X2nd" ] <- 1;
%     
%     # We store in "X3rd" a count of in how many other people this same IS was found (QC VIOLATION since the same IS should never be found across subjects.)
%     .tbl <- table( .new.CohnData.formatted.likeSCRIData[ , "Read" ] );
%     .tbl <- ( .tbl )[ .tbl > 1 ];
%     .result.ignored <- sapply( names( .tbl ), function ( .read.name ) {
%         .new.CohnData.formatted.likeSCRIData[ .new.CohnData.formatted.likeSCRIData[ , "Read" ] == .read.name, "X3rd" ] <<-
%             length( unique( gsub( "^(P\\d+)\\..+$", "\\1", .new.CohnData.formatted.likeSCRIData[ .new.CohnData.formatted.likeSCRIData[ , "Read" ] == .read.name, "Pt." ] ) ) ) - 1;
%         return( NULL );
%     } );
% .new.CohnData.formatted.likeSCRIData[ .new.CohnData.formatted.likeSCRIData[ , "X3rd" ] == 5, 1:6]
% #        Pt.           Read         Gene Strand X1st X2nd
% # 64      P7 chr16+89849408        FANCA      +    4    0
% # 76      P7   chr5+6683517 LOC100505625      +    2    0
% # 185    P10 chr16+89849408        FANCA      +    3    0
% # 325  P11.1 chr16+89849408        FANCA      +    2    1
% # 617  P11.1   chr5+6683517 LOC100505625      +    1    0
% # 681  P11.2 chr16+89849408        FANCA      +    2    1
% # 1164  P1.3   chr5+6683517 LOC100505625      +    6    0
% # 1669  P2.2   chr5+6683517 LOC100505625      +    6    1
% # 2403  P2.4 chr16+89849408        FANCA      +   60    0
% # 2436  P2.4   chr5+6683517 LOC100505625      +   13    1
% # 4977  P3.1   chr5+6683517 LOC100505625      +    6    0
% # 5109  P3.2 chr16+89849408        FANCA      +    4    0
% # 6072    P8 chr16+89849408        FANCA      +    6    0
% # 6658    P4   chr5+6683517 LOC100505625      +    8    0        
%     
%     
% table( .new.CohnData.formatted.likeSCRIData[ , "X3rd" ] )
% #    0    1    2    3    4    5 
% # 6320  212   88   53   32   14     
% 
%     ### TODO: ERE I AM.  QC failed, X3rd should be zero always, but can do these:
%     # NEXT STEPS: unite rows corresponding to the same subject at different times, defining "Proliferating" as Shear > 1 OR Persisting (X2>1)
%     ## NOTE: QC expectation for next step: X2 should be consistent across same IS in multiple times.
%     
%     .result.ignored <- sapply( setdiff( intersect( colnames( .new.CohnData.formatted.likeSCRIData ), colnames( CohnData.formatted.likeSCRIData ) ), colnames( .new.CohnData.formatted.likeSCRIData )[ 1:8 ] ), function( .colname ) {
%         .new.CohnData.formatted.likeSCRIData[ , .colname ] <<-
%             as.numeric( as.character( CohnData.formatted.likeSCRIData[ , .colname ] ) );
%         return( NULL );
%         
%     } );
%     CohnData.in <- CohnData.formatted.likeSCRIData;
%     CohnData.formatted.likeSCRIData <- .new.CohnData.formatted.likeSCRIData;
% } # End if file.exists( CohnData.formatted.likeSCRIData.Rda.filename ) ..
% 
% ## Malderelli data..
% if( file.exists( MalderelliData.formatted.likeSCRIData.Rda.filename ) ) {
%     # loads: MalderelliData.formatted.likeSCRIData.fixed (using the one _after_ Paul added the GO terms)
%     load( MalderelliData.formatted.likeSCRIData.Rda.filename );
%     MalderelliData.formatted.likeSCRIData <-
%         as.data.frame( MalderelliData.formatted.likeSCRIData.fixed );
%     ## Some GO terms have NAs, presumably not seen in Malderelli IS genes.
%     MalderelliData.formatted.likeSCRIData[ is.na( MalderelliData.formatted.likeSCRIData ) ] <- 0;
%     ## Oddly, we lost the work we did below.  So we'll do it again.
%     MalderelliData.formatted.likeSCRIData.compressed <- do.call( rbind, sapply( unique( MalderelliData.formatted.likeSCRIData[ , "Pt." ] ), function( .pt ) { t( apply( as.matrix( unique( MalderelliData.formatted.likeSCRIData[ MalderelliData.formatted.likeSCRIData[ , "Pt." ] == .pt, "Read" ] ) ), 1, function ( .read ) {
%       .rows <- MalderelliData.formatted.likeSCRIData[ ( MalderelliData.formatted.likeSCRIData[ , "Pt." ] == .pt ) & ( MalderelliData.formatted.likeSCRIData[ , "Read" ] == .read ), , drop = FALSE ];
%       stopifnot( !any( is.na( .rows[ , c( "X1st", "X2nd", "X3rd" ) ] ) ) );
%       .rows <- as.matrix( .rows );
%       # Sum up the counts in X1st, etc, in first row & just return that.
%       .rows[ 1, "X1st" ] <- sum( as.numeric( .rows[ , "X1st" ] ) );
%       .rows[ 1, "X2nd" ] <- sum( as.numeric( .rows[ , "X2nd" ] ) );
%       .rows[ 1, "X3rd" ] <- sum( as.numeric( .rows[ , "X3rd" ] ) );
%       .rows[ 1, ]
%   } ) ) } ) );
%   MalderelliData.formatted.likeSCRIData.compressed.df <- as.data.frame( MalderelliData.formatted.likeSCRIData.compressed );
%   MalderelliData.formatted.likeSCRIData.compressed.df[[ "X1st" ]] <-
%       as.integer( as.character( MalderelliData.formatted.likeSCRIData.compressed.df[["X1st"]] ) );
%   MalderelliData.formatted.likeSCRIData.compressed.df[[ "X2nd" ]] <-
%       as.integer( as.character( MalderelliData.formatted.likeSCRIData.compressed.df[["X2nd"]] ) );
%   MalderelliData.formatted.likeSCRIData.compressed.df[[ "X3rd" ]] <-
%       as.integer( as.character( MalderelliData.formatted.likeSCRIData.compressed.df[["X3rd"]] ) );
%   ## Sanity checks: The total number of each time-point-count of ISs should be unchanged:
%   stopifnot( sum( as.numeric( as.character( MalderelliData.formatted.likeSCRIData.compressed.df[[ "X1st" ]]) ) ) == sum( as.numeric( as.character( MalderelliData.formatted.likeSCRIData[[ "X1st" ]] ) ) ) );
%   stopifnot( sum( as.numeric( as.character( MalderelliData.formatted.likeSCRIData.compressed.df[[ "X2nd" ]]) ) ) == sum( as.numeric( as.character( MalderelliData.formatted.likeSCRIData[[ "X2nd" ]] ) ) ) );
%   stopifnot( sum( as.numeric( as.character( MalderelliData.formatted.likeSCRIData.compressed.df[[ "X3rd" ]]) ) ) == sum( as.numeric( as.character( MalderelliData.formatted.likeSCRIData[[ "X3rd" ]] ) ) ) );
%     MalderelliData.formatted.likeSCRIData <- MalderelliData.formatted.likeSCRIData.compressed.df;
% } else {
%     # OLD.  This created the file pre-Claire's-additions; since then she's added GO terms, so we should use the above.
%     stop( "Need to load the MalderelliData to which Claire added GO terms" );
%     
%   ##########
%   ## Load the Malderelli Data.
%   MalderelliDataIncludingNoncoding <- read.csv( MalderelliData.filename, header = TRUE, skip = 1 );
%   MalderelliData <- MalderelliDataIncludingNoncoding[ ( MalderelliDataIncludingNoncoding[ , "Inside.Outside.Gene" ] == "in" ), , drop = FALSE ];
%   MalderelliData.formatted.likeSCRIData <- as.data.frame( matrix( NA, nrow = nrow( MalderelliData ), ncol = ncol( SCRIData ) ) );
%   colnames( MalderelliData.formatted.likeSCRIData ) <- colnames( SCRIData );
%   MalderelliData.formatted.likeSCRIData[ , "Gene" ] <- MalderelliData[ , "Nearest.GeneName" ];
%   MalderelliData.formatted.likeSCRIData[ , "Strand" ] <- MalderelliData[ , "strand" ];
%   MalderelliData.formatted.likeSCRIData[ , "Pt." ] <- gsub( "^(PT\\d)_.+$", "\\1", MalderelliData[ , "sample" ] );
%   
%   # Determine whether it's a first, second, or third time-point.
%   .year <- gsub( "^PT\\d_Y(.+)$", "\\1", MalderelliData[ , "sample" ] );
%   mode( .year ) <- "numeric";
%   ## Note that only subjects PT1 and PT2 have time-course data (among the Malderelli subjects).
%   ## table( MalderelliData.formatted.likeSCRIData[ , "Pt." ], .year )
%   ## #          0  0.2 11.4 12.2 12.9 14.5  4.8  7.2
%   ## #   PT1    0  240 1025    0    0    0   62    0
%   ## #   PT2    0    0    0    0   35    0    0    0
%   ## #   PT3   37    0    0    0    0    0    0  234
%   ## #   PT4    0    0    0  185    0    0    0    0
%   ## #   PT5    0    0    0    0    0   87    0    0
%   ## From Wagner (SCRI) paper: A total of 534 proviral integration sites were sequenced from three participants (B1, L1, and R1) at three time-points each; after 1-2.3, 4.1- 8.2 and 11.3-12.7 years of suppressive ART (Fig. 1, A to C).
%   ## So we'll bin these like so:
%   X1.max <- 2.3;
%   X2.max <- 8.2;
%   .X <- ifelse( .year > X1.max, ifelse( .year > X2.max, "X3rd", "X2nd" ), "X1st" );
%   ## Here is where we set the values in MalderelliData.formatted.likeSCRIData[ , "X1st" ], etc.:
%   .result.ignored <- sapply( unique( .X ), function( .x ) { MalderelliData.formatted.likeSCRIData[ .X == .x, .x ] <<- 1; MalderelliData.formatted.likeSCRIData[ .X != .x, .x ] <<- 0;} );
%   
%   ## To determine whether the read is the same in the MalderelliData, we use "Adjusted.chr.strand.site.to.3LTR".
%   MalderelliData.formatted.likeSCRIData[ , "Read" ] <- MalderelliData[ , "Adjusted.chr.strand.site.to.3LTR" ];
%   
%   ## At this point, MalderelliData.formatted.likeSCRIData has multiple rows for identical ISs.  Here we merge them.
%   ## NOTE: Unexpectedly, some ISs are shared _ACROSS SUBJECTS_!!!  Contamination?  Concern?
%   ## HERE ARE THE 6 SITES, EACH FOUND IN TWO SUBJECTS:
%   # [1] chr16+24026618
%   # [1] "PT1" "PT2"
%   # [1] chr17+76757796
%   # [1] "PT1" "PT2"
%   # [1] chr2+159370503
%   # [1] "PT1" "PT2"
%   # [1] chr20-43561100
%   # [1] "PT1" "PT3"
%   # [1] chr5-50035007
%   # [1] "PT1" "PT2"
%   ## TODO: Talk with Jim about this.
%   MalderelliData.formatted.likeSCRIData.compressed <- do.call( rbind, sapply( unique( MalderelliData.formatted.likeSCRIData[ , "Pt." ] ), function( .pt ) { t( apply( as.matrix( unique( MalderelliData.formatted.likeSCRIData[ MalderelliData.formatted.likeSCRIData[ , "Pt." ] == .pt, "Read" ] ) ), 1, function ( .read ) {
%       .rows <- MalderelliData.formatted.likeSCRIData[ ( MalderelliData.formatted.likeSCRIData[ , "Pt." ] == .pt ) & ( MalderelliData.formatted.likeSCRIData[ , "Read" ] == .read ), , drop = FALSE ];
%       stopifnot( !any( is.na( .rows[ , c( "X1st", "X2nd", "X3rd" ) ] ) ) );
%       .rows <- as.matrix( .rows );
%       # Sum up the counts in X1st, etc, in first row & just return that.
%       .rows[ 1, "X1st" ] <- sum( as.numeric( .rows[ , "X1st" ] ) );
%       .rows[ 1, "X2nd" ] <- sum( as.numeric( .rows[ , "X2nd" ] ) );
%       .rows[ 1, "X3rd" ] <- sum( as.numeric( .rows[ , "X3rd" ] ) );
%       .rows[ 1, ]
%   } ) ) } ) );
%   MalderelliData.formatted.likeSCRIData.compressed.df <- as.data.frame( MalderelliData.formatted.likeSCRIData.compressed );
%   MalderelliData.formatted.likeSCRIData.compressed.df[[ "X1st" ]] <-
%       as.integer( as.character( MalderelliData.formatted.likeSCRIData.compressed.df[["X1st"]] ) );
%   MalderelliData.formatted.likeSCRIData.compressed.df[[ "X2nd" ]] <-
%       as.integer( as.character( MalderelliData.formatted.likeSCRIData.compressed.df[["X2nd"]] ) );
%   MalderelliData.formatted.likeSCRIData.compressed.df[[ "X3rd" ]] <-
%       as.integer( as.character( MalderelliData.formatted.likeSCRIData.compressed.df[["X3rd"]] ) );
%   ## Sanity checks: The total number of each time-point-count of ISs should be unchanged:
%   stopifnot( sum( as.numeric( as.character( MalderelliData.formatted.likeSCRIData.compressed.df[[ "X1st" ]]) ) ) == sum( as.numeric( as.character( MalderelliData.formatted.likeSCRIData[[ "X1st" ]] ) ) ) );
%   stopifnot( sum( as.numeric( as.character( MalderelliData.formatted.likeSCRIData.compressed.df[[ "X2nd" ]]) ) ) == sum( as.numeric( as.character( MalderelliData.formatted.likeSCRIData[[ "X2nd" ]] ) ) ) );
%   stopifnot( sum( as.numeric( as.character( MalderelliData.formatted.likeSCRIData.compressed.df[[ "X3rd" ]]) ) ) == sum( as.numeric( as.character( MalderelliData.formatted.likeSCRIData[[ "X3rd" ]] ) ) ) );
%   
%   ## Need to set up genes. Load the map from EntrezAnnot.filename, called "entrez_annot", a named list (named by GO Terms) of lists of human gene names (that is, each entry is a list of genes).
%   ### CURRENTLY MISSING SOME TERMS !!! SEE BELOW !!!!
%   load( EntrezAnnot.filename );
%   # Change colons to dot for consistency with the colnames.
%   names( entrez_annot ) <- gsub( ":", ".", names( entrez_annot ) );
%   all.genes.with.GO <- setdiff( unique( unlist( entrez_annot ) ), "" );
%   # GO.by.gene <- list();
%   # .result.ignored <- sapply( names( entrez_annot ), function ( .go.term ) { sapply( entrez_annot[[ .go.term ]], function ( .gene ) { if( .gene == "" ) { return( NULL ); }; if( .gene %in% names( GO.by.gene ) ) { GO.by.gene[[ .gene ]] <<- c( GO.by.gene[[ .gene ]], .go.term ); } else { GO.by.gene[[ .gene ]] <<- .go.term; }; return( NULL ); } ); return( NULL ); } );
%   # stopifnot( length( all.genes.with.GO ) == length( GO.by.gene ) );
%   .go.term.columns <- intersect( names( entrez_annot ), colnames( MalderelliData.formatted.likeSCRIData ) );
%   ## UH-OH: SOMEHOW WE'RE MISSING SOME GO TERMS ?!
%   setdiff( grep( "^GO\\.", colnames( SCRIData ), value = T ), .go.term.columns )
%   #  [1] "GO.0045768"   "GO.0045005"   "GO.0002419"   "GO.0002420"   "GO.0002857"  
%   #  [6] "GO.0002837"   "GO.0030575"   "GO.0051656"   "GO.0048583"   "GO.1901184"  
%   # [11] "GO.0014742"   "GO.2000113"   "GO.1901185"   "GO.0018212"   "GO.0071841"  
%   # [16] "GO.0010558"   "GO.0090398.1" "GO.0031294"   "GO.0009799"   "GO.0070665"  
%   # [21] "GO.0071840"   "GO.0071842"   "GO.0031498"   "GO.0032986"   "GO.0051276.1"
%   # [26] "GO.0031327"   "GO.0014743"   "GO.0045787.1"
%   .missing.go.terms <-  setdiff( grep( "^GO", colnames( SCRIData ), value = T ), names( entrez_annot )  )
%   .missing.go.terms
% #  [1] "GO.0045768"   "GO.0045005"   "GO.0002419"   "GO.0002420"   "GO.0002857"  
% #  [6] "GO.0002837"   "GO.0030575"   "GO.0051656"   "GO.0048583"   "GO.1901184"  
% # [11] "GO.0014742"   "GO.2000113"   "GO.1901185"   "GO.0018212"   "GO.0071841"  
% # [16] "GO.0010558"   "GO.0090398.1" "GO.0031294"   "GO.0009799"   "GO.0070665"  
% # [21] "GO.0071840"   "GO.0071842"   "GO.0031498"   "GO.0032986"   "GO.0051276.1"
% # [26] "GO.0031327"   "GO.0014743"   "GO.0045787.1"
%   
%   #### # END DEBUGGING MISSING GO TERMS NOTE: CLAIRE POSTPROCESSED THIS TO FIX THE GO TERMS, SEE BELOW
%   
%   ## First fill in all the straight-up GO term columns.
%   MalderelliData.formatted.likeSCRIData[ , .go.term.columns ] <- 0;
%   .result.ignored <- sapply( .go.term.columns, function ( .go.term ) {
%       .genes.for.go.term <- ( entrez_annot )[[ .go.term ]];
%       MalderelliData.formatted.likeSCRIData[ MalderelliData.formatted.likeSCRIData$Gene %in% .genes.for.go.term, .go.term ] <<- 1;
%       return( NULL );
%   } );
%   
%   ## NOTE: 
%   save( MalderelliData.formatted.likeSCRIData, file = MalderelliData.formatted.likeSCRIData.Rda.filename );
%   ##### END LOADING and processing MALDERELLI DATA -- note this is _before_ Claire added the GO terms.
% } # End if the Rda file exists, load it, otherwise create it.
% 
% recomputeSummaryColumnsInGOTermTable <- function ( .Data.formatted.likeSCRIData ) {
%   GO.selfSuff <- c("GO.0009967","GO.0030307","GO.0008284","GO.0045787","GO.0007165");
%   GO.insensitivity <- c("GO.0009968","GO.0030308","GO.0008285","GO.0045786","GO.0007165");
%   GO.evadingApo <- c("GO.0043069","GO.0043066","GO.0045768");
%   GO.limitless <- c("GO.0001302","GO.0032206","GO.0090398");
%   GO.sustained <- c("GO.0045765","GO.0045766","GO.0030949","GO.0001570");
%   GO.tissue <- c("GO.0042060","GO.0007162","GO.0033631","GO.0044331","GO.0001837","GO.0016477","GO.0048870","GO.0007155");
%   GO.genome <- c("GO.0051276","GO.0045005","GO.0006281");
%   GO.tumor <- c("GO.0002419","GO.0002420","GO.0002857","GO.0002842","GO.0002367","GO.0050776");
%   GO.reprogramming <- c("GO.0006096","GO.0071456");
%   GO.evadingImm <- c("GO.0002837","GO.0002418","GO.0002367","GO.0050776");
%   
%   cancerGeneList <-
%       read.table( CancerGenes.filename, header=F, string=F )[ , 1 ];
%   
%   selfSuff.cols <- which( colnames( .Data.formatted.likeSCRIData ) %in% GO.selfSuff );
%   .Data.formatted.likeSCRIData[ , "is.SelfSuff.GO" ] <-
%       ifelse( apply( .Data.formatted.likeSCRIData[ , selfSuff.cols, drop = FALSE ], 1, function( .row ) { sum( as.numeric( .row, na.rm = TRUE ) ) } ) > 0, 1, 0 );
%   
%   insensitivity.cols <- which( colnames( .Data.formatted.likeSCRIData ) %in% GO.insensitivity );
%   .Data.formatted.likeSCRIData[ , "is.insensitivity.GO" ] <-
%       ifelse( apply( .Data.formatted.likeSCRIData[ , insensitivity.cols, drop = FALSE ], 1, function( .row ) { sum( as.numeric( .row, na.rm = TRUE ) ) } ) > 0 , 1 , 0 );
%   
%   evadingApo.cols <- which( colnames( .Data.formatted.likeSCRIData ) %in% GO.evadingApo );
%   .Data.formatted.likeSCRIData[ , "is.evadingApo.GO" ] <-
%       ifelse( apply( .Data.formatted.likeSCRIData[ , evadingApo.cols, drop = FALSE ], 1, function( .row ) { sum( as.numeric( .row, na.rm = TRUE ) ) } ) > 0, 1, 0 );
%   
%   limitless.cols <- which( colnames( .Data.formatted.likeSCRIData ) %in% GO.limitless );
%   .Data.formatted.likeSCRIData[ , "is.limitless.GO" ] <-
%    ifelse( apply( .Data.formatted.likeSCRIData[ , limitless.cols, drop = FALSE ], 1, function( .row ) { sum( as.numeric( .row, na.rm = TRUE ) ) } ) > 0 , 1 , 0 );
%   
%   sustained.cols <- which( colnames( .Data.formatted.likeSCRIData ) %in% GO.sustained );
%   .Data.formatted.likeSCRIData[ , "is.sustained.GO" ] <-
%    ifelse( apply( .Data.formatted.likeSCRIData[ , sustained.cols, drop = FALSE ], 1, function( .row ) { sum( as.numeric( .row, na.rm = TRUE ) ) } ) > 0 , 1 , 0 );
%   
%   tissue.cols <- which( colnames( .Data.formatted.likeSCRIData ) %in% GO.tissue );
%   .Data.formatted.likeSCRIData[ , "is.tissue.GO" ] <-
%    ifelse( apply( .Data.formatted.likeSCRIData[ , tissue.cols, drop = FALSE ], 1, function( .row ) { sum( as.numeric( .row, na.rm = TRUE ) ) } ) > 0 , 1 , 0 );
%   
%   genome.cols <- which( colnames( .Data.formatted.likeSCRIData ) %in% GO.genome );
%   .Data.formatted.likeSCRIData[ , "is.genome.GO" ] <-
%    ifelse( apply( .Data.formatted.likeSCRIData[ , genome.cols, drop = FALSE ], 1, function( .row ) { sum( as.numeric( .row, na.rm = TRUE ) ) } ) > 0 , 1 , 0 );
%   
%   tumor.cols <- which( colnames( .Data.formatted.likeSCRIData ) %in% GO.tumor );
%   .Data.formatted.likeSCRIData[ , "is.tumor.GO" ] <-
%    ifelse( apply( .Data.formatted.likeSCRIData[ , tumor.cols, drop = FALSE ], 1, function( .row ) { sum( as.numeric( .row, na.rm = TRUE ) ) } ) > 0 , 1 , 0 );
%   
%   reprogramming.cols <- which( colnames( .Data.formatted.likeSCRIData ) %in% GO.reprogramming );
%   .Data.formatted.likeSCRIData[ , "is.reprogramming.GO" ] <-
%    ifelse( apply( .Data.formatted.likeSCRIData[ , reprogramming.cols, drop = FALSE ], 1, function( .row ) { sum( as.numeric( .row, na.rm = TRUE ) ) } ) > 0 , 1 , 0 );
%   
%   evadingImm.cols <- which( colnames( .Data.formatted.likeSCRIData ) %in% GO.evadingImm );
%   .Data.formatted.likeSCRIData[ , "is.evadingImm.GO" ] <-
%       ifelse( apply( .Data.formatted.likeSCRIData[ , evadingImm.cols, drop = FALSE ], 1, function( .row ) { sum( as.numeric( .row, na.rm = TRUE ) ) } ) > 0 , 1 , 0 );
%   
%   isAnyCancer.cols <- 9:48;
%   .Data.formatted.likeSCRIData[ , "isAnyCancer.GO" ] <-
%    ifelse( apply( .Data.formatted.likeSCRIData[ , isAnyCancer.cols, drop = FALSE ], 1, function( .row ) { sum( as.numeric( .row, na.rm = TRUE ) ) } ) > 0 , 1 , 0 );
%   
%   #and lump by ANY cancer-related categories
%   isAnyCancer.cols <- 9:48;
%   .Data.formatted.likeSCRIData[ , "isAnyCancer.GO" ] <-
%       ifelse( apply( .Data.formatted.likeSCRIData[ , isAnyCancer.cols, drop = FALSE ], 1, function( .row ) { sum( as.numeric( .row, na.rm = TRUE ) ) } ) > 0 , 1 , 0 );
%   
%   isCancer.rows <- which( .Data.formatted.likeSCRIData$Gene %in% cancerGeneList );
%   .Data.formatted.likeSCRIData[ , "isCancer" ] <- 0;
%   .Data.formatted.likeSCRIData[ isCancer.rows, "isCancer" ] <- 1;
%   
%   .Data.formatted.likeSCRIData[ , "isAnyTop20.GO" ] <-
%       ifelse( apply( .Data.formatted.likeSCRIData[ , 61:80 ], 1, function( .row ) { sum( as.numeric( .row, na.rm = TRUE ) ) } ) > 0 , 1, 0 );
%   
%   return( .Data.formatted.likeSCRIData );
% } # recomputeSummaryColumnsInGOTermTable (..)
% 
% ## For actual analysis, use this.  This ensures that the columns calculated from other columns are correct.
% MalderelliData.formatted.likeSCRIData[ , Wang.all.features ] <-
%   apply( MalderelliData.formatted.likeSCRIData[ , Wang.all.features ], 1:2, function ( .x ) { as.numeric( as.character( .x ) ) } );
% MalderelliData <-
%      recomputeSummaryColumnsInGOTermTable( MalderelliData.formatted.likeSCRIData );
% MalderelliData$Pt. <- as.character( MalderelliData$Pt. );
% MalderelliData.subjectIDs <- unique( MalderelliData$Pt. );
% 
% CohnData <-
%     recomputeSummaryColumnsInGOTermTable( CohnData.formatted.likeSCRIData );
% CohnData.formatted.likeSCRIData[ , Wang.all.features ] <-
%   apply( CohnData.formatted.likeSCRIData[ , Wang.all.features ], 1:2, function ( .x ) { as.numeric( as.character( .x ) ) } );
% CohnData$Pt. <- as.character( CohnData$Pt. );
% CohnData.subjectIDs <- unique( CohnData$Pt. );
% 
% #### A little bit more setup.
% ## MalderelliData:
% MalderelliData.observed.at.time <- apply( MalderelliData[, c( "X1st", "X2nd", "X3rd" ) ], 1:2, function( .x ) { as.numeric( .x > 0 ) } );
% 
% MalderelliData.treatment.genes <- unique( MalderelliData$Gene );
% 
% ### Sanity checks.
% # None of the integration sites should have zero integrations over all time points.
% stopifnot( all( apply( MalderelliData.observed.at.time, 1, sum ) > 0 ) );
% # Passes.
% 
% # For some reason we are redundantly storing the gene information.  Make sure it's consistent.
% ## This is very slow so I'm commenting it out now (it passes, see below).
% #  .result.ignored <- sapply( unique( MalderelliData$Gene ), function ( .gene ) {
% #      print( .gene );
% #      stopifnot( all( apply( MalderelliData[ MalderelliData$Gene == .gene, first.feature.column:ncol( MalderelliData ) ], 2, function ( .column ) { all( .column == .column[ 1 ] ) } ) ) );
% #      return( NULL );
% #  } );
% # Passes.
% ### End sanity checks.
% 
% # We've realized that persist is incorrect; we should call it "proliferating" and it should be 1 iff there are more than 1 observations of an integration site at any time, not just across multiple time points.
% MalderelliData[ , "Proliferating" ] <- as.numeric( apply( MalderelliData[ , c( "X1st", "X2nd", "X3rd" ) ], 1, sum ) > 1 );
% stopifnot( all( MalderelliData[ , "Proliferating" ] == as.numeric( apply( MalderelliData[ , c( "X1st", "X2nd", "X3rd" ) ], 1, sum ) > 1 ) ) );
% 
% ## TODO: More setup for the Cohn data EG NEED TO SPREAD OVER TIME POINTS (not for main analysis though; only for time-course analyses) AND NEED TO SETUP "PROLIFERATING"
% 
% ###############################################################################################
% #### Tenofovir
% 
% ## Add the "isDownregulatedByTenofovir.Rectal" feature to the SCRIData.
% SCRIData <- cbind( SCRIData, as.numeric( SCRIData$Gene %in% TenofovirData.Rectal.downregulatedGenes ) );
% colnames( SCRIData )[ length( SCRIData ) ] <- "isDownregulatedByTenofovir.Rectal";
% # NA those excluded from the array or array comparison.
% # mean( SCRIData$Gene %in% SCRINotRectal )
% # [1] 0.3142857
% SCRIData[ SCRIData$Gene %in% SCRINotRectal, "isDownregulatedByTenofovir.Rectal" ] <- NA;
% ## Add the "isUpregulatedByTenofovir.Rectal" feature to the SCRIData.
% SCRIData <- cbind( SCRIData, as.numeric( SCRIData$Gene %in% TenofovirData.Rectal.upregulatedGenes ) );
% colnames( SCRIData )[ length( SCRIData ) ] <- "isUpregulatedByTenofovir.Rectal";
% # NA those excluded from the array or array comparison.
% SCRIData[ SCRIData$Gene %in% SCRINotRectal, "isUpregulatedByTenofovir.Rectal" ] <- NA;
% ## Add the "isDownregulatedByTenofovir.exvivo" feature (as ANY of the exvivo.downregulatedGenes.by.kind)
% SCRIData <- cbind( SCRIData, as.numeric( SCRIData$Gene %in% TenofovirData.exvivo.downregulatedGenes.any ) );
% colnames( SCRIData )[ length( SCRIData ) ] <- "isDownregulatedByTenofovir.exvivo";
% # NA those excluded from the array or array comparison.
% # mean( SCRIData$Gene %in% SCRINotExVivo )
% # [1] 0.7396825
% SCRIData[ SCRIData$Gene %in% SCRINotExVivo, "isDownregulatedByTenofovir.exvivo" ] <- NA;
% ## For each of the fold-change comparisons, add the "isDownregulatedByTenofovir.exvivo" feature (as ANY of the exvivo.downregulatedGenes.by.kind).
% .new.cols <-
%   sapply( TenofovirData.exvivo.downregulatedGenes.by.kind, function ( .genes ) { as.numeric( SCRIData$Gene %in% .genes ) } );
% colnames( .new.cols ) <- paste( "isDownregulatedByTenofovir.exvivo", colnames( .new.cols ), sep = "." );
% SCRIData <- cbind( SCRIData, .new.cols );
% ## Add the "isUpregulatedByTenofovir.exvivo" feature (as ANY of the exvivo.upregulatedGenes.by.kind)
% SCRIData <- cbind( SCRIData, as.numeric( SCRIData$Gene %in% TenofovirData.exvivo.upregulatedGenes.any ) );
% colnames( SCRIData )[ length( SCRIData ) ] <- "isUpregulatedByTenofovir.exvivo";
% # NA those excluded from the array or array comparison.
% SCRIData[ SCRIData$Gene %in% SCRINotExVivo, "isUpregulatedByTenofovir.exvivo" ] <- NA;
% ## For each of the fold-change comparisons, add the "isUpregulatedByTenofovir.exvivo" feature (as ANY of the exvivo.upregulatedGenes.by.kind).
% .new.cols <-
%   sapply( TenofovirData.exvivo.upregulatedGenes.by.kind, function ( .genes ) { as.numeric( SCRIData$Gene %in% .genes ) } );
% colnames( .new.cols ) <- paste( "isUpregulatedByTenofovir.exvivo", colnames( .new.cols ), sep = "." );
% SCRIData <- cbind( SCRIData, .new.cols );
% 
% ### Same for Malderelli data
% ## Add the "isDownregulatedByTenofovir.Rectal" feature to the MalderelliData.
% MalderelliData <- cbind( MalderelliData, as.numeric( MalderelliData$Gene %in% TenofovirData.Rectal.downregulatedGenes ) );
% colnames( MalderelliData )[ length( MalderelliData ) ] <- "isDownregulatedByTenofovir.Rectal";
% # NA those excluded from the array or array comparison.
% # mean( MalderelliData$Gene %in% MalderelliNotRectal )
% # [1] 0.2776935
% MalderelliData[ MalderelliData$Gene %in% MalderelliNotRectal, "isDownregulatedByTenofovir.Rectal" ] <- NA;
% ## Add the "isUpregulatedByTenofovir.Rectal" feature to the MalderelliData.
% MalderelliData <- cbind( MalderelliData, as.numeric( MalderelliData$Gene %in% TenofovirData.Rectal.upregulatedGenes ) );
% colnames( MalderelliData )[ length( MalderelliData ) ] <- "isUpregulatedByTenofovir.Rectal";
% # NA those excluded from the array or array comparison.
% MalderelliData[ MalderelliData$Gene %in% MalderelliNotRectal, "isUpregulatedByTenofovir.Rectal" ] <- NA;
% ## Add the "isDownregulatedByTenofovir.exvivo" feature (as ANY of the exvivo.downregulatedGenes.by.kind)
% MalderelliData <- cbind( MalderelliData, as.numeric( MalderelliData$Gene %in% TenofovirData.exvivo.downregulatedGenes.any ) );
% colnames( MalderelliData )[ length( MalderelliData ) ] <- "isDownregulatedByTenofovir.exvivo";
% # NA those excluded from the array or array comparison.
% mean( MalderelliData$Gene %in% MalderelliNotExVivo )
% # [1] 0.7951442
% MalderelliData[ MalderelliData$Gene %in% MalderelliNotExVivo, "isDownregulatedByTenofovir.exvivo" ] <- NA;
% ## For each of the fold-change comparisons, add the "isDownregulatedByTenofovir.exvivo" feature (as ANY of the exvivo.downregulatedGenes.by.kind).
% .new.cols <-
%   sapply( TenofovirData.exvivo.downregulatedGenes.by.kind, function ( .genes ) { as.numeric( MalderelliData$Gene %in% .genes ) } );
% colnames( .new.cols ) <- paste( "isDownregulatedByTenofovir.exvivo", colnames( .new.cols ), sep = "." );
% MalderelliData <- cbind( MalderelliData, .new.cols );
% ## Add the "isUpregulatedByTenofovir.exvivo" feature (as ANY of the exvivo.upregulatedGenes.by.kind)
% MalderelliData <- cbind( MalderelliData, as.numeric( MalderelliData$Gene %in% TenofovirData.exvivo.upregulatedGenes.any ) );
% colnames( MalderelliData )[ length( MalderelliData ) ] <- "isUpregulatedByTenofovir.exvivo";
% # NA those excluded from the array or array comparison.
% MalderelliData[ MalderelliData$Gene %in% MalderelliNotExVivo, "isUpregulatedByTenofovir.exvivo" ] <- NA;
% ## For each of the fold-change comparisons, add the "isUpregulatedByTenofovir.exvivo" feature (as ANY of the exvivo.upregulatedGenes.by.kind).
% .new.cols <-
%   sapply( TenofovirData.exvivo.upregulatedGenes.by.kind, function ( .genes ) { as.numeric( MalderelliData$Gene %in% .genes ) } );
% colnames( .new.cols ) <- paste( "isUpregulatedByTenofovir.exvivo", colnames( .new.cols ), sep = "." );
% MalderelliData <- cbind( MalderelliData, .new.cols );
% 
% ### Same for Cohn data
% ## Add the "isDownregulatedByTenofovir.Rectal" feature to the CohnData.
% CohnData <- cbind( CohnData, as.numeric( CohnData$Gene %in% TenofovirData.Rectal.downregulatedGenes ) );
% colnames( CohnData )[ length( CohnData ) ] <- "isDownregulatedByTenofovir.Rectal";
% # NA those excluded from the array or array comparison.
% mean( CohnData$Gene %in% CohnNotRectal )
% 
% CohnData[ CohnData$Gene %in% CohnNotRectal, "isDownregulatedByTenofovir.Rectal" ] <- NA;
% ## Add the "isUpregulatedByTenofovir.Rectal" feature to the CohnData.
% CohnData <- cbind( CohnData, as.numeric( CohnData$Gene %in% TenofovirData.Rectal.upregulatedGenes ) );
% colnames( CohnData )[ length( CohnData ) ] <- "isUpregulatedByTenofovir.Rectal";
% # NA those excluded from the array or array comparison.
% CohnData[ CohnData$Gene %in% CohnNotRectal, "isUpregulatedByTenofovir.Rectal" ] <- NA;
% ## Add the "isDownregulatedByTenofovir.exvivo" feature (as ANY of the exvivo.downregulatedGenes.by.kind)
% CohnData <- cbind( CohnData, as.numeric( CohnData$Gene %in% TenofovirData.exvivo.downregulatedGenes.any ) );
% colnames( CohnData )[ length( CohnData ) ] <- "isDownregulatedByTenofovir.exvivo";
% # NA those excluded from the array or array comparison.
% # mean( CohnData$Gene %in% CohnNotExVivo )
% 
% CohnData[ CohnData$Gene %in% CohnNotExVivo, "isDownregulatedByTenofovir.exvivo" ] <- NA;
% ## For each of the fold-change comparisons, add the "isDownregulatedByTenofovir.exvivo" feature (as ANY of the exvivo.downregulatedGenes.by.kind).
% .new.cols <-
%   sapply( TenofovirData.exvivo.downregulatedGenes.by.kind, function ( .genes ) { as.numeric( CohnData$Gene %in% .genes ) } );
% colnames( .new.cols ) <- paste( "isDownregulatedByTenofovir.exvivo", colnames( .new.cols ), sep = "." );
% CohnData <- cbind( CohnData, .new.cols );
% ## Add the "isUpregulatedByTenofovir.exvivo" feature (as ANY of the exvivo.upregulatedGenes.by.kind)
% CohnData <- cbind( CohnData, as.numeric( CohnData$Gene %in% TenofovirData.exvivo.upregulatedGenes.any ) );
% colnames( CohnData )[ length( CohnData ) ] <- "isUpregulatedByTenofovir.exvivo";
% # NA those excluded from the array or array comparison.
% CohnData[ CohnData$Gene %in% CohnNotExVivo, "isUpregulatedByTenofovir.exvivo" ] <- NA;
% ## For each of the fold-change comparisons, add the "isUpregulatedByTenofovir.exvivo" feature (as ANY of the exvivo.upregulatedGenes.by.kind).
% .new.cols <-
%   sapply( TenofovirData.exvivo.upregulatedGenes.by.kind, function ( .genes ) { as.numeric( CohnData$Gene %in% .genes ) } );
% colnames( .new.cols ) <- paste( "isUpregulatedByTenofovir.exvivo", colnames( .new.cols ), sep = "." );
% CohnData <- cbind( CohnData, .new.cols );
% 
% ### Same for Wang data
% ## Add the "isDownregulatedByTenofovir.Rectal" feature to the WangData.
% WangData <- cbind( WangData, as.numeric( WangData$Gene %in% TenofovirData.Rectal.downregulatedGenes ) );
% colnames( WangData )[ length( WangData ) ] <- "isDownregulatedByTenofovir.Rectal";
% # NA those excluded from the array or array comparison.
% # mean( WangData$Gene %in% WangNotRectal )
% # [1] 0.3021096
% WangData[ WangData$Gene %in% WangNotRectal, "isDownregulatedByTenofovir.Rectal" ] <- NA;
% ## Add the "isUpregulatedByTenofovir.Rectal" feature to the WangData.
% WangData <- cbind( WangData, as.numeric( WangData$Gene %in% TenofovirData.Rectal.upregulatedGenes ) );
% colnames( WangData )[ length( WangData ) ] <- "isUpregulatedByTenofovir.Rectal";
% # NA those excluded from the array or array comparison.
% WangData[ WangData$Gene %in% WangNotRectal, "isUpregulatedByTenofovir.Rectal" ] <- NA;
% ## Add the "isDownregulatedByTenofovir.exvivo" feature (as ANY of the exvivo.downregulatedGenes.by.kind)
% WangData <- cbind( WangData, as.numeric( WangData$Gene %in% TenofovirData.exvivo.downregulatedGenes.any ) );
% colnames( WangData )[ length( WangData ) ] <- "isDownregulatedByTenofovir.exvivo";
% # NA those excluded from the array or array comparison.
% # mean( WangData$Gene %in% WangNotExVivo )
% # [1] 0.8028075
% WangData[ WangData$Gene %in% WangNotExVivo, "isDownregulatedByTenofovir.exvivo" ] <- NA;
% ## For each of the fold-change comparisons, add the "isDownregulatedByTenofovir.exvivo" feature (as ANY of the exvivo.downregulatedGenes.by.kind).
% .new.cols <-
%   sapply( TenofovirData.exvivo.downregulatedGenes.by.kind, function ( .genes ) { as.numeric( WangData$Gene %in% .genes ) } );
% colnames( .new.cols ) <- paste( "isDownregulatedByTenofovir.exvivo", colnames( .new.cols ), sep = "." );
% WangData <- cbind( WangData, .new.cols );
% ## Add the "isUpregulatedByTenofovir.exvivo" feature (as ANY of the exvivo.upregulatedGenes.by.kind)
% WangData <- cbind( WangData, as.numeric( WangData$Gene %in% TenofovirData.exvivo.upregulatedGenes.any ) );
% colnames( WangData )[ length( WangData ) ] <- "isUpregulatedByTenofovir.exvivo";
% # NA those excluded from the array or array comparison.
% WangData[ WangData$Gene %in% WangNotExVivo, "isUpregulatedByTenofovir.exvivo" ] <- NA;
% ## For each of the fold-change comparisons, add the "isUpregulatedByTenofovir.exvivo" feature (as ANY of the exvivo.upregulatedGenes.by.kind).
% .new.cols <-
%   sapply( TenofovirData.exvivo.upregulatedGenes.by.kind, function ( .genes ) { as.numeric( WangData$Gene %in% .genes ) } );
% colnames( .new.cols ) <- paste( "isUpregulatedByTenofovir.exvivo", colnames( .new.cols ), sep = "." );
% WangData <- cbind( WangData, .new.cols );
% 
% ######################################################################
% ### Setup for the main analysis: logical table of features for each gene
% ## Aggregate Wang data by gene.
% WangData.num.uniqueIS.by.gene <- sapply( Wang.genes, function ( .gene ) {
%     sum( WangData$Gene == .gene )
% } );
% WangData.num.IS.by.gene <- WangData.num.uniqueIS.by.gene;
% 
% Wang.feature.by.gene <- 
%   t( sapply( Wang.genes, function ( .gene ) {
%       WangData[ which( WangData$Gene == .gene )[ 1 ], first.feature.column:ncol( WangData ) ]
% } ) );
% mode( Wang.feature.by.gene ) <- "logical";
% 
% Wang.all.features <- colnames( WangData )[ first.feature.column:ncol( WangData ) ];
% 
% ## Also make a combined dataset of the Malderelli and SCRI subjects (TODO: ADD Cohn too?)
% SCRIMalderelliData <- rbind( SCRIData, MalderelliData );
% SCRIMalderelliData.observed.at.time <- apply( SCRIMalderelliData[, c( "X1st", "X2nd", "X3rd" ) ], 1:2, function( .x ) { as.numeric( .x > 0 ) } );
% stopifnot( all( apply( SCRIMalderelliData.observed.at.time, 1, sum ) > 0 ) );
% 
% SCRIMalderelliData.treatment.genes <- unique( SCRIMalderelliData$Gene );
% SCRIMalderelliData.subjectIDs <- c( SCRIData.subjectIDs, as.character( MalderelliData.subjectIDs ) );
% 
% save( WangData, WangData.num.uniqueIS.by.gene,
%      WangData.num.IS.by.gene, Wang.feature.by.gene, Wang.all.features,
%      SCRIData, SCRIData.observed.at.time,
%      SCRIData.treatment.genes, SCRIData.subjectIDs,
%      MalderelliData, MalderelliData.observed.at.time,
%      MalderelliData.treatment.genes, MalderelliData.subjectIDs,
%      SCRIMalderelliData, SCRIMalderelliData.observed.at.time,
%      SCRIMalderelliData.treatment.genes, SCRIMalderelliData.subjectIDs,
%      file = "Tenofovir_vs_ISs_DATA_LOADED.Rda" );
% DATA.ARE.LOADED.ALREADY <- TRUE;
% 
% } # end if DATA.ARE.LOADED.ALREADY .. else .
% 
% Wang.genes <- unique( WangData$Gene );
% Wang.all.features <- colnames( WangData )[ first.feature.column:ncol( WangData ) ];
% 
% @
% 
\section{SCRIMalderelli and Malderelli Data (combined) vs Wang Data}
<<echo = FALSE, results = hide>>=

## Setup first for unique ISs analysis
SCRIMalderelliData.num.uniqueIS.by.subject <- as.matrix( sapply( SCRIMalderelliData.subjectIDs, function ( .subject.id ) {
  sum( SCRIMalderelliData$Pt. == .subject.id );
} ) );
SCRIMalderelliData.num.uniqueIS.subjectsTotal <- nrow( SCRIMalderelliData );
SCRIMalderelliData.num.uniqueIS.proliferating.subjectsTotal <- sum( SCRIMalderelliData$Proliferating > 0 );
SCRIMalderelliData.num.uniqueIS.nonproliferating.subjectsTotal <- sum( SCRIMalderelliData$Proliferating == 0 );
# Features of the observed unique IS data, by subject (aggregating over times).
SCRIMalderelliData.num.uniqueIS.by.subject.by.feature <- 
  t( sapply( SCRIMalderelliData.subjectIDs, function( .subject.id ) {
      sapply( Wang.all.features, function ( .feature ) {
          sum( ( SCRIMalderelliData$Pt. == .subject.id ) & !is.na( SCRIMalderelliData[ , .feature ] ) & ( SCRIMalderelliData[ , .feature ] > 0 ) );
      } )
  } ) );
## Features of the observed unique IS data (aggregating over subjects and times).
SCRIMalderelliData.num.uniqueIS.by.feature <- 
  sapply( Wang.all.features, function ( .feature ) {
      sum( !is.na( SCRIMalderelliData[ , .feature ] ) & SCRIMalderelliData[ , .feature ] > 0 );
  } );
## Again, but for only the proliferating ISs.
SCRIMalderelliData.num.uniqueIS.proliferating.by.feature <- 
  sapply( Wang.all.features, function ( .feature ) {
      sum( ( SCRIMalderelliData$Proliferating > 0 ) & !is.na( SCRIMalderelliData[ , .feature ] ) & ( SCRIMalderelliData[ , .feature ] > 0 ) );
  } );
## Again, but for only the nonproliferating ISs.
SCRIMalderelliData.num.uniqueIS.nonproliferating.by.feature <- 
  sapply( Wang.all.features, function ( .feature ) {
      sum( ( SCRIMalderelliData$Proliferating == 0 ) & !is.na( SCRIMalderelliData[ , .feature ] ) & ( SCRIMalderelliData[ , .feature ] > 0 ) );
  } );

# Cooccurence.  Use mean number of unique ISs in genes with any IS.
SCRIMalderelliData.num.uniqueIS.meanHitsPerGene.by.subject <- 
  sapply( SCRIMalderelliData.subjectIDs, function( .subject.id ) {
      mean( table( SCRIMalderelliData[ ( SCRIMalderelliData$Pt. == .subject.id ), "Gene" ] ) )
  } );
SCRIMalderelliData.num.uniqueIS.meanHitsPerGene <- 
    mean( table( SCRIMalderelliData[ , "Gene" ] ) );
SCRIMalderelliData.num.uniqueIS.proliferating.meanHitsPerGene <- 
    mean( table( SCRIMalderelliData[ ( SCRIMalderelliData$Proliferating > 0 ), "Gene" ] ) );
SCRIMalderelliData.num.uniqueIS.nonproliferating.meanHitsPerGene <- 
    mean( table( SCRIMalderelliData[ ( SCRIMalderelliData$Proliferating == 0 ), "Gene" ] ) );

# Cooccurence: # genes with multiple subjects
SCRIMalderelliData.num.uniqueIS.by.subject.by.gene <- 
  sapply( SCRIMalderelliData.subjectIDs, function( .subject.id ) {
      table( SCRIMalderelliData[ ( SCRIMalderelliData$Pt. == .subject.id ), "Gene" ] )
  } );
SCRIMalderelliData.num.subjects.by.gene <- sapply( names( unlist( unname( SCRIMalderelliData.num.uniqueIS.by.subject.by.gene ) ) ), function( .gene ) { sum( sapply( SCRIMalderelliData.num.uniqueIS.by.subject.by.gene, function( .SCRIMalderelliData.num.uniqueIS.by.gene ) { .gene %in% names( .SCRIMalderelliData.num.uniqueIS.by.gene ) } ) ) } );
SCRIMalderelliData.uniqueIS.twoSubjectGenes <- unique( names( SCRIMalderelliData.num.subjects.by.gene[ SCRIMalderelliData.num.subjects.by.gene > 1 ] ) );
SCRIMalderelliData.num.uniqueIS.twoSubjectGenes <- length( SCRIMalderelliData.uniqueIS.twoSubjectGenes );

## Generate num.samples samples of sizes SCRIMalderelliData.num.uniqueIS.by.subject and SCRIMalderelliData.num.uniqueIS.subjectsTotal
SCRIMalderelliData.num.uniqueIS.by.subject.and.total.and.totalProliferating <- c( SCRIMalderelliData.num.uniqueIS.by.subject, SCRIMalderelliData.num.uniqueIS.subjectsTotal, SCRIMalderelliData.num.uniqueIS.proliferating.subjectsTotal, SCRIMalderelliData.num.uniqueIS.nonproliferating.subjectsTotal );
names( SCRIMalderelliData.num.uniqueIS.by.subject.and.total.and.totalProliferating )[ 1:length( SCRIMalderelliData.subjectIDs ) ] <- SCRIMalderelliData.subjectIDs;
names( SCRIMalderelliData.num.uniqueIS.by.subject.and.total.and.totalProliferating )[ ( length( SCRIMalderelliData.num.uniqueIS.by.subject ) + 1 ):length( SCRIMalderelliData.num.uniqueIS.by.subject.and.total.and.totalProliferating ) ] <- c( "total", "totalProliferating", "totalNonproliferating" );

## Setup next for genesWithAnyISs analysis
SCRIMalderelliData.num.genesWithAnyISs.by.subject <- as.matrix( sapply( SCRIMalderelliData.subjectIDs, function ( .subject.id ) {
  length( unique( SCRIMalderelliData[ SCRIMalderelliData$Pt. == .subject.id, "Gene" ] ) );
} ) );
SCRIMalderelliData.num.genesWithAnyISs.subjectsTotal <-
    length( unique( SCRIMalderelliData$Gene ) );
SCRIMalderelliData.num.genesWithAnyISs.proliferating.subjectsTotal <- length( unique( SCRIMalderelliData[ SCRIMalderelliData$Proliferating > 0, "Gene" ] ) );
SCRIMalderelliData.num.genesWithAnyISs.nonproliferating.subjectsTotal <- length( unique( SCRIMalderelliData[ SCRIMalderelliData$Proliferating == 0, "Gene" ] ) )
# Features of the observed unique IS data, by subject (aggregating over times).
SCRIMalderelliData.num.genesWithAnyISs.by.subject.by.feature <- 
  t( sapply( SCRIMalderelliData.subjectIDs, function( .subject.id ) {
      sapply( Wang.all.features, function ( .feature ) {
          length( unique( SCRIMalderelliData[ ( ( SCRIMalderelliData$Pt. == .subject.id ) & !is.na( SCRIMalderelliData[ , .feature ] ) & ( SCRIMalderelliData[ , .feature ] > 0 ) ), "Gene" ] ) );
      } )
  } ) );
## Features of the observed unique IS data (aggregating over subjects and times).
SCRIMalderelliData.num.genesWithAnyISs.by.feature <- 
  sapply( Wang.all.features, function ( .feature ) {
      length( unique( SCRIMalderelliData[ !is.na( SCRIMalderelliData[ , .feature ] ) & ( SCRIMalderelliData[ , .feature ] > 0 ), "Gene" ] ) );
  } );
## Again, but for only the proliferating ISs.
SCRIMalderelliData.num.genesWithAnyISs.proliferating.by.feature <- 
  sapply( Wang.all.features, function ( .feature ) {
      length( unique( SCRIMalderelliData[ ( ( SCRIMalderelliData$Proliferating > 0 ) & !is.na( SCRIMalderelliData[ , .feature ] ) & ( SCRIMalderelliData[ , .feature ] > 0 ) ), "Gene" ] ) );
  } );
## Again, but for only the nonproliferating ISs.
SCRIMalderelliData.num.genesWithAnyISs.nonproliferating.by.feature <- 
  sapply( Wang.all.features, function ( .feature ) {
      length( unique( SCRIMalderelliData[ ( ( SCRIMalderelliData$Proliferating == 0 ) & !is.na( SCRIMalderelliData[ , .feature ] ) & ( SCRIMalderelliData[ , .feature ] > 0 ) ), "Gene" ] ) );
  } );

## Generate num.samples samples of sizes SCRIMalderelliData.num.genesWithAnyISs.by.subject and SCRIMalderelliData.num.genesWithAnyISs.subjectsTotal
SCRIMalderelliData.num.genesWithAnyISs.by.subject.and.total.and.totalProliferating <- c( SCRIMalderelliData.num.genesWithAnyISs.by.subject, SCRIMalderelliData.num.genesWithAnyISs.subjectsTotal, SCRIMalderelliData.num.genesWithAnyISs.proliferating.subjectsTotal, SCRIMalderelliData.num.genesWithAnyISs.nonproliferating.subjectsTotal );
names( SCRIMalderelliData.num.genesWithAnyISs.by.subject.and.total.and.totalProliferating )[ 1:length( SCRIMalderelliData.subjectIDs ) ] <- SCRIMalderelliData.subjectIDs;
names( SCRIMalderelliData.num.genesWithAnyISs.by.subject.and.total.and.totalProliferating )[ ( length( SCRIMalderelliData.num.genesWithAnyISs.by.subject ) + 1 ):length( SCRIMalderelliData.num.genesWithAnyISs.by.subject.and.total.and.totalProliferating ) ] <- c( "total", "totalProliferating", "totalNonproliferating" );

### Setup next for all ISs analysis
SCRIMalderelliData.num.IS.by.subject <- as.matrix( sapply( SCRIMalderelliData.subjectIDs, function ( .subject.id ) {
  sum( SCRIMalderelliData[ SCRIMalderelliData$Pt. == .subject.id, c( "X1st", "X2nd", "X3rd" ) ] );
} ) );
# None of the ISs was observed in more than one subject, so we just count the rows.
SCRIMalderelliData.num.IS.subjectsTotal <- sum( SCRIMalderelliData[ , c( "X1st", "X2nd", "X3rd" ) ] );
SCRIMalderelliData.num.IS.proliferating.subjectsTotal <- sum( SCRIMalderelliData[ SCRIMalderelliData$Proliferating > 0, c( "X1st", "X2nd", "X3rd" ) ] );
SCRIMalderelliData.num.IS.nonproliferating.subjectsTotal <- sum( SCRIMalderelliData[ SCRIMalderelliData$Proliferating == 0, c( "X1st", "X2nd", "X3rd" ) ] );
## Features of the observed IS data, by subject (aggregating over times).
SCRIMalderelliData.num.IS.by.subject.by.feature <- 
  t( sapply( SCRIMalderelliData.subjectIDs, function( .subject.id ) {
      #print( .subject.id );
      sapply( colnames( Wang.feature.by.gene ), function ( .feature ) {
          #print( .feature );
          if( sum( ( SCRIMalderelliData$Pt. == .subject.id ) & !is.na( SCRIMalderelliData[ , .feature ] ) & ( SCRIMalderelliData[ , .feature ] > 0 ) ) == 0 ) {
              return( 0 );
          }
          return( sum( apply( SCRIMalderelliData[ ( SCRIMalderelliData$Pt. == .subject.id ) & !is.na( SCRIMalderelliData[ , .feature ] ) & ( SCRIMalderelliData[ , .feature ] > 0 ), time.points, drop = FALSE ], 1, sum ) ) );
      } )
  } ) );
## Features of the observed IS data (aggregating over subjects and times).
SCRIMalderelliData.num.IS.by.feature <- 
    apply( SCRIMalderelliData.num.IS.by.subject.by.feature, 2, sum );
## Again, but for only the proliferating ISs.
SCRIMalderelliData.num.IS.proliferating.by.subject.by.feature <- 
  t( sapply( SCRIMalderelliData.subjectIDs, function( .subject.id ) {
      #print( .subject.id );
      sapply( colnames( Wang.feature.by.gene ), function ( .feature ) {
          #print( .feature );
          if( sum( ( SCRIMalderelliData$Pt. == .subject.id ) & ( SCRIMalderelliData$Proliferating > 0 ) & !is.na( SCRIMalderelliData[ , .feature ] ) & ( SCRIMalderelliData[ , .feature ] > 0 ) ) == 0 ) {
              return( 0 );
          }
          return( sum( apply( SCRIMalderelliData[ ( SCRIMalderelliData$Pt. == .subject.id ) & ( SCRIMalderelliData$Proliferating > 0 ) & !is.na( SCRIMalderelliData[ , .feature ] ) & ( SCRIMalderelliData[ , .feature ] > 0 ), time.points, drop = FALSE ], 1, sum ) ) );
      } )
  } ) );
SCRIMalderelliData.num.IS.proliferating.by.feature <- 
    apply( SCRIMalderelliData.num.IS.proliferating.by.subject.by.feature, 2, sum );
## Again, but for only the nonproliferating ISs.
SCRIMalderelliData.num.IS.nonproliferating.by.subject.by.feature <- 
  t( sapply( SCRIMalderelliData.subjectIDs, function( .subject.id ) {
      #print( .subject.id );
      sapply( colnames( Wang.feature.by.gene ), function ( .feature ) {
          #print( .feature );
          if( sum( ( SCRIMalderelliData$Pt. == .subject.id ) & ( SCRIMalderelliData$Proliferating == 0 ) & !is.na( SCRIMalderelliData[ , .feature ] ) & ( SCRIMalderelliData[ , .feature ] > 0 ) ) == 0 ) {
              return( 0 );
          }
          return( sum( apply( SCRIMalderelliData[ ( SCRIMalderelliData$Pt. == .subject.id ) & ( SCRIMalderelliData$Proliferating == 0 ) & !is.na( SCRIMalderelliData[ , .feature ] ) & ( SCRIMalderelliData[ , .feature ] > 0 ), time.points, drop = FALSE ], 1, sum ) ) );
      } )
  } ) );
SCRIMalderelliData.num.IS.nonproliferating.by.feature <- 
    apply( SCRIMalderelliData.num.IS.nonproliferating.by.subject.by.feature, 2, sum );

## Generate num.samples samples of sizes SCRIMalderelliData.num.IS.by.subject and SCRIMalderelliData.num.IS.subjectsTotal
SCRIMalderelliData.num.IS.by.subject.and.total.and.totalProliferating <- c( SCRIMalderelliData.num.IS.by.subject[ , 1 ], SCRIMalderelliData.num.IS.subjectsTotal, SCRIMalderelliData.num.IS.proliferating.subjectsTotal, SCRIMalderelliData.num.IS.nonproliferating.subjectsTotal );
names( SCRIMalderelliData.num.IS.by.subject.and.total.and.totalProliferating )[ ( length( SCRIMalderelliData.num.IS.by.subject ) + 1 ):length( SCRIMalderelliData.num.IS.by.subject.and.total.and.totalProliferating ) ] <- c( "total", "totalProliferating", "totalNonproliferating" );

# SCRIMalderelliData.num.IS.by.subject.and.total.and.totalProliferating
#                L1                 B1                 R1              total 
#                114                137                174                425 
# totalProliferating 
#                144 
### For reference, from uniqueISs:
# SCRIMalderelliData.num.uniqueIS.by.subject.and.total.and.totalProliferating
#                L1                 B1                 R1              total 
#                 74                 90                151                315 
# totalProliferating 
#                 34 


### Finally, setup for IS counts analyses.
SCRIMalderelliData.num.countIS.by.subject <- 
    sapply( SCRIMalderelliData.subjectIDs, function( .subject.id ) {
        apply( SCRIMalderelliData[ ( SCRIMalderelliData$Pt. == .subject.id ), time.points ], 1, sum );
    } );
SCRIMalderelliData.num.countIS.total <- do.call( c, SCRIMalderelliData.num.countIS.by.subject );
SCRIMalderelliData.num.countIS.totalProliferating <-
    apply( SCRIMalderelliData[ ( SCRIMalderelliData$Proliferating > 0 ), time.points ], 1, sum );
SCRIMalderelliData.num.countIS.totalNonproliferating <-
    apply( SCRIMalderelliData[ ( SCRIMalderelliData$Proliferating == 0 ), time.points ], 1, sum );
SCRIMalderelliData.num.countIS.by.subject.and.total.and.totalProliferating <- c( SCRIMalderelliData.num.countIS.by.subject, list( total = SCRIMalderelliData.num.countIS.total ), list( totalProliferating = SCRIMalderelliData.num.countIS.totalProliferating, totalNonproliferating = SCRIMalderelliData.num.countIS.totalNonproliferating ) );

## Ok so the sum should be the same as this:
# SCRIMalderelliData.num.IS.by.subject.and.total.and.totalProliferating
#                L1                 B1                 R1              total 
#                114                137                174                425 
# totalProliferating 
#                144 
stopifnot( all( sapply( SCRIMalderelliData.num.countIS.by.subject.and.total.and.totalProliferating, sum ) == SCRIMalderelliData.num.IS.by.subject.and.total.and.totalProliferating ) );
## And the number of entries should be the number of uniqueISs:
# SCRIMalderelliData.num.uniqueIS.by.subject.and.total.and.totalProliferating
#                L1                 B1                 R1              total 
#                 74                 90                151                315 
# totalProliferating 
#                 34 
stopifnot( all( sapply( SCRIMalderelliData.num.countIS.by.subject.and.total.and.totalProliferating, length ) == SCRIMalderelliData.num.uniqueIS.by.subject.and.total.and.totalProliferating ) );
@

<<echo = FALSE, results = hide>>=
if( exists( "SCRIMalderelli.uniqueIS.SAMPLES.ARE.LOADED.ALREADY" ) && SCRIMalderelli.uniqueIS.SAMPLES.ARE.LOADED.ALREADY ) {
    ## GREAT.
} else {
if( file.exists( SCRIMalderelliData.the.samples.Rda.filename ) ) {
    load( file = SCRIMalderelliData.the.samples.Rda.filename );
} else {
    set.seed( the.seed );
    SCRIMalderelliData.the.samples <- lapply( SCRIMalderelliData.num.uniqueIS.by.subject.and.total.and.totalProliferating, function ( .SCRIMalderelliData.num.integration.sites ) {
        print( .SCRIMalderelliData.num.integration.sites );
        rHypergeo( num.samples, WangData.num.uniqueIS.by.gene, .SCRIMalderelliData.num.integration.sites );
    } );
    names( SCRIMalderelliData.the.samples ) <- names( SCRIMalderelliData.num.uniqueIS.by.subject.and.total.and.totalProliferating );
    save( SCRIMalderelliData.the.samples, file = SCRIMalderelliData.the.samples.Rda.filename );
}

### Analysis based on the samples (uniqueISs)
if( file.exists( SCRIMalderelliData.feature.nulls.Rda.filename ) ) {
  load( file = SCRIMalderelliData.feature.nulls.Rda.filename );
} else {
  SCRIMalderelliData.feature.nulls <- lapply( SCRIMalderelliData.the.samples, function ( .the.samples ) {
      sapply( Wang.all.features, function ( .feature ) {
          .feature.genes <- names( which( Wang.feature.by.gene[ , .feature ] ) );
          if( length( .feature.genes ) == 0 ) {
              return( rep( 0, nrow( .the.samples ) ) );
          } else {
              return( apply( .the.samples[ , .feature.genes, drop = FALSE ], 1, sum ) );
          }
      } )
  } );
  save( SCRIMalderelliData.feature.nulls, file = SCRIMalderelliData.feature.nulls.Rda.filename );
}
  
# Cooccurence null.  Use mean number of unique ISs in genes with any IS.
if( file.exists( SCRIMalderelliData.cooccurrence.nulls.Rda.filename ) ) {
  load( file = SCRIMalderelliData.cooccurrence.nulls.Rda.filename );
} else {
  SCRIMalderelliData.cooccurrence.nulls <- lapply( SCRIMalderelliData.the.samples, function ( .the.samples ) {
      apply( .the.samples, 1, function ( .counts.by.gene ) { mean( .counts.by.gene[ .counts.by.gene > 0 ] ) } )
  } );
  names( SCRIMalderelliData.cooccurrence.nulls ) <- names( SCRIMalderelliData.the.samples );
  save( SCRIMalderelliData.cooccurrence.nulls, file = SCRIMalderelliData.cooccurrence.nulls.Rda.filename );
}

if( file.exists( SCRIMalderelliData.cooccurrence.twoSubjectGenes.nulls.Rda.filename ) ) {
  load( file = SCRIMalderelliData.cooccurrence.twoSubjectGenes.nulls.Rda.filename );
} else {
  ## we now do this is a new way, using a null that conditions on the number of genes containing any ISs.
  SCRIMalderelliData.num.genesWithISs.by.subject <- 
    sapply( SCRIMalderelliData.subjectIDs, function( .subject.id ) {
        length( table( SCRIMalderelliData[ ( SCRIMalderelliData$Pt. == .subject.id ), "Gene" ] ) )
    } );
  
  set.seed( the.seed );
  SCRIMalderelliData.cooccurrence.twoSubjectGenes.nulls <- sapply( 1:num.samples.cooccurrence.twoSubjectGenes, function ( .sample.i ) {
    print( .sample.i );
      .genes.by.subject <- 
        sapply( SCRIMalderelliData.num.genesWithISs.by.subject, function( .SCRIMalderelliData.num.genesWithISs ) {
           sample( names( WangData.num.uniqueIS.by.gene ), size = .SCRIMalderelliData.num.genesWithISs, prob = WangData.num.uniqueIS.by.gene, replace = FALSE )
         } );
      .SCRIMalderelliData.num.uniqueIS.twoSubjectGenes <- 
        sum( table( unlist( .genes.by.subject ) ) >= 2 );
      return( .SCRIMalderelliData.num.uniqueIS.twoSubjectGenes );
    } );
  save( SCRIMalderelliData.cooccurrence.twoSubjectGenes.nulls, file = SCRIMalderelliData.cooccurrence.twoSubjectGenes.nulls.Rda.filename );
}

SCRIMalderelli.uniqueIS.SAMPLES.ARE.LOADED.ALREADY <- TRUE;
} # End if SCRIMalderelli.uniqueIS.SAMPLES.ARE.LOADED.ALREADY .. else ..
@

\subsection{IS Counts}

<<echo = FALSE, results = hide>>=
if( exists( "SCRIMalderelli.countIS.SAMPLES.ARE.LOADED.ALREADY" ) && SCRIMalderelli.countIS.SAMPLES.ARE.LOADED.ALREADY ) {
    ## GREAT.
} else {
if( file.exists( SCRIMalderelliData.countIS.the.samples.Rda.filename ) ) {
    load( file = SCRIMalderelliData.countIS.the.samples.Rda.filename );
} else {
    # Note that we reuse the samples drawn for analyzing uniqueISs; we just change them so the total count is all ISs, rather than unique ISs.
    SCRIMalderelliData.countIS.the.samples <- lapply( names( SCRIMalderelliData.num.countIS.by.subject.and.total.and.totalProliferating ), function ( .the.result ) {
        .num.ISs.for.each.uniqueIS <- SCRIMalderelliData.num.countIS.by.subject.and.total.and.totalProliferating[[ .the.result ]];
        print( .num.ISs.for.each.uniqueIS );
        .SCRIMalderelliData.num.integration.sites <- length( .num.ISs.for.each.uniqueIS );
        # For simplicity we draw the # of unique ISs per gene, then we randomly assign the .num.ISs.for.each.uniqueIS to them.
        # But we can use the draws we've already drawn (SCRIMalderelliData.the.samples).
        .the.samples <-
        apply( SCRIMalderelliData.the.samples[[ .the.result ]], 1, function( .one.sample.num.uniqueISs.per.gene ) {
            # pre-condition: total count is # unique ISs.
            print( sum( .one.sample.num.uniqueISs.per.gene ));
            stopifnot( sum( .one.sample.num.uniqueISs.per.gene ) == SCRIMalderelliData.num.uniqueIS.by.subject.and.total.and.totalProliferating[[ .the.result ]] );
            # Randomly shuffle the values of .num.ISs.for.each.uniqueIS and replicate each uniqueIS the corresponding number of times.
            ..SCRIMalderelliData.num.integration.sites.shuffled <- sample( .num.ISs.for.each.uniqueIS );
            ..SCRIMalderelliData.num.integration.sites.shuffled.index <- 0;
            .sample.num.ISs.per.gene <-
            sapply( .one.sample.num.uniqueISs.per.gene, function( .num.for.gene ) {
                if( .num.for.gene == 0 ) {
                    return( 0 );
                }
                .rv <- sum( ..SCRIMalderelliData.num.integration.sites.shuffled[ ..SCRIMalderelliData.num.integration.sites.shuffled.index + 1:.num.for.gene ] );
                #print( .rv );
                ..SCRIMalderelliData.num.integration.sites.shuffled.index <<- ..SCRIMalderelliData.num.integration.sites.shuffled.index + .num.for.gene;
                return( .rv );
            } );
            # post-condition: total count is # all ISs.
            stopifnot( sum( .sample.num.ISs.per.gene ) == SCRIMalderelliData.num.IS.by.subject.and.total.and.totalProliferating[[ .the.result ]] );
            #print( sum( .sample.num.ISs.per.gene ) );
            return( .sample.num.ISs.per.gene );
        } );
        return( t( .the.samples ) );
    } );
    names( SCRIMalderelliData.countIS.the.samples ) <- names( SCRIMalderelliData.num.countIS.by.subject.and.total.and.totalProliferating );
    save( SCRIMalderelliData.countIS.the.samples, file = SCRIMalderelliData.countIS.the.samples.Rda.filename );
}

## SCRIMalderelliData.the.samples no longer used starting here.
if( exists( "SCRIMalderelliData.the.samples" ) ) {
  rm( "SCRIMalderelliData.the.samples" );
  gc();
}

### Analysis based on the samples (just like for allISs analysis).
if( file.exists( SCRIMalderelliData.countIS.feature.nulls.Rda.filename ) ) {
    load( file = SCRIMalderelliData.countIS.feature.nulls.Rda.filename );
} else {
    SCRIMalderelliData.countIS.feature.nulls <- lapply( SCRIMalderelliData.countIS.the.samples, function ( .the.samples ) {
        sapply( colnames( Wang.feature.by.gene ), function ( .feature ) {
            print( .feature );
            .feature.genes <- names( which( Wang.feature.by.gene[ , .feature ] ) );
            if( length( .feature.genes ) == 0 ) {
                return( rep( 0, nrow( .the.samples ) ) );
            } else {
                return( apply( .the.samples[ , .feature.genes, drop = FALSE ], 1, sum ) );
            }
        } )
    } );
    save( SCRIMalderelliData.countIS.feature.nulls, file = SCRIMalderelliData.countIS.feature.nulls.Rda.filename );
}
SCRIMalderelli.countIS.SAMPLES.ARE.LOADED.ALREADY <- TRUE;
} # End if SCRIMalderelli.countIS.SAMPLES.ARE.LOADED.ALREADY .. else ..
@

<<echo = FALSE>>=
## SCRIMalderelliData.countIS.the.samples no longer used starting here.
if( exists( "SCRIMalderelliData.countIS.the.samples" ) ) {
  rm( "SCRIMalderelliData.countIS.the.samples" );
  gc();
}
@ 

<<echo = FALSE, results = hide>>=
if( exists( "SCRIMalderelli.countIS.P.VALUES.ARE.COMPUTED.ALREADY" ) && SCRIMalderelli.countIS.P.VALUES.ARE.COMPUTED.ALREADY ) {
    ## GREAT.
} else {

## Calculate conservative two-sided p-values for the observed number of ISs with each feature exceeding the observed number.
# first, for each subject separately:
SCRIMalderelliData.countIS.p.values.by.feature.by.subject <-
  t( sapply( SCRIMalderelliData.subjectIDs, function( .subject.id ) {
      sapply( colnames( Wang.feature.by.gene ), function ( .feature ) {
          calculatePValue( SCRIMalderelliData.num.IS.by.subject.by.feature[ .subject.id, .feature ], SCRIMalderelliData.countIS.feature.nulls[[ .subject.id ]] )
      } )
  } ) );
# Next, for all subjects pooled:
SCRIMalderelliData.countIS.p.values.by.feature <-
  sapply( colnames( Wang.feature.by.gene ), function ( .feature ) {
      calculatePValue( SCRIMalderelliData.num.IS.by.feature[ .feature ], SCRIMalderelliData.countIS.feature.nulls[[ "total" ]][ , .feature ] )
  } );
# Finally, for all subjects pooled, but just looking at proliferating IS counts:
SCRIMalderelliData.countIS.p.values.proliferating.by.feature <-
  sapply( colnames( Wang.feature.by.gene ), function ( .feature ) {
      calculatePValue( SCRIMalderelliData.num.IS.proliferating.by.feature[ .feature ], SCRIMalderelliData.countIS.feature.nulls[[ "totalProliferating" ]][ , .feature ] )
  } );
# Finally, for all subjects pooled, but just looking at nonproliferating IS counts:
SCRIMalderelliData.countIS.p.values.nonproliferating.by.feature <-
  sapply( colnames( Wang.feature.by.gene ), function ( .feature ) {
      calculatePValue( SCRIMalderelliData.num.IS.nonproliferating.by.feature[ .feature ], SCRIMalderelliData.countIS.feature.nulls[[ "totalNonproliferating" ]][ , .feature ] )
  } );
## Note that we pre-specified that we'd ignore all but the top 20 GO terms, but we lazily did the analysis for all of them.

.isFeatures <- grep( "^is", names( SCRIMalderelliData.countIS.p.values.proliferating.by.feature ), value = T )
primaryFeatures.Tenofovir <- c( "isDownregulatedByTenofovir.exvivo", "isUpregulatedByTenofovir.exvivo", "isDownregulatedByTenofovir.Rectal", "isUpregulatedByTenofovir.Rectal" );
primaryFeatures.GO <- c( "isAnyTop20.GO" );
primaryFeatures.cancer <- c( "isCancer", "isAnyCancer.GO" );
secondaryFeatures.Tenofovir <- setdiff( grep( "Tenofovir", .isFeatures, value = TRUE ), primaryFeatures.Tenofovir );
secondaryFeatures.cancer10 <- setdiff( .isFeatures, c( primaryFeatures.GO, primaryFeatures.cancer, primaryFeatures.Tenofovir, secondaryFeatures.Tenofovir ) );
stopifnot( length( secondaryFeatures.cancer10 ) == 10 );
individualGOFeatures.Hallmark40 <- names( SCRIMalderelliData.countIS.p.values.proliferating.by.feature )[ 1:40 ];
stopifnot( length( individualGOFeatures.Hallmark40 ) == 40 );
individualGOFeatures.top20 <- names( SCRIMalderelliData.countIS.p.values.proliferating.by.feature )[ 53:(53 + 19) ];
stopifnot( length( individualGOFeatures.top20 ) == 20 );

# FWER-correct (using "holm" method) the p-values for the cancer10 and the Hallmark40 and the top20.
SCRIMalderelliData.countIS.p.values.by.feature.by.subject.adjusted <- t( apply( SCRIMalderelliData.countIS.p.values.by.feature.by.subject, 1, function( .p.values.by.feature ) {
    .p.values.by.feature[ primaryFeatures.Tenofovir ] <- p.adjust( .p.values.by.feature[ primaryFeatures.Tenofovir ], method = "holm" );
    .p.values.by.feature[ secondaryFeatures.Tenofovir ] <- p.adjust( .p.values.by.feature[ secondaryFeatures.Tenofovir ], method = "holm" );
    .p.values.by.feature[ secondaryFeatures.cancer10 ] <- p.adjust( .p.values.by.feature[ secondaryFeatures.cancer10 ], method = "holm" );
    .p.values.by.feature[ individualGOFeatures.Hallmark40 ] <- p.adjust( .p.values.by.feature[ individualGOFeatures.Hallmark40 ], method = "holm" );
    .p.values.by.feature[ individualGOFeatures.top20 ] <- p.adjust( .p.values.by.feature[ individualGOFeatures.top20 ], method = "holm" );
    return( .p.values.by.feature );
} ) );
SCRIMalderelliData.countIS.p.values.by.feature.adjusted <- SCRIMalderelliData.countIS.p.values.by.feature;
SCRIMalderelliData.countIS.p.values.by.feature.adjusted[ primaryFeatures.Tenofovir ] <- p.adjust( SCRIMalderelliData.countIS.p.values.by.feature[ primaryFeatures.Tenofovir ], method = "holm" );
SCRIMalderelliData.countIS.p.values.by.feature.adjusted[ secondaryFeatures.Tenofovir ] <- p.adjust( SCRIMalderelliData.countIS.p.values.by.feature[ secondaryFeatures.Tenofovir ], method = "holm" );
SCRIMalderelliData.countIS.p.values.by.feature.adjusted[ secondaryFeatures.cancer10 ] <- p.adjust( SCRIMalderelliData.countIS.p.values.by.feature[ secondaryFeatures.cancer10 ], method = "holm" );
SCRIMalderelliData.countIS.p.values.by.feature.adjusted[ individualGOFeatures.Hallmark40 ] <- p.adjust( SCRIMalderelliData.countIS.p.values.by.feature[ individualGOFeatures.Hallmark40 ], method = "holm" );
SCRIMalderelliData.countIS.p.values.by.feature.adjusted[ individualGOFeatures.top20 ] <- p.adjust( SCRIMalderelliData.countIS.p.values.by.feature[ individualGOFeatures.top20 ], method = "holm" );

## adjust the proliferating results
SCRIMalderelliData.countIS.p.values.proliferating.by.feature.adjusted <- SCRIMalderelliData.countIS.p.values.proliferating.by.feature;
SCRIMalderelliData.countIS.p.values.proliferating.by.feature.adjusted[ primaryFeatures.Tenofovir ] <- p.adjust( SCRIMalderelliData.countIS.p.values.proliferating.by.feature[ primaryFeatures.Tenofovir ], method = "holm" );
SCRIMalderelliData.countIS.p.values.proliferating.by.feature.adjusted[ secondaryFeatures.Tenofovir ] <- p.adjust( SCRIMalderelliData.countIS.p.values.proliferating.by.feature[ secondaryFeatures.Tenofovir ], method = "holm" );
SCRIMalderelliData.countIS.p.values.proliferating.by.feature.adjusted[ secondaryFeatures.cancer10 ] <- p.adjust( SCRIMalderelliData.countIS.p.values.proliferating.by.feature[ secondaryFeatures.cancer10 ], method = "holm" );
SCRIMalderelliData.countIS.p.values.proliferating.by.feature.adjusted[ individualGOFeatures.Hallmark40 ] <- p.adjust( SCRIMalderelliData.countIS.p.values.proliferating.by.feature[ individualGOFeatures.Hallmark40 ], method = "holm" );
SCRIMalderelliData.countIS.p.values.proliferating.by.feature.adjusted[ individualGOFeatures.top20 ] <- p.adjust( SCRIMalderelliData.countIS.p.values.proliferating.by.feature[ individualGOFeatures.top20 ], method = "holm" );

## adjust the nonproliferating results
SCRIMalderelliData.countIS.p.values.nonproliferating.by.feature.adjusted <- SCRIMalderelliData.countIS.p.values.nonproliferating.by.feature;
SCRIMalderelliData.countIS.p.values.nonproliferating.by.feature.adjusted[ primaryFeatures.Tenofovir ] <- p.adjust( SCRIMalderelliData.countIS.p.values.nonproliferating.by.feature[ primaryFeatures.Tenofovir ], method = "holm" );
SCRIMalderelliData.countIS.p.values.nonproliferating.by.feature.adjusted[ secondaryFeatures.Tenofovir ] <- p.adjust( SCRIMalderelliData.countIS.p.values.nonproliferating.by.feature[ secondaryFeatures.Tenofovir ], method = "holm" );
SCRIMalderelliData.countIS.p.values.nonproliferating.by.feature.adjusted[ secondaryFeatures.cancer10 ] <- p.adjust( SCRIMalderelliData.countIS.p.values.nonproliferating.by.feature[ secondaryFeatures.cancer10 ], method = "holm" );
SCRIMalderelliData.countIS.p.values.nonproliferating.by.feature.adjusted[ individualGOFeatures.Hallmark40 ] <- p.adjust( SCRIMalderelliData.countIS.p.values.nonproliferating.by.feature[ individualGOFeatures.Hallmark40 ], method = "holm" );
SCRIMalderelliData.countIS.p.values.nonproliferating.by.feature.adjusted[ individualGOFeatures.top20 ] <- p.adjust( SCRIMalderelliData.countIS.p.values.nonproliferating.by.feature[ individualGOFeatures.top20 ], method = "holm" );

SCRIMalderelli.countIS.P.VALUES.ARE.COMPUTED.ALREADY <- TRUE;
} # End if SCRIMalderelli.countIS.P.VALUES.ARE.COMPUTED.ALREADY .. else ..
@ 


Table~\ref{tab:SCRIMalderelliData.countIS.p.values.by.feature.adjusted.primaryFeatures.cancer} shows the Holm-adjusted p-values of the IS count test evaluating the primary Cancer features in the SCRIMalderelli data set.

\begin{minipage}{\linewidth}
\centering
\par
\bigskip
\captionof{table}{\bf SCRIMalderelli IS counts vs Wang: Holm-adjusted p-values of primary Cancer features} \label{tab:SCRIMalderelliData.countIS.p.values.by.feature.adjusted.primaryFeatures.cancer}
<<echo = FALSE, results = tex>>=
.tab <- as.matrix( SCRIMalderelliData.countIS.p.values.by.feature.adjusted[ primaryFeatures.cancer ] );
colnames( .tab ) <- "Holm-adjusted p-value";
print( xtable( .tab, digits=4 ), floating = FALSE );
@ 
\par
\bigskip
SCRIMalderelli IS counts vs Wang: Holm-adjusted p-values of primary Cancer features.
\par
\bigskip
\end{minipage}
 
 
Figure~\ref{fig:SCRIMalderelliData.countIS.p.value.isCancer} shows the significance of the enrichment of the isCancer feature among SCRIMalderelli IS counts, by showing where the count of ISs with this feature falls in the null distribution that is obtained by independently drawing the appropriate number of unique ISs from the Wang data set without replacement, maintaining the observed distribution of counts of ISs per uniqueIS. The probability of seeing such an extreme count statistic under the null hypothesis that the isCancer feature has the same abundance among SCRIMalderelli IS counts as among Wang IS counts is p\Sexpr{prettyPrintPValuesTo4Digits( SCRIMalderelliData.countIS.p.values.by.feature[ "isCancer" ], " = ", "< " )}.

\begin{minipage}{\linewidth}
\centering
\par
\bigskip
\captionof{figure}{\bf SCRIMalderelli IS counts vs Wang: isCancer} \label{fig:SCRIMalderelliData.countIS.p.value.isCancer}
<<echo = FALSE, results = hide, fig = TRUE>>=
.feature <- "isCancer";
qplot(
    c( SCRIMalderelliData.countIS.feature.nulls[[ "total" ]][ , .feature ] ),
    geom = "histogram",
    main = "Histogram of null counts", 
    xlab = "Counts of ISs in genes that are isCancer",  
    fill=I("blue"), 
    col=I("black"),
    alpha=I(.2) ) + aes( y = ..density.. ) + labs( y = "Density" ) + geom_vline( xintercept = SCRIMalderelliData.num.IS.by.feature[ .feature ], color = "red", linetype = "longdash" );
@ 
\par
\bigskip
SCRIMalderelli IS counts vs Wang: isCancer \par
(p\Sexpr{prettyPrintPValuesTo4Digits( SCRIMalderelliData.countIS.p.values.by.feature[ "isCancer" ], " = ", "< " )})
\par
\bigskip
\end{minipage}

Figure~\ref{fig:SCRIMalderelliData.countIS.p.value.isAnyCancer.GO} shows the significance of the enrichment of the isAnyCancer.GO feature among SCRIMalderelli IS counts, by showing where the count of ISs with this feature falls in the null distribution that is obtained by independently drawing the appropriate number of unique ISs from the Wang data set without replacement, maintaining the observed distribution of counts of ISs per uniqueIS. The probability of seeing such an extreme count statistic under the null hypothesis that the isAnyCancer.GO feature has the same abundance among SCRIMalderelli IS counts as among Wang IS counts is p\Sexpr{prettyPrintPValuesTo4Digits( SCRIMalderelliData.countIS.p.values.by.feature[ "isAnyCancer.GO" ], " = ", "< " )}.

\begin{minipage}{\linewidth}
\centering
\par
\bigskip
\captionof{figure}{\bf SCRIMalderelli IS counts vs Wang: isAnyCancer.GO} \label{fig:SCRIMalderelliData.countIS.p.value.isAnyCancer.GO}
<<echo = FALSE, results = hide, fig = TRUE>>=
.feature <- "isAnyCancer.GO";
qplot(
    c( SCRIMalderelliData.countIS.feature.nulls[[ "total" ]][ , .feature ] ),
    geom = "histogram",
    main = "Histogram of null counts", 
    xlab = "Counts of ISs in genes that are isAnyCancer.GO",  
    fill=I("blue"), 
    col=I("black"),
    alpha=I(.2) ) + aes( y = ..density.. ) + labs( y = "Density" ) + geom_vline( xintercept = SCRIMalderelliData.num.IS.by.feature[ .feature ], color = "red", linetype = "longdash" );
@ 
\par
\bigskip
SCRIMalderelli IS counts vs Wang: isAnyCancer.GO \par
(p\Sexpr{prettyPrintPValuesTo4Digits( SCRIMalderelliData.countIS.p.values.by.feature[ "isAnyCancer.GO" ], " = ", "< " )})
\par
\bigskip
\end{minipage}

Table~\ref{tab:SCRIMalderelliData.countIS.p.values.by.feature.adjusted.primaryFeatures.Tenofovir} shows the Holm-adjusted p-values of the IS count test evaluating the primary Tenofovir features in the SCRIMalderelli data set.

\begin{minipage}{\linewidth}
\centering
\par
\bigskip
\captionof{table}{\bf SCRIMalderelli IS counts vs Wang: Holm-adjusted p-values of primary Tenofovir features} \label{tab:SCRIMalderelliData.countIS.p.values.by.feature.adjusted.primaryFeatures.Tenofovir}
<<echo = FALSE, results = tex>>=
.tab <- as.matrix( SCRIMalderelliData.countIS.p.values.by.feature.adjusted[ primaryFeatures.Tenofovir ] );
colnames( .tab ) <- "Holm-adjusted p-value";
print( xtable( .tab, digits=4 ), floating = FALSE );
@ 
\par
\bigskip
SCRIMalderelli IS counts vs Wang: Holm-adjusted p-values of primary Tenofovir features.
\par
\bigskip
\end{minipage}
 
 
Figure~\ref{fig:SCRIMalderelliData.countIS.p.value.isDownregulatedByTenofovir.Rectal} shows the significance of the enrichment of the isDownregulatedByTenofovir.Rectal feature among SCRIMalderelli IS counts, by showing where the count of ISs with this feature falls in the null distribution that is obtained by independently drawing the appropriate number of unique ISs from the Wang data set without replacement, maintaining the observed distribution of counts of ISs per uniqueIS. The probability of seeing such an extreme count statistic under the null hypothesis that the isDownregulatedByTenofovir.Rectal feature has the same abundance among SCRIMalderelli IS counts as among Wang IS counts is p\Sexpr{prettyPrintPValuesTo4Digits( SCRIMalderelliData.countIS.p.values.by.feature[ "isDownregulatedByTenofovir.Rectal"], " = ", "< " )}.

\begin{minipage}{\linewidth}
\centering
\par
\bigskip
\captionof{figure}{\bf SCRIMalderelli IS counts vs Wang: isDownregulatedByTenofovir.Rectal} \label{fig:SCRIMalderelliData.countIS.p.value.isDownregulatedByTenofovir.Rectal}
<<echo = FALSE, results = hide, fig = TRUE>>=
.feature <- "isDownregulatedByTenofovir.Rectal";
qplot(
    c( SCRIMalderelliData.countIS.feature.nulls[[ "total" ]][ , .feature ] ),
    geom = "histogram",
    main = "Histogram of null counts", 
    xlab = "Counts of ISs in genes that are isDownregulatedByTenofovir.Rectal",  
    fill=I("blue"), 
    col=I("black"),
    alpha=I(.2) ) + aes( y = ..density.. ) + labs( y = "Density" ) + geom_vline( xintercept = SCRIMalderelliData.num.IS.by.feature[ .feature ], color = "red", linetype = "longdash" );
@ 
\par
\bigskip
SCRIMalderelli IS counts vs Wang: isDownregulatedByTenofovir.Rectal \par
(p\Sexpr{prettyPrintPValuesTo4Digits( SCRIMalderelliData.countIS.p.values.by.feature[ "isDownregulatedByTenofovir.Rectal"], " = ", "< " )})
\par
\bigskip
\end{minipage}

Figure~\ref{fig:SCRIMalderelliData.countIS.p.value.isUpregulatedByTenofovir.Rectal} shows the significance of the enrichment of the isUpregulatedByTenofovir.Rectal feature among SCRIMalderelli IS counts, by showing where the count of ISs with this feature falls in the null distribution that is obtained by independently drawing the appropriate number of unique ISs from the Wang data set without replacement, maintaining the observed distribution of counts of ISs per uniqueIS. The probability of seeing such an extreme count statistic under the null hypothesis that the isUpregulatedByTenofovir.Rectal feature has the same abundance among SCRIMalderelli IS counts as among Wang IS counts is p\Sexpr{prettyPrintPValuesTo4Digits( SCRIMalderelliData.countIS.p.values.by.feature[ "isUpregulatedByTenofovir.Rectal"], " = ", "< " )}.

\begin{minipage}{\linewidth}
\centering
\par
\bigskip
\captionof{figure}{\bf SCRIMalderelli IS counts vs Wang: isUpregulatedByTenofovir.Rectal} \label{fig:SCRIMalderelliData.countIS.p.value.isUpregulatedByTenofovir.Rectal}
<<echo = FALSE, results = hide, fig = TRUE>>=
.feature <- "isUpregulatedByTenofovir.Rectal";
qplot(
    c( SCRIMalderelliData.countIS.feature.nulls[[ "total" ]][ , .feature ] ),
    geom = "histogram",
    main = "Histogram of null counts", 
    xlab = "Counts of ISs in genes that are isUpregulatedByTenofovir.Rectal",  
    fill=I("blue"), 
    col=I("black"),
    alpha=I(.2) ) + aes( y = ..density.. ) + labs( y = "Density" ) + geom_vline( xintercept = SCRIMalderelliData.num.IS.by.feature[ .feature ], color = "red", linetype = "longdash" );
@ 
\par
\bigskip
SCRIMalderelli IS counts vs Wang: isUpregulatedByTenofovir.Rectal \par
(p\Sexpr{prettyPrintPValuesTo4Digits( SCRIMalderelliData.countIS.p.values.by.feature[ "isUpregulatedByTenofovir.Rectal"], " = ", "< " )})
\par
\bigskip
\end{minipage}

Figure~\ref{fig:SCRIMalderelliData.countIS.p.value.isDownregulatedByTenofovir.exvivo} shows the significance of the enrichment of the isDownregulatedByTenofovir.exvivo feature among SCRIMalderelli IS counts, by showing where the count of ISs with this feature falls in the null distribution that is obtained by independently drawing the appropriate number of unique ISs from the Wang data set without replacement, maintaining the observed distribution of counts of ISs per uniqueIS. The probability of seeing such an extreme count statistic under the null hypothesis that the isDownregulatedByTenofovir.exvivo feature has the same abundance among SCRIMalderelli IS counts as among Wang IS counts is p\Sexpr{prettyPrintPValuesTo4Digits( SCRIMalderelliData.countIS.p.values.by.feature[ "isDownregulatedByTenofovir.exvivo"], " = ", "< " )}.

\begin{minipage}{\linewidth}
\centering
\par
\bigskip
\captionof{figure}{\bf SCRIMalderelli IS counts vs Wang: isDownregulatedByTenofovir.exvivo} \label{fig:SCRIMalderelliData.countIS.p.value.isDownregulatedByTenofovir.exvivo}
<<echo = FALSE, results = hide, fig = TRUE>>=
.feature <- "isDownregulatedByTenofovir.exvivo";
qplot(
    c( SCRIMalderelliData.countIS.feature.nulls[[ "total" ]][ , .feature ] ),
    geom = "histogram",
    main = "Histogram of null counts", 
    xlab = "Counts of ISs in genes that are isDownregulatedByTenofovir.exvivo",  
    fill=I("blue"), 
    col=I("black"),
    alpha=I(.2) ) + aes( y = ..density.. ) + labs( y = "Density" ) + geom_vline( xintercept = SCRIMalderelliData.num.IS.by.feature[ .feature ], color = "red", linetype = "longdash" );
@ 
\par
\bigskip
SCRIMalderelli IS counts vs Wang: isDownregulatedByTenofovir.exvivo \par
(p\Sexpr{prettyPrintPValuesTo4Digits( SCRIMalderelliData.countIS.p.values.by.feature[ "isDownregulatedByTenofovir.exvivo"], " = ", "< " )})
\par
\bigskip
\end{minipage}

Figure~\ref{fig:SCRIMalderelliData.countIS.p.value.isUpregulatedByTenofovir.exvivo} shows the significance of the enrichment of the isUpregulatedByTenofovir.exvivo feature among SCRIMalderelli IS counts, by showing where the count of ISs with this feature falls in the null distribution that is obtained by independently drawing the appropriate number of unique ISs from the Wang data set without replacement, maintaining the observed distribution of counts of ISs per uniqueIS. The probability of seeing such an extreme count statistic under the null hypothesis that the isUpregulatedByTenofovir.exvivo feature has the same abundance among SCRIMalderelli IS counts as among Wang IS counts is p\Sexpr{prettyPrintPValuesTo4Digits( SCRIMalderelliData.countIS.p.values.by.feature[ "isUpregulatedByTenofovir.exvivo"], " = ", "< " )}.

\begin{minipage}{\linewidth}
\centering
\par
\bigskip
\captionof{figure}{\bf SCRIMalderelli IS counts vs Wang: isUpregulatedByTenofovir.exvivo} \label{fig:SCRIMalderelliData.countIS.p.value.isUpregulatedByTenofovir.exvivo}
<<echo = FALSE, results = hide, fig = TRUE>>=
.feature <- "isUpregulatedByTenofovir.exvivo";
qplot(
    c( SCRIMalderelliData.countIS.feature.nulls[[ "total" ]][ , .feature ] ),
    geom = "histogram",
    main = "Histogram of null counts", 
    xlab = "Counts of ISs in genes that are isUpregulatedByTenofovir.exvivo",  
    fill=I("blue"), 
    col=I("black"),
    alpha=I(.2) ) + aes( y = ..density.. ) + labs( y = "Density" ) + geom_vline( xintercept = SCRIMalderelliData.num.IS.by.feature[ .feature ], color = "red", linetype = "longdash" );
@ 
\par
\bigskip
SCRIMalderelli IS counts vs Wang: isUpregulatedByTenofovir.exvivo \par
(p\Sexpr{prettyPrintPValuesTo4Digits( SCRIMalderelliData.countIS.p.values.by.feature[ "isUpregulatedByTenofovir.exvivo"], " = ", "< " )})
\par
\bigskip
\end{minipage}


Table~\ref{tab:SCRIMalderelliData.countIS.p.values.by.feature.adjusted.secondaryFeatures.Tenofovir} shows the Holm-adjusted p-values of the IS count test evaluating the secondary Tenofovir features in the SCRIMalderelli data set.

\begin{minipage}{\linewidth}
\centering
\par
\bigskip
\captionof{table}{\bf SCRIMalderelli IS counts vs Wang: Holm-adjusted p-values of secondary Tenofovir features} \label{tab:SCRIMalderelliData.countIS.p.values.by.feature.adjusted.secondaryFeatures.Tenofovir}
<<echo = FALSE, results = tex>>=
.tab <- as.matrix( SCRIMalderelliData.countIS.p.values.by.feature.adjusted[ secondaryFeatures.Tenofovir ] );
colnames( .tab ) <- "Holm-adjusted p-value";
print( xtable( .tab, digits=4 ), floating = FALSE );
@ 
\par
\bigskip
SCRIMalderelli IS counts vs Wang: Holm-adjusted p-values of secondary Tenofovir features.
\par
\bigskip
\end{minipage}

Table~\ref{tab:SCRIMalderelliData.countIS.proliferating.p.values.by.feature.adjusted.primaryFeatures.cancer} shows the Holm-adjusted p-values of the proliferating IS count test evaluating the primary Cancer features in the SCRIMalderelli data set.

\begin{minipage}{\linewidth}
\centering
\par
\bigskip
\captionof{table}{\bf SCRIMalderelli proliferating IS counts vs Wang: Holm-adjusted p-values of primary Cancer features} \label{tab:SCRIMalderelliData.countIS.proliferating.p.values.by.feature.adjusted.primaryFeatures.cancer}
<<echo = FALSE, results = tex>>=
.tab <- as.matrix( SCRIMalderelliData.countIS.p.values.proliferating.by.feature.adjusted[ primaryFeatures.cancer ] );
colnames( .tab ) <- "Holm-adjusted p-value";
print( xtable( .tab, digits=4 ), floating = FALSE );
@ 
\par
\bigskip
SCRIMalderelli proliferating IS counts vs Wang: Holm-adjusted p-values of primary Cancer features.
\par
\bigskip
\end{minipage}
 
 
Figure~\ref{fig:SCRIMalderelliData.countIS.proliferating.p.value.isCancer} shows the significance of the enrichment of the isCancer feature among SCRIMalderelli proliferating IS counts, by showing where the count of unique IS counts with this feature falls in the null distribution that is obtained by independently drawing the appropriate number of proliferating IS counts from the Wang data set. The probability of seeing such an extreme count statistic under the null hypothesis that the isCancer feature has the same abundance among SCRIMalderelli proliferating IS counts as among Wang IS counts is p\Sexpr{prettyPrintPValuesTo4Digits( SCRIMalderelliData.countIS.p.values.proliferating.by.feature[ "isCancer" ], " = ", "< " )}.

\begin{minipage}{\linewidth}
\centering
\par
\bigskip
\captionof{figure}{\bf SCRIMalderelli proliferating IS counts vs Wang: isCancer} \label{fig:SCRIMalderelliData.countIS.proliferating.p.value.isCancer}
<<echo = FALSE, results = hide, fig = TRUE>>=
.feature <- "isCancer";
qplot(
    c( SCRIMalderelliData.countIS.feature.nulls[[ "totalProliferating" ]][ , .feature ] ),
    geom = "histogram",
    main = "Histogram of null counts", 
    xlab = "Counts of proliferating IS counts in genes that are isCancer",  
    fill=I("blue"), 
    col=I("black"),
    alpha=I(.2) ) + aes( y = ..density.. ) + labs( y = "Density" ) + geom_vline( xintercept = SCRIMalderelliData.num.IS.proliferating.by.feature[ .feature ], color = "red", linetype = "longdash" );
@ 
\par
\bigskip
SCRIMalderelli proliferating IS counts vs Wang: isCancer \par
(p\Sexpr{prettyPrintPValuesTo4Digits( SCRIMalderelliData.countIS.p.values.proliferating.by.feature[ "isCancer" ], " = ", " < " )})
\par
\bigskip
\end{minipage}

Figure~\ref{fig:SCRIMalderelliData.countIS.proliferating.p.value.isAnyCancer.GO} shows the significance of the enrichment of the isAnyCancer.GO feature among SCRIMalderelli proliferating IS counts, by showing where the count of unique IS counts with this feature falls in the null distribution that is obtained by independently drawing the appropriate number of proliferating IS counts from the Wang data set. The probability of seeing such an extreme count statistic under the null hypothesis that the isAnyCancer.GO feature has the same abundance among SCRIMalderelli proliferating IS counts as among Wang IS counts is p\Sexpr{prettyPrintPValuesTo4Digits( SCRIMalderelliData.countIS.p.values.proliferating.by.feature[ "isAnyCancer.GO" ], " = ", " < " )}.

\begin{minipage}{\linewidth}
\centering
\par
\bigskip
\captionof{figure}{\bf SCRIMalderelli proliferating IS counts vs Wang: isAnyCancer.GO} \label{fig:SCRIMalderelliData.countIS.proliferating.p.value.isAnyCancer.GO}
<<echo = FALSE, results = hide, fig = TRUE>>=
.feature <- "isAnyCancer.GO";
qplot(
    c( SCRIMalderelliData.countIS.feature.nulls[[ "totalProliferating" ]][ , .feature ] ),
    geom = "histogram",
    main = "Histogram of null counts", 
    xlab = "Counts of proliferating IS counts in genes that are isAnyCancer.GO",  
    fill=I("blue"), 
    col=I("black"),
    alpha=I(.2) ) + aes( y = ..density.. ) + labs( y = "Density" ) + geom_vline( xintercept = SCRIMalderelliData.num.IS.proliferating.by.feature[ .feature ], color = "red", linetype = "longdash" );
@ 
\par
\bigskip
SCRIMalderelli proliferating IS counts vs Wang: isAnyCancer.GO \par
(p\Sexpr{prettyPrintPValuesTo4Digits( SCRIMalderelliData.countIS.p.values.proliferating.by.feature[ "isAnyCancer.GO" ], " = ", " < " )})
\par
\bigskip
\end{minipage}

Table~\ref{tab:SCRIMalderelliData.countIS.proliferating.p.values.by.feature.adjusted.primaryFeatures.Tenofovir} shows the Holm-adjusted p-values of the proliferating IS count test evaluating the primary Tenofovir features in the SCRIMalderelli data set.

\begin{minipage}{\linewidth}
\centering
\par
\bigskip
\captionof{table}{\bf SCRIMalderelli proliferating IS counts vs Wang: Holm-adjusted p-values of primary Tenofovir features} \label{tab:SCRIMalderelliData.countIS.proliferating.p.values.by.feature.adjusted.primaryFeatures.Tenofovir}
<<echo = FALSE, results = tex>>=
.tab <- as.matrix( SCRIMalderelliData.countIS.p.values.proliferating.by.feature.adjusted[ primaryFeatures.Tenofovir ] );
colnames( .tab ) <- "Holm-adjusted p-value";
print( xtable( .tab, digits=4 ), floating = FALSE );
@ 
\par
\bigskip
SCRIMalderelli proliferating IS counts vs Wang: Holm-adjusted p-values of primary Tenofovir features.
\par
\bigskip
\end{minipage}
 
Figure~\ref{fig:SCRIMalderelliData.countIS.proliferating.p.value.isDownregulatedByTenofovir.Rectal} shows the significance of the enrichment of the isDownregulatedByTenofovir.Rectal feature among SCRIMalderelli proliferating IS counts, by showing where the count of proliferating ISs with this feature falls in the null distribution that is obtained by independently drawing the appropriate number of proliferating unique ISs from the Wang data set without replacement, maintaining the observed distribution of counts of ISs per uniqueIS. The probability of seeing such an extreme count statistic under the null hypothesis that the isDownregulatedByTenofovir.Rectal feature has the same abundance among SCRIMalderelli proliferating IS counts as among Wang IS counts is p\Sexpr{prettyPrintPValuesTo4Digits( SCRIMalderelliData.countIS.p.values.proliferating.by.feature[ "isDownregulatedByTenofovir.Rectal" ], " = ", " < " )}.

\begin{minipage}{\linewidth}
\centering
\par
\bigskip
\captionof{figure}{\bf SCRIMalderelli proliferating IS counts vs Wang: isDownregulatedByTenofovir.Rectal} \label{fig:SCRIMalderelliData.countIS.proliferating.p.value.isDownregulatedByTenofovir.Rectal}
<<echo = FALSE, results = hide, fig = TRUE>>=
.feature <- "isDownregulatedByTenofovir.Rectal";
qplot(
    c( SCRIMalderelliData.countIS.feature.nulls[[ "totalProliferating" ]][ , .feature ] ),
    geom = "histogram",
    main = "Histogram of null counts", 
    xlab = "Counts of proliferating IS counts in genes that are isDownregulatedByTenofovir.Rectal",  
    fill=I("blue"), 
    col=I("black"),
    alpha=I(.2) ) + aes( y = ..density.. ) + labs( y = "Density" ) + geom_vline( xintercept = SCRIMalderelliData.num.IS.proliferating.by.feature[ .feature ], color = "red", linetype = "longdash" );
@ 
\par
\bigskip
SCRIMalderelli proliferating IS counts vs Wang: isDownregulatedByTenofovir.Rectal \par
(p\Sexpr{prettyPrintPValuesTo4Digits( SCRIMalderelliData.countIS.p.values.proliferating.by.feature[ "isDownregulatedByTenofovir.Rectal" ], " = ", " < " )})
\par
\bigskip
\end{minipage}

Figure~\ref{fig:SCRIMalderelliData.countIS.proliferating.p.value.isUpregulatedByTenofovir.Rectal} shows the significance of the enrichment of the isUpregulatedByTenofovir.Rectal feature among SCRIMalderelli proliferating IS counts, by showing where the count of proliferating ISs with this feature falls in the null distribution that is obtained by independently drawing the appropriate number of proliferating unique ISs from the Wang data set without replacement, maintaining the observed distribution of counts of ISs per uniqueIS. The probability of seeing such an extreme count statistic under the null hypothesis that the isUpregulatedByTenofovir.Rectal feature has the same abundance among SCRIMalderelli proliferating IS counts as among Wang IS counts is p\Sexpr{prettyPrintPValuesTo4Digits( SCRIMalderelliData.countIS.p.values.proliferating.by.feature[ "isUpregulatedByTenofovir.Rectal" ], " = ", " < " )}.

\begin{minipage}{\linewidth}
\centering
\par
\bigskip
\captionof{figure}{\bf SCRIMalderelli proliferating IS counts vs Wang: isUpregulatedByTenofovir.Rectal} \label{fig:SCRIMalderelliData.countIS.proliferating.p.value.isUpregulatedByTenofovir.Rectal}
<<echo = FALSE, results = hide, fig = TRUE>>=
.feature <- "isUpregulatedByTenofovir.Rectal";
qplot(
    c( SCRIMalderelliData.countIS.feature.nulls[[ "totalProliferating" ]][ , .feature ] ),
    geom = "histogram",
    main = "Histogram of null counts", 
    xlab = "Counts of proliferating IS counts in genes that are isUpregulatedByTenofovir.Rectal",  
    fill=I("blue"), 
    col=I("black"),
    alpha=I(.2) ) + aes( y = ..density.. ) + labs( y = "Density" ) + geom_vline( xintercept = SCRIMalderelliData.num.IS.proliferating.by.feature[ .feature ], color = "red", linetype = "longdash" );
@ 
\par
\bigskip
SCRIMalderelli proliferating IS counts vs Wang: isUpregulatedByTenofovir.Rectal \par
(p\Sexpr{prettyPrintPValuesTo4Digits( SCRIMalderelliData.countIS.p.values.proliferating.by.feature[ "isUpregulatedByTenofovir.Rectal" ], " = ", " < " )})
\par
\bigskip
\end{minipage}

Figure~\ref{fig:SCRIMalderelliData.countIS.proliferating.p.value.isDownregulatedByTenofovir.exvivo} shows the significance of the enrichment of the isDownregulatedByTenofovir.exvivo feature among SCRIMalderelli proliferating IS counts, by showing where the count of proliferating ISs with this feature falls in the null distribution that is obtained by independently drawing the appropriate number of proliferating unique ISs from the Wang data set without replacement, maintaining the observed distribution of counts of ISs per uniqueIS. The probability of seeing such an extreme count statistic under the null hypothesis that the isDownregulatedByTenofovir.exvivo feature has the same abundance among SCRIMalderelli proliferating IS counts as among Wang IS counts is p\Sexpr{prettyPrintPValuesTo4Digits( SCRIMalderelliData.countIS.p.values.proliferating.by.feature[ "isDownregulatedByTenofovir.exvivo" ], " = ", " < " )}.

\begin{minipage}{\linewidth}
\centering
\par
\bigskip
\captionof{figure}{\bf SCRIMalderelli proliferating IS counts vs Wang: isDownregulatedByTenofovir.exvivo} \label{fig:SCRIMalderelliData.countIS.proliferating.p.value.isDownregulatedByTenofovir.exvivo}
<<echo = FALSE, results = hide, fig = TRUE>>=
.feature <- "isDownregulatedByTenofovir.exvivo";
qplot(
    c( SCRIMalderelliData.countIS.feature.nulls[[ "totalProliferating" ]][ , .feature ] ),
    geom = "histogram",
    main = "Histogram of null counts", 
    xlab = "Counts of proliferating IS counts in genes that are isDownregulatedByTenofovir.exvivo",  
    fill=I("blue"), 
    col=I("black"),
    alpha=I(.2) ) + aes( y = ..density.. ) + labs( y = "Density" ) + geom_vline( xintercept = SCRIMalderelliData.num.IS.proliferating.by.feature[ .feature ], color = "red", linetype = "longdash" );
@ 
\par
\bigskip
SCRIMalderelli proliferating IS counts vs Wang: isDownregulatedByTenofovir.exvivo \par
(p\Sexpr{prettyPrintPValuesTo4Digits( SCRIMalderelliData.countIS.p.values.proliferating.by.feature[ "isDownregulatedByTenofovir.exvivo" ], " = ", " < " )})
\par
\bigskip
\end{minipage}

Figure~\ref{fig:SCRIMalderelliData.countIS.proliferating.p.value.isUpregulatedByTenofovir.exvivo} shows the significance of the enrichment of the isUpregulatedByTenofovir.exvivo feature among SCRIMalderelli proliferating IS counts, by showing where the count of proliferating ISs with this feature falls in the null distribution that is obtained by independently drawing the appropriate number of proliferating unique ISs from the Wang data set without replacement, maintaining the observed distribution of counts of ISs per uniqueIS. The probability of seeing such an extreme count statistic under the null hypothesis that the isUpregulatedByTenofovir.exvivo feature has the same abundance among SCRIMalderelli proliferating IS counts as among Wang IS counts is p\Sexpr{prettyPrintPValuesTo4Digits( SCRIMalderelliData.countIS.p.values.proliferating.by.feature[ "isUpregulatedByTenofovir.exvivo" ], " = ", " < " )}.

\begin{minipage}{\linewidth}
\centering
\par
\bigskip
\captionof{figure}{\bf SCRIMalderelli proliferating IS counts vs Wang: isUpregulatedByTenofovir.exvivo} \label{fig:SCRIMalderelliData.countIS.proliferating.p.value.isUpregulatedByTenofovir.exvivo}
<<echo = FALSE, results = hide, fig = TRUE>>=
.feature <- "isUpregulatedByTenofovir.exvivo";
qplot(
    c( SCRIMalderelliData.countIS.feature.nulls[[ "totalProliferating" ]][ , .feature ] ),
    geom = "histogram",
    main = "Histogram of null counts", 
    xlab = "Counts of proliferating IS counts in genes that are isUpregulatedByTenofovir.exvivo",  
    fill=I("blue"), 
    col=I("black"),
    alpha=I(.2) ) + aes( y = ..density.. ) + labs( y = "Density" ) + geom_vline( xintercept = SCRIMalderelliData.num.IS.proliferating.by.feature[ .feature ], color = "red", linetype = "longdash" );
@ 
\par
\bigskip
SCRIMalderelli proliferating IS counts vs Wang: isUpregulatedByTenofovir.exvivo \par
(p\Sexpr{prettyPrintPValuesTo4Digits( SCRIMalderelliData.countIS.p.values.proliferating.by.feature[ "isUpregulatedByTenofovir.exvivo" ], " = ", " < " )})
\par
\bigskip
\end{minipage}


Table~\ref{tab:SCRIMalderelliData.countIS.proliferating.p.values.by.feature.adjusted.secondaryFeatures.Tenofovir} shows the Holm-adjusted p-values of the proliferating IS count test evaluating the secondary Tenofovir features in the SCRIMalderelli data set.

\begin{minipage}{\linewidth}
\centering
\par
\bigskip
\captionof{table}{\bf SCRIMalderelli proliferating IS counts vs Wang: Holm-adjusted p-values of secondary Tenofovir features} \label{tab:SCRIMalderelliData.countIS.proliferating.p.values.by.feature.adjusted.secondaryFeatures.Tenofovir}
<<echo = FALSE, results = tex>>=
.tab <- as.matrix( SCRIMalderelliData.countIS.p.values.proliferating.by.feature.adjusted[ secondaryFeatures.Tenofovir ] );
colnames( .tab ) <- "Holm-adjusted p-value";
print( xtable( .tab, digits=4 ), floating = FALSE );
@ 
\par
\bigskip
SCRIMalderelli proliferating IS counts vs Wang: Holm-adjusted p-values of secondary Tenofovir features.
\par
\bigskip
\end{minipage}


Table~\ref{tab:SCRIMalderelliData.countIS.nonproliferating.p.values.by.feature.adjusted.primaryFeatures.cancer} shows the Holm-adjusted p-values of the nonproliferating IS count test evaluating the primary Cancer features in the SCRIMalderelli data set.

\begin{minipage}{\linewidth}
\centering
\par
\bigskip
\captionof{table}{\bf SCRIMalderelli nonproliferating IS counts vs Wang: Holm-adjusted p-values of primary Cancer features} \label{tab:SCRIMalderelliData.countIS.nonproliferating.p.values.by.feature.adjusted.primaryFeatures.cancer}
<<echo = FALSE, results = tex>>=
.tab <- as.matrix( SCRIMalderelliData.countIS.p.values.nonproliferating.by.feature.adjusted[ primaryFeatures.cancer ] );
colnames( .tab ) <- "Holm-adjusted p-value";
print( xtable( .tab, digits=4 ), floating = FALSE );
@ 
\par
\bigskip
SCRIMalderelli nonproliferating IS counts vs Wang: Holm-adjusted p-values of primary Cancer features.
\par
\bigskip
\end{minipage}
 
 
Figure~\ref{fig:SCRIMalderelliData.countIS.nonproliferating.p.value.isCancer} shows the significance of the enrichment of the isCancer feature among SCRIMalderelli nonproliferating IS counts, by showing where the count of unique IS counts with this feature falls in the null distribution that is obtained by independently drawing the appropriate number of nonproliferating IS counts from the Wang data set. The probability of seeing such an extreme count statistic under the null hypothesis that the isCancer feature has the same abundance among SCRIMalderelli nonproliferating IS counts as among Wang IS counts is p\Sexpr{prettyPrintPValuesTo4Digits( SCRIMalderelliData.countIS.p.values.nonproliferating.by.feature[ "isCancer" ], " = ", "< " )}.

\begin{minipage}{\linewidth}
\centering
\par
\bigskip
\captionof{figure}{\bf SCRIMalderelli nonproliferating IS counts vs Wang: isCancer} \label{fig:SCRIMalderelliData.countIS.nonproliferating.p.value.isCancer}
<<echo = FALSE, results = hide, fig = TRUE>>=
.feature <- "isCancer";
qplot(
    c( SCRIMalderelliData.countIS.feature.nulls[[ "totalNonproliferating" ]][ , .feature ] ),
    geom = "histogram",
    main = "Histogram of null counts", 
    xlab = "Counts of nonproliferating IS counts in genes that are isCancer",  
    fill=I("blue"), 
    col=I("black"),
    alpha=I(.2) ) + aes( y = ..density.. ) + labs( y = "Density" ) + geom_vline( xintercept = SCRIMalderelliData.num.IS.nonproliferating.by.feature[ .feature ], color = "red", linetype = "longdash" );
@ 
\par
\bigskip
SCRIMalderelli nonproliferating IS counts vs Wang: isCancer \par
(p\Sexpr{prettyPrintPValuesTo4Digits( SCRIMalderelliData.countIS.p.values.nonproliferating.by.feature[ "isCancer" ], " = ", " < " )})
\par
\bigskip
\end{minipage}

Figure~\ref{fig:SCRIMalderelliData.countIS.nonproliferating.p.value.isAnyCancer.GO} shows the significance of the enrichment of the isAnyCancer.GO feature among SCRIMalderelli nonproliferating IS counts, by showing where the count of unique IS counts with this feature falls in the null distribution that is obtained by independently drawing the appropriate number of nonproliferating IS counts from the Wang data set. The probability of seeing such an extreme count statistic under the null hypothesis that the isAnyCancer.GO feature has the same abundance among SCRIMalderelli nonproliferating IS counts as among Wang IS counts is p\Sexpr{prettyPrintPValuesTo4Digits( SCRIMalderelliData.countIS.p.values.nonproliferating.by.feature[ "isAnyCancer.GO" ], " = ", " < " )}.

\begin{minipage}{\linewidth}
\centering
\par
\bigskip
\captionof{figure}{\bf SCRIMalderelli nonproliferating IS counts vs Wang: isAnyCancer.GO} \label{fig:SCRIMalderelliData.countIS.nonproliferating.p.value.isAnyCancer.GO}
<<echo = FALSE, results = hide, fig = TRUE>>=
.feature <- "isAnyCancer.GO";
qplot(
    c( SCRIMalderelliData.countIS.feature.nulls[[ "totalNonproliferating" ]][ , .feature ] ),
    geom = "histogram",
    main = "Histogram of null counts", 
    xlab = "Counts of nonproliferating IS counts in genes that are isAnyCancer.GO",  
    fill=I("blue"), 
    col=I("black"),
    alpha=I(.2) ) + aes( y = ..density.. ) + labs( y = "Density" ) + geom_vline( xintercept = SCRIMalderelliData.num.IS.nonproliferating.by.feature[ .feature ], color = "red", linetype = "longdash" );
@ 
\par
\bigskip
SCRIMalderelli nonproliferating IS counts vs Wang: isAnyCancer.GO \par
(p\Sexpr{prettyPrintPValuesTo4Digits( SCRIMalderelliData.countIS.p.values.nonproliferating.by.feature[ "isAnyCancer.GO" ], " = ", " < " )})
\par
\bigskip
\end{minipage}

Table~\ref{tab:SCRIMalderelliData.countIS.nonproliferating.p.values.by.feature.adjusted.primaryFeatures.Tenofovir} shows the Holm-adjusted p-values of the nonproliferating IS count test evaluating the primary Tenofovir features in the SCRIMalderelli data set.

\begin{minipage}{\linewidth}
\centering
\par
\bigskip
\captionof{table}{\bf SCRIMalderelli nonproliferating IS counts vs Wang: Holm-adjusted p-values of primary Tenofovir features} \label{tab:SCRIMalderelliData.countIS.nonproliferating.p.values.by.feature.adjusted.primaryFeatures.Tenofovir}
<<echo = FALSE, results = tex>>=
.tab <- as.matrix( SCRIMalderelliData.countIS.p.values.nonproliferating.by.feature.adjusted[ primaryFeatures.Tenofovir ] );
colnames( .tab ) <- "Holm-adjusted p-value";
print( xtable( .tab, digits=4 ), floating = FALSE );
@ 
\par
\bigskip
SCRIMalderelli nonproliferating IS counts vs Wang: Holm-adjusted p-values of primary Tenofovir features.
\par
\bigskip
\end{minipage}
 
Figure~\ref{fig:SCRIMalderelliData.countIS.nonproliferating.p.value.isDownregulatedByTenofovir.Rectal} shows the significance of the enrichment of the isDownregulatedByTenofovir.Rectal feature among SCRIMalderelli nonproliferating IS counts, by showing where the count of nonproliferating ISs with this feature falls in the null distribution that is obtained by independently drawing the appropriate number of nonproliferating unique ISs from the Wang data set without replacement, maintaining the observed distribution of counts of ISs per uniqueIS. The probability of seeing such an extreme count statistic under the null hypothesis that the isDownregulatedByTenofovir.Rectal feature has the same abundance among SCRIMalderelli nonproliferating IS counts as among Wang IS counts is p\Sexpr{prettyPrintPValuesTo4Digits( SCRIMalderelliData.countIS.p.values.nonproliferating.by.feature[ "isDownregulatedByTenofovir.Rectal" ], " = ", " < " )}.

\begin{minipage}{\linewidth}
\centering
\par
\bigskip
\captionof{figure}{\bf SCRIMalderelli nonproliferating IS counts vs Wang: isDownregulatedByTenofovir.Rectal} \label{fig:SCRIMalderelliData.countIS.nonproliferating.p.value.isDownregulatedByTenofovir.Rectal}
<<echo = FALSE, results = hide, fig = TRUE>>=
.feature <- "isDownregulatedByTenofovir.Rectal";
qplot(
    c( SCRIMalderelliData.countIS.feature.nulls[[ "totalNonproliferating" ]][ , .feature ] ),
    geom = "histogram",
    main = "Histogram of null counts", 
    xlab = "Counts of nonproliferating IS counts in genes that are isDownregulatedByTenofovir.Rectal",  
    fill=I("blue"), 
    col=I("black"),
    alpha=I(.2) ) + aes( y = ..density.. ) + labs( y = "Density" ) + geom_vline( xintercept = SCRIMalderelliData.num.IS.nonproliferating.by.feature[ .feature ], color = "red", linetype = "longdash" );
@ 
\par
\bigskip
SCRIMalderelli nonproliferating IS counts vs Wang: isDownregulatedByTenofovir.Rectal \par
(p\Sexpr{prettyPrintPValuesTo4Digits( SCRIMalderelliData.countIS.p.values.nonproliferating.by.feature[ "isDownregulatedByTenofovir.Rectal" ], " = ", " < " )})
\par
\bigskip
\end{minipage}

Figure~\ref{fig:SCRIMalderelliData.countIS.nonproliferating.p.value.isUpregulatedByTenofovir.Rectal} shows the significance of the enrichment of the isUpregulatedByTenofovir.Rectal feature among SCRIMalderelli nonproliferating IS counts, by showing where the count of nonproliferating ISs with this feature falls in the null distribution that is obtained by independently drawing the appropriate number of nonproliferating unique ISs from the Wang data set without replacement, maintaining the observed distribution of counts of ISs per uniqueIS. The probability of seeing such an extreme count statistic under the null hypothesis that the isUpregulatedByTenofovir.Rectal feature has the same abundance among SCRIMalderelli nonproliferating IS counts as among Wang IS counts is p\Sexpr{prettyPrintPValuesTo4Digits( SCRIMalderelliData.countIS.p.values.nonproliferating.by.feature[ "isUpregulatedByTenofovir.Rectal" ], " = ", " < " )}.

\begin{minipage}{\linewidth}
\centering
\par
\bigskip
\captionof{figure}{\bf SCRIMalderelli nonproliferating IS counts vs Wang: isUpregulatedByTenofovir.Rectal} \label{fig:SCRIMalderelliData.countIS.nonproliferating.p.value.isUpregulatedByTenofovir.Rectal}
<<echo = FALSE, results = hide, fig = TRUE>>=
.feature <- "isUpregulatedByTenofovir.Rectal";
qplot(
    c( SCRIMalderelliData.countIS.feature.nulls[[ "totalNonproliferating" ]][ , .feature ] ),
    geom = "histogram",
    main = "Histogram of null counts", 
    xlab = "Counts of nonproliferating IS counts in genes that are isUpregulatedByTenofovir.Rectal",  
    fill=I("blue"), 
    col=I("black"),
    alpha=I(.2) ) + aes( y = ..density.. ) + labs( y = "Density" ) + geom_vline( xintercept = SCRIMalderelliData.num.IS.nonproliferating.by.feature[ .feature ], color = "red", linetype = "longdash" );
@ 
\par
\bigskip
SCRIMalderelli nonproliferating IS counts vs Wang: isUpregulatedByTenofovir.Rectal \par
(p\Sexpr{prettyPrintPValuesTo4Digits( SCRIMalderelliData.countIS.p.values.nonproliferating.by.feature[ "isUpregulatedByTenofovir.Rectal" ], " = ", " < " )})
\par
\bigskip
\end{minipage}

Figure~\ref{fig:SCRIMalderelliData.countIS.nonproliferating.p.value.isDownregulatedByTenofovir.exvivo} shows the significance of the enrichment of the isDownregulatedByTenofovir.exvivo feature among SCRIMalderelli nonproliferating IS counts, by showing where the count of nonproliferating ISs with this feature falls in the null distribution that is obtained by independently drawing the appropriate number of nonproliferating unique ISs from the Wang data set without replacement, maintaining the observed distribution of counts of ISs per uniqueIS. The probability of seeing such an extreme count statistic under the null hypothesis that the isDownregulatedByTenofovir.exvivo feature has the same abundance among SCRIMalderelli nonproliferating IS counts as among Wang IS counts is p\Sexpr{prettyPrintPValuesTo4Digits( SCRIMalderelliData.countIS.p.values.nonproliferating.by.feature[ "isDownregulatedByTenofovir.exvivo" ], " = ", " < " )}.

\begin{minipage}{\linewidth}
\centering
\par
\bigskip
\captionof{figure}{\bf SCRIMalderelli nonproliferating IS counts vs Wang: isDownregulatedByTenofovir.exvivo} \label{fig:SCRIMalderelliData.countIS.nonproliferating.p.value.isDownregulatedByTenofovir.exvivo}
<<echo = FALSE, results = hide, fig = TRUE>>=
.feature <- "isDownregulatedByTenofovir.exvivo";
qplot(
    c( SCRIMalderelliData.countIS.feature.nulls[[ "totalNonproliferating" ]][ , .feature ] ),
    geom = "histogram",
    main = "Histogram of null counts", 
    xlab = "Counts of nonproliferating IS counts in genes that are isDownregulatedByTenofovir.exvivo",  
    fill=I("blue"), 
    col=I("black"),
    alpha=I(.2) ) + aes( y = ..density.. ) + labs( y = "Density" ) + geom_vline( xintercept = SCRIMalderelliData.num.IS.nonproliferating.by.feature[ .feature ], color = "red", linetype = "longdash" );
@ 
\par
\bigskip
SCRIMalderelli nonproliferating IS counts vs Wang: isDownregulatedByTenofovir.exvivo \par
(p\Sexpr{prettyPrintPValuesTo4Digits( SCRIMalderelliData.countIS.p.values.nonproliferating.by.feature[ "isDownregulatedByTenofovir.exvivo" ], " = ", " < " )})
\par
\bigskip
\end{minipage}

Figure~\ref{fig:SCRIMalderelliData.countIS.nonproliferating.p.value.isUpregulatedByTenofovir.exvivo} shows the significance of the enrichment of the isUpregulatedByTenofovir.exvivo feature among SCRIMalderelli nonproliferating IS counts, by showing where the count of nonproliferating ISs with this feature falls in the null distribution that is obtained by independently drawing the appropriate number of nonproliferating unique ISs from the Wang data set without replacement, maintaining the observed distribution of counts of ISs per uniqueIS. The probability of seeing such an extreme count statistic under the null hypothesis that the isUpregulatedByTenofovir.exvivo feature has the same abundance among SCRIMalderelli nonproliferating IS counts as among Wang IS counts is p\Sexpr{prettyPrintPValuesTo4Digits( SCRIMalderelliData.countIS.p.values.nonproliferating.by.feature[ "isUpregulatedByTenofovir.exvivo" ], " = ", " < " )}.

\begin{minipage}{\linewidth}
\centering
\par
\bigskip
\captionof{figure}{\bf SCRIMalderelli nonproliferating IS counts vs Wang: isUpregulatedByTenofovir.exvivo} \label{fig:SCRIMalderelliData.countIS.nonproliferating.p.value.isUpregulatedByTenofovir.exvivo}
<<echo = FALSE, results = hide, fig = TRUE>>=
.feature <- "isUpregulatedByTenofovir.exvivo";
qplot(
    c( SCRIMalderelliData.countIS.feature.nulls[[ "totalNonproliferating" ]][ , .feature ] ),
    geom = "histogram",
    main = "Histogram of null counts", 
    xlab = "Counts of nonproliferating IS counts in genes that are isUpregulatedByTenofovir.exvivo",  
    fill=I("blue"), 
    col=I("black"),
    alpha=I(.2) ) + aes( y = ..density.. ) + labs( y = "Density" ) + geom_vline( xintercept = SCRIMalderelliData.num.IS.nonproliferating.by.feature[ .feature ], color = "red", linetype = "longdash" );
@ 
\par
\bigskip
SCRIMalderelli nonproliferating IS counts vs Wang: isUpregulatedByTenofovir.exvivo \par
(p\Sexpr{prettyPrintPValuesTo4Digits( SCRIMalderelliData.countIS.p.values.nonproliferating.by.feature[ "isUpregulatedByTenofovir.exvivo" ], " = ", " < " )})
\par
\bigskip
\end{minipage}


Table~\ref{tab:SCRIMalderelliData.countIS.nonproliferating.p.values.by.feature.adjusted.secondaryFeatures.Tenofovir} shows the Holm-adjusted p-values of the nonproliferating IS count test evaluating the secondary Tenofovir features in the SCRIMalderelli data set.

\begin{minipage}{\linewidth}
\centering
\par
\bigskip
\captionof{table}{\bf SCRIMalderelli nonproliferating IS counts vs Wang: Holm-adjusted p-values of secondary Tenofovir features} \label{tab:SCRIMalderelliData.countIS.nonproliferating.p.values.by.feature.adjusted.secondaryFeatures.Tenofovir}
<<echo = FALSE, results = tex>>=
.tab <- as.matrix( SCRIMalderelliData.countIS.p.values.nonproliferating.by.feature.adjusted[ secondaryFeatures.Tenofovir ] );
colnames( .tab ) <- "Holm-adjusted p-value";
print( xtable( .tab, digits=4 ), floating = FALSE );
@ 
\par
\bigskip
SCRIMalderelli nonproliferating IS counts vs Wang: Holm-adjusted p-values of secondary Tenofovir features.
\par
\bigskip
\end{minipage}


\clearpage

\subsection{Unique ISs}

<<echo = FALSE, results = hide>>=
if( exists( "SCRIMalderelli.uniqueIS.P.VALUES.ARE.COMPUTED.ALREADY" ) && SCRIMalderelli.uniqueIS.P.VALUES.ARE.COMPUTED.ALREADY ) {
    ## GREAT.
} else {

## Calculate conservative two-sided p-values for the observed number of ISs with each feature exceeding the observed number.
# first, for each subject separately:
SCRIMalderelliData.p.values.by.feature.by.subject <-
  t( sapply( SCRIMalderelliData.subjectIDs, function( .subject.id ) {
      sapply( colnames( Wang.feature.by.gene ), function ( .feature ) {
          calculatePValue( SCRIMalderelliData.num.uniqueIS.by.subject.by.feature[ .subject.id, .feature ], SCRIMalderelliData.feature.nulls[[ .subject.id ]] )
      } )
  } ) );
# Next, for all subjects pooled:
SCRIMalderelliData.p.values.by.feature <-
  sapply( colnames( Wang.feature.by.gene ), function ( .feature ) {
      calculatePValue( SCRIMalderelliData.num.uniqueIS.by.feature[ .feature ], SCRIMalderelliData.feature.nulls[[ "total" ]][ , .feature ] )
  } );
# Finally, for all subjects pooled, but just looking at proliferating ISs:
SCRIMalderelliData.p.values.proliferating.by.feature <-
  sapply( colnames( Wang.feature.by.gene ), function ( .feature ) {
      calculatePValue( SCRIMalderelliData.num.uniqueIS.proliferating.by.feature[ .feature ], SCRIMalderelliData.feature.nulls[[ "totalProliferating" ]][ , .feature ] )
  } );
# Finally, for all subjects pooled, but just looking at nonproliferating ISs:
SCRIMalderelliData.p.values.nonproliferating.by.feature <-
  sapply( colnames( Wang.feature.by.gene ), function ( .feature ) {
      calculatePValue( SCRIMalderelliData.num.uniqueIS.nonproliferating.by.feature[ .feature ], SCRIMalderelliData.feature.nulls[[ "totalNonproliferating" ]][ , .feature ] )
  } );
## Note that we pre-specified that we'd ignore all but the top 20 GO terms, but we lazily did the analysis for all of them.
.isFeatures <- grep( "^is", names( SCRIMalderelliData.p.values.proliferating.by.feature ), value = T )
primaryFeatures.Tenofovir <- c( "isDownregulatedByTenofovir.exvivo", "isUpregulatedByTenofovir.exvivo", "isDownregulatedByTenofovir.Rectal", "isUpregulatedByTenofovir.Rectal" );
primaryFeatures.GO <- c( "isAnyTop20.GO" );
primaryFeatures.cancer <- c( "isCancer", "isAnyCancer.GO" );
secondaryFeatures.Tenofovir <- setdiff( grep( "Tenofovir", .isFeatures, value = TRUE ), primaryFeatures.Tenofovir );
secondaryFeatures.cancer10 <- setdiff( .isFeatures, c( primaryFeatures.GO, primaryFeatures.cancer, primaryFeatures.Tenofovir, secondaryFeatures.Tenofovir ) );
stopifnot( length( secondaryFeatures.cancer10 ) == 10 );
individualGOFeatures.Hallmark40 <- names( SCRIMalderelliData.p.values.proliferating.by.feature )[ 1:40 ];
stopifnot( length( individualGOFeatures.Hallmark40 ) == 40 );
individualGOFeatures.top20 <- names( SCRIMalderelliData.p.values.proliferating.by.feature )[ 53:(53 + 19) ];
stopifnot( length( individualGOFeatures.top20 ) == 20 );

# FWER-correct (using "holm" method) the p-values for the cancer10 and the Hallmark40 and the top20.
SCRIMalderelliData.p.values.by.feature.by.subject.adjusted <- t( apply( SCRIMalderelliData.p.values.by.feature.by.subject, 1, function( .SCRIMalderelliData.p.values.by.feature ) {
    .SCRIMalderelliData.p.values.by.feature[ primaryFeatures.Tenofovir ] <- p.adjust( .SCRIMalderelliData.p.values.by.feature[ primaryFeatures.Tenofovir ], method = "holm" );
    .SCRIMalderelliData.p.values.by.feature[ secondaryFeatures.Tenofovir ] <- p.adjust( .SCRIMalderelliData.p.values.by.feature[ secondaryFeatures.Tenofovir ], method = "holm" );
    .SCRIMalderelliData.p.values.by.feature[ secondaryFeatures.cancer10 ] <- p.adjust( .SCRIMalderelliData.p.values.by.feature[ secondaryFeatures.cancer10 ], method = "holm" );
    .SCRIMalderelliData.p.values.by.feature[ individualGOFeatures.Hallmark40 ] <- p.adjust( .SCRIMalderelliData.p.values.by.feature[ individualGOFeatures.Hallmark40 ], method = "holm" );
    .SCRIMalderelliData.p.values.by.feature[ individualGOFeatures.top20 ] <- p.adjust( .SCRIMalderelliData.p.values.by.feature[ individualGOFeatures.top20 ], method = "holm" );
    return( .SCRIMalderelliData.p.values.by.feature );
} ) );
SCRIMalderelliData.p.values.by.feature.adjusted <- SCRIMalderelliData.p.values.by.feature;
SCRIMalderelliData.p.values.by.feature.adjusted[ primaryFeatures.Tenofovir ] <- p.adjust( SCRIMalderelliData.p.values.by.feature[ primaryFeatures.Tenofovir ], method = "holm" );
SCRIMalderelliData.p.values.by.feature.adjusted[ secondaryFeatures.Tenofovir ] <- p.adjust( SCRIMalderelliData.p.values.by.feature[ secondaryFeatures.Tenofovir ], method = "holm" );
SCRIMalderelliData.p.values.by.feature.adjusted[ secondaryFeatures.cancer10 ] <- p.adjust( SCRIMalderelliData.p.values.by.feature[ secondaryFeatures.cancer10 ], method = "holm" );
SCRIMalderelliData.p.values.by.feature.adjusted[ individualGOFeatures.Hallmark40 ] <- p.adjust( SCRIMalderelliData.p.values.by.feature[ individualGOFeatures.Hallmark40 ], method = "holm" );
SCRIMalderelliData.p.values.by.feature.adjusted[ individualGOFeatures.top20 ] <- p.adjust( SCRIMalderelliData.p.values.by.feature[ individualGOFeatures.top20 ], method = "holm" );

## adjust the proliferating results
SCRIMalderelliData.p.values.proliferating.by.feature.adjusted <- SCRIMalderelliData.p.values.proliferating.by.feature;
SCRIMalderelliData.p.values.proliferating.by.feature.adjusted[ primaryFeatures.Tenofovir ] <- p.adjust( SCRIMalderelliData.p.values.proliferating.by.feature[ primaryFeatures.Tenofovir ], method = "holm" );
SCRIMalderelliData.p.values.proliferating.by.feature.adjusted[ secondaryFeatures.Tenofovir ] <- p.adjust( SCRIMalderelliData.p.values.proliferating.by.feature[ secondaryFeatures.Tenofovir ], method = "holm" );
SCRIMalderelliData.p.values.proliferating.by.feature.adjusted[ secondaryFeatures.cancer10 ] <- p.adjust( SCRIMalderelliData.p.values.proliferating.by.feature[ secondaryFeatures.cancer10 ], method = "holm" );
SCRIMalderelliData.p.values.proliferating.by.feature.adjusted[ individualGOFeatures.Hallmark40 ] <- p.adjust( SCRIMalderelliData.p.values.proliferating.by.feature[ individualGOFeatures.Hallmark40 ], method = "holm" );
SCRIMalderelliData.p.values.proliferating.by.feature.adjusted[ individualGOFeatures.top20 ] <- p.adjust( SCRIMalderelliData.p.values.proliferating.by.feature[ individualGOFeatures.top20 ], method = "holm" );
SCRIMalderelli.uniqueIS.P.VALUES.ARE.COMPUTED.ALREADY <- TRUE;

## adjust the nonproliferating results
SCRIMalderelliData.p.values.nonproliferating.by.feature.adjusted <- SCRIMalderelliData.p.values.nonproliferating.by.feature;
SCRIMalderelliData.p.values.nonproliferating.by.feature.adjusted[ primaryFeatures.Tenofovir ] <- p.adjust( SCRIMalderelliData.p.values.nonproliferating.by.feature[ primaryFeatures.Tenofovir ], method = "holm" );
SCRIMalderelliData.p.values.nonproliferating.by.feature.adjusted[ secondaryFeatures.Tenofovir ] <- p.adjust( SCRIMalderelliData.p.values.nonproliferating.by.feature[ secondaryFeatures.Tenofovir ], method = "holm" );
SCRIMalderelliData.p.values.nonproliferating.by.feature.adjusted[ secondaryFeatures.cancer10 ] <- p.adjust( SCRIMalderelliData.p.values.nonproliferating.by.feature[ secondaryFeatures.cancer10 ], method = "holm" );
SCRIMalderelliData.p.values.nonproliferating.by.feature.adjusted[ individualGOFeatures.Hallmark40 ] <- p.adjust( SCRIMalderelliData.p.values.nonproliferating.by.feature[ individualGOFeatures.Hallmark40 ], method = "holm" );
SCRIMalderelliData.p.values.nonproliferating.by.feature.adjusted[ individualGOFeatures.top20 ] <- p.adjust( SCRIMalderelliData.p.values.nonproliferating.by.feature[ individualGOFeatures.top20 ], method = "holm" );

SCRIMalderelli.uniqueIS.P.VALUES.ARE.COMPUTED.ALREADY <- TRUE;
} # End if SCRIMalderelli.uniqueIS.P.VALUES.ARE.COMPUTED.ALREADY .. else ..
@ 

Table~\ref{tab:SCRIMalderelliData.uniqueIS.p.values.by.feature.adjusted.primaryFeatures.cancer} shows the Holm-adjusted p-values of the uniqueIS test evaluating the primary Cancer features in the SCRIMalderelli data set.

\begin{minipage}{\linewidth}
\centering
\par
\bigskip
\captionof{table}{\bf SCRIMalderelli uniqueISs vs Wang: Holm-adjusted p-values of primary Cancer features} \label{tab:SCRIMalderelliData.uniqueIS.p.values.by.feature.adjusted.primaryFeatures.cancer}
<<echo = FALSE, results = tex>>=
.tab <- as.matrix( SCRIMalderelliData.p.values.by.feature.adjusted[ primaryFeatures.cancer ] );
colnames( .tab ) <- "Holm-adjusted p-value";
print( xtable( .tab, digits=4 ), floating = FALSE );
@ 
\par
\bigskip
SCRIMalderelli uniqueISs vs Wang: Holm-adjusted p-values of primary Cancer features.
\par
\bigskip
\end{minipage}
 
%% isCancer
\begin{minipage}{\linewidth}
\centering
\par
\bigskip
\captionof{figure}{\bf SCRIMalderelli uniqueISs vs Wang: isCancer} \label{fig:SCRIMalderelliData.uniqueIS.p.value.isCancer}
<<echo = FALSE, results = hide, fig = TRUE>>=
.feature <- "isCancer";
qplot(
    c( SCRIMalderelliData.feature.nulls[[ "total" ]][ , .feature ] ),
    geom = "histogram",
    main = "Histogram of null counts", 
    xlab = "Counts of uniqueISs in genes that are isCancer",  
    fill=I("blue"), 
    col=I("black"),
    alpha=I(.2) ) + aes( y = ..density.. ) + labs( y = "Density" ) + geom_vline( xintercept = SCRIMalderelliData.num.uniqueIS.by.feature[ .feature ], color = "red", linetype = "longdash" );
@ 
\par
\bigskip
SCRIMalderelli uniqueISs vs Wang: isCancer \par
(p\Sexpr{prettyPrintPValuesTo4Digits( SCRIMalderelliData.p.values.by.feature[ "isCancer" ], " = ", " < " )})
\par
\bigskip
\end{minipage}

<<echo = FALSE, results = hide>>=
## isCancer
WangData.num.uniqueIS.isCancer <- 
    sum( WangData$isCancer > 0 );
WangData.num.uniqueIS.NOTisCancer <- 
    sum( WangData$isCancer == 0 );
WangData.frac.uniqueIS.isCancer <- 
    mean( WangData$isCancer > 0 );
WangData.frac.uniqueIS.isCancer

SCRIMalderelliData.num.uniqueIS.isCancer.by.subject.by.time <- 
  t( sapply( SCRIMalderelliData.subjectIDs, function( .subject.id ) {
      apply( ( SCRIMalderelliData[ ( SCRIMalderelliData$Pt. == .subject.id ) & ( SCRIMalderelliData$isCancer > 0 ), c( "X1st", "X2nd", "X3rd" ), drop = FALSE ] > 0 ), 2, sum );
  } ) );
SCRIMalderelliData.num.uniqueIS.isCancer.by.time <- apply( SCRIMalderelliData.num.uniqueIS.isCancer.by.subject.by.time, 2, sum );

SCRIMalderelliData.num.uniqueIS.isCancer <- 
    sum( SCRIMalderelliData$isCancer > 0 );
SCRIMalderelliData.num.uniqueIS.NOTisCancer <- 
    sum( SCRIMalderelliData$isCancer == 0 );

SCRIMalderelliData.num.uniqueIS.proliferating.isCancer <- 
    sum( ( SCRIMalderelliData$Proliferating > 0 ) & ( SCRIMalderelliData$isCancer > 0 ) );
SCRIMalderelliData.num.uniqueIS.proliferating.NOTisCancer <- 
    sum( ( SCRIMalderelliData$Proliferating > 0 ) & ( SCRIMalderelliData$isCancer == 0 ) );

SCRIMalderelliData.num.uniqueIS.nonproliferating.isCancer <- 
    sum( ( SCRIMalderelliData$Proliferating == 0 ) & ( SCRIMalderelliData$isCancer > 0 ) );
SCRIMalderelliData.num.uniqueIS.nonproliferating.NOTisCancer <- 
    sum( ( SCRIMalderelliData$Proliferating == 0 ) & ( SCRIMalderelliData$isCancer == 0 ) );

SCRIMalderelliData.uniqueIS.isCancer.Wang.fisher.table <- cbind(
    c( SCRIMalderelliData.num.uniqueIS.isCancer, SCRIMalderelliData.num.uniqueIS.NOTisCancer ),
    c( WangData.num.uniqueIS.isCancer, WangData.num.uniqueIS.NOTisCancer ) );
colnames( SCRIMalderelliData.uniqueIS.isCancer.Wang.fisher.table ) <- c( "SCRIMalderelli", "Wang" );
rownames( SCRIMalderelliData.uniqueIS.isCancer.Wang.fisher.table ) <- c( "isCancer", "NOTisCancer" );
SCRIMalderelliData.uniqueIS.isCancer.Wang.fisher.test.results <- fisher.test( SCRIMalderelliData.uniqueIS.isCancer.Wang.fisher.table );
SCRIMalderelliData.uniqueIS.isCancer.Wang.fisher.test.results.p.value <- prettyPrintPValuesTo4Digits( SCRIMalderelliData.uniqueIS.isCancer.Wang.fisher.test.results$p.value, " = ", " < " );

SCRIMalderelliData.uniqueIS.proliferating.isCancer.Wang.fisher.table <- cbind(
    c( SCRIMalderelliData.num.uniqueIS.proliferating.isCancer, SCRIMalderelliData.num.uniqueIS.proliferating.NOTisCancer ),
    c( WangData.num.uniqueIS.isCancer, WangData.num.uniqueIS.NOTisCancer ) );
colnames( SCRIMalderelliData.uniqueIS.proliferating.isCancer.Wang.fisher.table ) <- c( "SCRIMalderelli", "Wang" );
rownames( SCRIMalderelliData.uniqueIS.proliferating.isCancer.Wang.fisher.table ) <- c( "isCancer", "NOTisCancer" );
SCRIMalderelliData.uniqueIS.proliferating.isCancer.Wang.fisher.test.results <- fisher.test( SCRIMalderelliData.uniqueIS.proliferating.isCancer.Wang.fisher.table );
SCRIMalderelliData.uniqueIS.proliferating.isCancer.Wang.fisher.test.results.p.value <- prettyPrintPValuesTo4Digits( SCRIMalderelliData.uniqueIS.proliferating.isCancer.Wang.fisher.test.results$p.value, " = ", " < " );


SCRIMalderelliData.uniqueIS.nonproliferating.isCancer.Wang.fisher.table <- cbind(
    c( SCRIMalderelliData.num.uniqueIS.nonproliferating.isCancer, SCRIMalderelliData.num.uniqueIS.nonproliferating.NOTisCancer ),
    c( WangData.num.uniqueIS.isCancer, WangData.num.uniqueIS.NOTisCancer ) );
colnames( SCRIMalderelliData.uniqueIS.nonproliferating.isCancer.Wang.fisher.table ) <- c( "SCRIMalderelli", "Wang" );
rownames( SCRIMalderelliData.uniqueIS.nonproliferating.isCancer.Wang.fisher.table ) <- c( "isCancer", "NOTisCancer" );
SCRIMalderelliData.uniqueIS.nonproliferating.isCancer.Wang.fisher.test.results <- fisher.test( SCRIMalderelliData.uniqueIS.nonproliferating.isCancer.Wang.fisher.table );
SCRIMalderelliData.uniqueIS.nonproliferating.isCancer.Wang.fisher.test.results.p.value <- prettyPrintPValuesTo4Digits( SCRIMalderelliData.uniqueIS.nonproliferating.isCancer.Wang.fisher.test.results$p.value, " = ", " < " );

@ 

Table~\ref{tab:SCRIMalderelliData.uniqueIS.isCancer.Wang.fisher} shows the comparison of isCancer between SCRIMalderelli (uniqueISs) and Wang that conditions on both margins (Fisher's exact test p\Sexpr{SCRIMalderelliData.uniqueIS.isCancer.Wang.fisher.test.results.p.value}).

\begin{minipage}{\linewidth}
\centering
\par
\bigskip
\captionof{table}{\bf isCancer: SCRIMalderelli uniqueISs vs Wang} \label{tab:SCRIMalderelliData.uniqueIS.isCancer.Wang.fisher}
<<echo = FALSE, results = tex>>=
print( xtable( SCRIMalderelliData.uniqueIS.isCancer.Wang.fisher.table, digits=2 ), floating = FALSE );
@ 
\par
\bigskip
isCancer: SCRIMalderelli uniqueISs vs Wang (Fisher's exact test p\Sexpr{SCRIMalderelliData.uniqueIS.isCancer.Wang.fisher.test.results.p.value})
\par
\bigskip
\end{minipage}

%% isAnyCancer.GO
\begin{minipage}{\linewidth}
\centering
\par
\bigskip
\captionof{figure}{\bf SCRIMalderelli uniqueISs vs Wang: isAnyCancer.GO} \label{fig:SCRIMalderelliData.uniqueIS.p.value.isAnyCancer.GO}
<<echo = FALSE, results = hide, fig = TRUE>>=
.feature <- "isAnyCancer.GO";
qplot(
    c( SCRIMalderelliData.feature.nulls[[ "total" ]][ , .feature ] ),
    geom = "histogram",
    main = "Histogram of null counts", 
    xlab = "Counts of uniqueISs in genes that are isAnyCancer.GO",  
    fill=I("blue"), 
    col=I("black"),
    alpha=I(.2) ) + aes( y = ..density.. ) + labs( y = "Density" ) + geom_vline( xintercept = SCRIMalderelliData.num.uniqueIS.by.feature[ .feature ], color = "red", linetype = "longdash" );
@ 
\par
\bigskip
SCRIMalderelli uniqueISs vs Wang: isAnyCancer.GO \par
(p\Sexpr{prettyPrintPValuesTo4Digits( SCRIMalderelliData.p.values.by.feature[ "isAnyCancer.GO" ], " = ", " < " )})
\par
\bigskip
\end{minipage}

<<echo = FALSE, results = hide>>=
## isAnyCancer.GO
WangData.num.uniqueIS.isAnyCancer.GO <- 
    sum( WangData$isAnyCancer.GO > 0 );
WangData.num.uniqueIS.NOTisAnyCancer.GO <- 
    sum( WangData$isAnyCancer.GO == 0 );
WangData.frac.uniqueIS.isAnyCancer.GO <- 
    mean( WangData$isAnyCancer.GO > 0 );
WangData.frac.uniqueIS.isAnyCancer.GO

SCRIMalderelliData.num.uniqueIS.isAnyCancer.GO.by.subject.by.time <- 
  t( sapply( SCRIMalderelliData.subjectIDs, function( .subject.id ) {
      apply( ( SCRIMalderelliData[ ( SCRIMalderelliData$Pt. == .subject.id ) & ( SCRIMalderelliData$isAnyCancer.GO > 0 ), c( "X1st", "X2nd", "X3rd" ), drop = FALSE ] > 0 ), 2, sum );
  } ) );
SCRIMalderelliData.num.uniqueIS.isAnyCancer.GO.by.time <- apply( SCRIMalderelliData.num.uniqueIS.isAnyCancer.GO.by.subject.by.time, 2, sum );

SCRIMalderelliData.num.uniqueIS.isAnyCancer.GO <- 
    sum( SCRIMalderelliData$isAnyCancer.GO > 0 );
SCRIMalderelliData.num.uniqueIS.NOTisAnyCancer.GO <- 
    sum( SCRIMalderelliData$isAnyCancer.GO == 0 );

SCRIMalderelliData.num.uniqueIS.proliferating.isAnyCancer.GO <- 
    sum( ( SCRIMalderelliData$Proliferating > 0 ) & ( SCRIMalderelliData$isAnyCancer.GO > 0 ) );
SCRIMalderelliData.num.uniqueIS.proliferating.NOTisAnyCancer.GO <- 
    sum( ( SCRIMalderelliData$Proliferating > 0 ) & ( SCRIMalderelliData$isAnyCancer.GO == 0 ) );

SCRIMalderelliData.num.uniqueIS.nonproliferating.isAnyCancer.GO <- 
    sum( ( SCRIMalderelliData$Proliferating == 0 ) & ( SCRIMalderelliData$isAnyCancer.GO > 0 ) );
SCRIMalderelliData.num.uniqueIS.nonproliferating.NOTisAnyCancer.GO <- 
    sum( ( SCRIMalderelliData$Proliferating == 0 ) & ( SCRIMalderelliData$isAnyCancer.GO == 0 ) );

SCRIMalderelliData.uniqueIS.isAnyCancer.GO.Wang.fisher.table <- cbind(
    c( SCRIMalderelliData.num.uniqueIS.isAnyCancer.GO, SCRIMalderelliData.num.uniqueIS.NOTisAnyCancer.GO ),
    c( WangData.num.uniqueIS.isAnyCancer.GO, WangData.num.uniqueIS.NOTisAnyCancer.GO ) );
colnames( SCRIMalderelliData.uniqueIS.isAnyCancer.GO.Wang.fisher.table ) <- c( "SCRIMalderelli", "Wang" );
rownames( SCRIMalderelliData.uniqueIS.isAnyCancer.GO.Wang.fisher.table ) <- c( "isAnyCancer.GO", "NOTisAnyCancer.GO" );
SCRIMalderelliData.uniqueIS.isAnyCancer.GO.Wang.fisher.test.results <- fisher.test( SCRIMalderelliData.uniqueIS.isAnyCancer.GO.Wang.fisher.table );
SCRIMalderelliData.uniqueIS.isAnyCancer.GO.Wang.fisher.test.results.p.value <- prettyPrintPValuesTo4Digits( SCRIMalderelliData.uniqueIS.isAnyCancer.GO.Wang.fisher.test.results$p.value, " = ", " < " );

SCRIMalderelliData.uniqueIS.proliferating.isAnyCancer.GO.Wang.fisher.table <- cbind(
    c( SCRIMalderelliData.num.uniqueIS.proliferating.isAnyCancer.GO, SCRIMalderelliData.num.uniqueIS.proliferating.NOTisAnyCancer.GO ),
    c( WangData.num.uniqueIS.isAnyCancer.GO, WangData.num.uniqueIS.NOTisAnyCancer.GO ) );
colnames( SCRIMalderelliData.uniqueIS.proliferating.isAnyCancer.GO.Wang.fisher.table ) <- c( "SCRIMalderelli", "Wang" );
rownames( SCRIMalderelliData.uniqueIS.proliferating.isAnyCancer.GO.Wang.fisher.table ) <- c( "isAnyCancer.GO", "NOTisAnyCancer.GO" );
SCRIMalderelliData.uniqueIS.proliferating.isAnyCancer.GO.Wang.fisher.test.results <- fisher.test( SCRIMalderelliData.uniqueIS.proliferating.isAnyCancer.GO.Wang.fisher.table );
SCRIMalderelliData.uniqueIS.proliferating.isAnyCancer.GO.Wang.fisher.test.results.p.value <- prettyPrintPValuesTo4Digits( SCRIMalderelliData.uniqueIS.proliferating.isAnyCancer.GO.Wang.fisher.test.results$p.value, " = ", " < " );

SCRIMalderelliData.uniqueIS.nonproliferating.isAnyCancer.GO.Wang.fisher.table <- cbind(
    c( SCRIMalderelliData.num.uniqueIS.nonproliferating.isAnyCancer.GO, SCRIMalderelliData.num.uniqueIS.nonproliferating.NOTisAnyCancer.GO ),
    c( WangData.num.uniqueIS.isAnyCancer.GO, WangData.num.uniqueIS.NOTisAnyCancer.GO ) );
colnames( SCRIMalderelliData.uniqueIS.nonproliferating.isAnyCancer.GO.Wang.fisher.table ) <- c( "SCRIMalderelli", "Wang" );
rownames( SCRIMalderelliData.uniqueIS.nonproliferating.isAnyCancer.GO.Wang.fisher.table ) <- c( "isAnyCancer.GO", "NOTisAnyCancer.GO" );
SCRIMalderelliData.uniqueIS.nonproliferating.isAnyCancer.GO.Wang.fisher.test.results <- fisher.test( SCRIMalderelliData.uniqueIS.nonproliferating.isAnyCancer.GO.Wang.fisher.table );
SCRIMalderelliData.uniqueIS.nonproliferating.isAnyCancer.GO.Wang.fisher.test.results.p.value <- prettyPrintPValuesTo4Digits( SCRIMalderelliData.uniqueIS.nonproliferating.isAnyCancer.GO.Wang.fisher.test.results$p.value, " = ", " < " );

@ 

Table~\ref{tab:SCRIMalderelliData.uniqueIS.isAnyCancer.GO.Wang.fisher} shows the comparison of isAnyCancer.GO between SCRIMalderelli (uniqueISs) and Wang that conditions on both margins (Fisher's exact test p\Sexpr{SCRIMalderelliData.uniqueIS.isAnyCancer.GO.Wang.fisher.test.results.p.value}).

\begin{minipage}{\linewidth}
\centering
\par
\bigskip
\captionof{table}{\bf isAnyCancer.GO: SCRIMalderelli uniqueISs vs Wang} \label{tab:SCRIMalderelliData.uniqueIS.isAnyCancer.GO.Wang.fisher}
<<echo = FALSE, results = tex>>=
print( xtable( SCRIMalderelliData.uniqueIS.isAnyCancer.GO.Wang.fisher.table, digits=2 ), floating = FALSE );
@ 
\par
\bigskip
isAnyCancer.GO: SCRIMalderelli uniqueISs vs Wang (Fisher's exact test p\Sexpr{SCRIMalderelliData.uniqueIS.isAnyCancer.GO.Wang.fisher.test.results.p.value})
\par
\bigskip
\end{minipage}

Table~\ref{tab:SCRIMalderelliData.uniqueIS.p.values.by.feature.adjusted.primaryFeatures.Tenofovir} shows the Holm-adjusted p-values of the uniqueIS test evaluating the primary Tenofovir features in the SCRIMalderelli data set.

\begin{minipage}{\linewidth}
\centering
\par
\bigskip
\captionof{table}{\bf SCRIMalderelli uniqueISs vs Wang: Holm-adjusted p-values of primary Tenofovir features} \label{tab:SCRIMalderelliData.uniqueIS.p.values.by.feature.adjusted.primaryFeatures.Tenofovir}
<<echo = FALSE, results = tex>>=
.tab <- as.matrix( SCRIMalderelliData.p.values.by.feature.adjusted[ primaryFeatures.Tenofovir ] );
colnames( .tab ) <- "Holm-adjusted p-value";
print( xtable( .tab, digits=4 ), floating = FALSE );
@ 
\par
\bigskip
SCRIMalderelli uniqueISs vs Wang: Holm-adjusted p-values of primary Tenofovir features.
\par
\bigskip
\end{minipage}
 
%% isDownregulatedByTenofovir.Rectal   
Figure~\ref{fig:SCRIMalderelliData.uniqueIS.p.value.isDownregulatedByTenofovir.Rectal} shows the significance of the enrichment of the isDownregulatedByTenofovir.Rectal feature among SCRIMalderelli uniqueISs, by showing where the count of unique ISs with this feature falls in the null distribution that is obtained by independently drawing the appropriate number of uniqueISs from the Wang data set. The probability of seeing such an extreme count statistic under the null hypothesis that the isDownregulatedByTenofovir.Rectal feature has the same abundance among SCRIMalderelli uniqueISs as among Wang ISs is p\Sexpr{prettyPrintPValuesTo4Digits( SCRIMalderelliData.p.values.by.feature[ "isDownregulatedByTenofovir.Rectal" ], " = ", " < " )}.

\begin{minipage}{\linewidth}
\centering
\par
\bigskip
\captionof{figure}{\bf SCRIMalderelli uniqueISs vs Wang: isDownregulatedByTenofovir.Rectal} \label{fig:SCRIMalderelliData.uniqueIS.p.value.isDownregulatedByTenofovir.Rectal}
<<echo = FALSE, results = hide, fig = TRUE>>=
.feature <- "isDownregulatedByTenofovir.Rectal";
qplot(
    c( SCRIMalderelliData.feature.nulls[[ "total" ]][ , .feature ] ),
    geom = "histogram",
    main = "Histogram of null counts", 
    xlab = "Counts of uniqueISs in genes that are isDownregulatedByTenofovir.Rectal",  
    fill=I("blue"), 
    col=I("black"),
    alpha=I(.2) ) + aes( y = ..density.. ) + labs( y = "Density" ) + geom_vline( xintercept = SCRIMalderelliData.num.uniqueIS.by.feature[ .feature ], color = "red", linetype = "longdash" );
@ 
\par
\bigskip
SCRIMalderelli uniqueISs vs Wang: isDownregulatedByTenofovir.Rectal \par
(p\Sexpr{prettyPrintPValuesTo4Digits( SCRIMalderelliData.p.values.by.feature[ "isDownregulatedByTenofovir.Rectal" ], " = ", " < " )})
\par
\bigskip
\end{minipage}


<<echo = FALSE, results = hide>>=
## isDownregulatedByTenofovir.Rectal
WangData.num.uniqueIS.isDownregulatedByTenofovir.Rectal <- 
    sum( WangData$isDownregulatedByTenofovir.Rectal > 0, na.rm = T );
WangData.num.uniqueIS.NOTisDownregulatedByTenofovir.Rectal <- 
    sum( WangData$isDownregulatedByTenofovir.Rectal == 0, na.rm = T );
WangData.frac.uniqueIS.isDownregulatedByTenofovir.Rectal <- 
    mean( WangData$isDownregulatedByTenofovir.Rectal > 0, na.rm = T );
WangData.frac.uniqueIS.isDownregulatedByTenofovir.Rectal

SCRIMalderelliData.num.uniqueIS.isDownregulatedByTenofovir.Rectal.by.subject.by.time <- 
  t( sapply( SCRIMalderelliData.subjectIDs, function( .subject.id ) {
      apply( ( SCRIMalderelliData[ ( SCRIMalderelliData$Pt. == .subject.id ) & !is.na( SCRIMalderelliData$isDownregulatedByTenofovir.Rectal ) & ( SCRIMalderelliData$isDownregulatedByTenofovir.Rectal > 0 ), c( "X1st", "X2nd", "X3rd" ), drop = FALSE ] > 0 ), 2, sum );
  } ) );
SCRIMalderelliData.num.uniqueIS.isDownregulatedByTenofovir.Rectal.by.time <- apply( SCRIMalderelliData.num.uniqueIS.isDownregulatedByTenofovir.Rectal.by.subject.by.time, 2, sum );

SCRIMalderelliData.num.uniqueIS.isDownregulatedByTenofovir.Rectal <- 
    sum( SCRIMalderelliData$isDownregulatedByTenofovir.Rectal > 0, na.rm = T );
SCRIMalderelliData.num.uniqueIS.NOTisDownregulatedByTenofovir.Rectal <- 
    sum( SCRIMalderelliData$isDownregulatedByTenofovir.Rectal == 0, na.rm = T );

SCRIMalderelliData.num.uniqueIS.proliferating.isDownregulatedByTenofovir.Rectal <- 
    sum( ( SCRIMalderelliData$Proliferating > 0 ) & !is.na( SCRIMalderelliData$isDownregulatedByTenofovir.Rectal ) & ( SCRIMalderelliData$isDownregulatedByTenofovir.Rectal > 0 ) );
SCRIMalderelliData.num.uniqueIS.proliferating.NOTisDownregulatedByTenofovir.Rectal <- 
    sum( ( SCRIMalderelliData$Proliferating > 0 ) & !is.na( SCRIMalderelliData$isDownregulatedByTenofovir.Rectal ) & ( SCRIMalderelliData$isDownregulatedByTenofovir.Rectal == 0 ) );

SCRIMalderelliData.num.uniqueIS.nonproliferating.isDownregulatedByTenofovir.Rectal <- 
    sum( ( SCRIMalderelliData$Proliferating == 0 ) & !is.na( SCRIMalderelliData$isDownregulatedByTenofovir.Rectal ) & ( SCRIMalderelliData$isDownregulatedByTenofovir.Rectal > 0 ) );
SCRIMalderelliData.num.uniqueIS.nonproliferating.NOTisDownregulatedByTenofovir.Rectal <- 
    sum( ( SCRIMalderelliData$Proliferating == 0 ) & !is.na( SCRIMalderelliData$isDownregulatedByTenofovir.Rectal ) & ( SCRIMalderelliData$isDownregulatedByTenofovir.Rectal == 0 ) );

SCRIMalderelliData.uniqueIS.isDownregulatedByTenofovir.Rectal.Wang.fisher.table <- cbind(
    c( SCRIMalderelliData.num.uniqueIS.isDownregulatedByTenofovir.Rectal, SCRIMalderelliData.num.uniqueIS.NOTisDownregulatedByTenofovir.Rectal ),
    c( WangData.num.uniqueIS.isDownregulatedByTenofovir.Rectal, WangData.num.uniqueIS.NOTisDownregulatedByTenofovir.Rectal ) );
colnames( SCRIMalderelliData.uniqueIS.isDownregulatedByTenofovir.Rectal.Wang.fisher.table ) <- c( "SCRIMalderelli", "Wang" );
rownames( SCRIMalderelliData.uniqueIS.isDownregulatedByTenofovir.Rectal.Wang.fisher.table ) <- c( "isDownregulatedByTenofovir.Rectal", "NOTisDownregulatedByTenofovir.Rectal" );
SCRIMalderelliData.uniqueIS.isDownregulatedByTenofovir.Rectal.Wang.fisher.test.results <- fisher.test( SCRIMalderelliData.uniqueIS.isDownregulatedByTenofovir.Rectal.Wang.fisher.table );
SCRIMalderelliData.uniqueIS.isDownregulatedByTenofovir.Rectal.Wang.fisher.test.results.p.value <- prettyPrintPValuesTo4Digits( SCRIMalderelliData.uniqueIS.isDownregulatedByTenofovir.Rectal.Wang.fisher.test.results$p.value, " = ", " < " );

SCRIMalderelliData.uniqueIS.proliferating.isDownregulatedByTenofovir.Rectal.Wang.fisher.table <- cbind(
    c( SCRIMalderelliData.num.uniqueIS.proliferating.isDownregulatedByTenofovir.Rectal, SCRIMalderelliData.num.uniqueIS.proliferating.NOTisDownregulatedByTenofovir.Rectal ),
    c( WangData.num.uniqueIS.isDownregulatedByTenofovir.Rectal, WangData.num.uniqueIS.NOTisDownregulatedByTenofovir.Rectal ) );
colnames( SCRIMalderelliData.uniqueIS.proliferating.isDownregulatedByTenofovir.Rectal.Wang.fisher.table ) <- c( "SCRIMalderelli", "Wang" );
rownames( SCRIMalderelliData.uniqueIS.proliferating.isDownregulatedByTenofovir.Rectal.Wang.fisher.table ) <- c( "isDownregulatedByTenofovir.Rectal", "NOTisDownregulatedByTenofovir.Rectal" );
SCRIMalderelliData.uniqueIS.proliferating.isDownregulatedByTenofovir.Rectal.Wang.fisher.test.results <- fisher.test( SCRIMalderelliData.uniqueIS.proliferating.isDownregulatedByTenofovir.Rectal.Wang.fisher.table );
SCRIMalderelliData.uniqueIS.proliferating.isDownregulatedByTenofovir.Rectal.Wang.fisher.test.results.p.value <- prettyPrintPValuesTo4Digits( SCRIMalderelliData.uniqueIS.proliferating.isDownregulatedByTenofovir.Rectal.Wang.fisher.test.results$p.value, " = ", " < " );

SCRIMalderelliData.uniqueIS.nonproliferating.isDownregulatedByTenofovir.Rectal.Wang.fisher.table <- cbind(
    c( SCRIMalderelliData.num.uniqueIS.nonproliferating.isDownregulatedByTenofovir.Rectal, SCRIMalderelliData.num.uniqueIS.nonproliferating.NOTisDownregulatedByTenofovir.Rectal ),
    c( WangData.num.uniqueIS.isDownregulatedByTenofovir.Rectal, WangData.num.uniqueIS.NOTisDownregulatedByTenofovir.Rectal ) );
colnames( SCRIMalderelliData.uniqueIS.nonproliferating.isDownregulatedByTenofovir.Rectal.Wang.fisher.table ) <- c( "SCRIMalderelli", "Wang" );
rownames( SCRIMalderelliData.uniqueIS.nonproliferating.isDownregulatedByTenofovir.Rectal.Wang.fisher.table ) <- c( "isDownregulatedByTenofovir.Rectal", "NOTisDownregulatedByTenofovir.Rectal" );
SCRIMalderelliData.uniqueIS.nonproliferating.isDownregulatedByTenofovir.Rectal.Wang.fisher.test.results <- fisher.test( SCRIMalderelliData.uniqueIS.nonproliferating.isDownregulatedByTenofovir.Rectal.Wang.fisher.table );
SCRIMalderelliData.uniqueIS.nonproliferating.isDownregulatedByTenofovir.Rectal.Wang.fisher.test.results.p.value <- prettyPrintPValuesTo4Digits( SCRIMalderelliData.uniqueIS.nonproliferating.isDownregulatedByTenofovir.Rectal.Wang.fisher.test.results$p.value, " = ", " < " );
@ 

Table~\ref{tab:SCRIMalderelliData.uniqueIS.isDownregulatedByTenofovir.Rectal.Wang.fisher} shows the comparison of isDownregulatedByTenofovir.Rectal between SCRIMalderelli (uniqueISs) and Wang that conditions on both margins (Fisher's exact test p\Sexpr{SCRIMalderelliData.uniqueIS.isDownregulatedByTenofovir.Rectal.Wang.fisher.test.results.p.value}).

\begin{minipage}{\linewidth}
\centering
\par
\bigskip
\captionof{table}{\bf isDownregulatedByTenofovir.Rectal: SCRIMalderelli uniqueISs vs Wang} \label{tab:SCRIMalderelliData.uniqueIS.isDownregulatedByTenofovir.Rectal.Wang.fisher}
<<echo = FALSE, results = tex>>=
print( xtable( SCRIMalderelliData.uniqueIS.isDownregulatedByTenofovir.Rectal.Wang.fisher.table, digits=2 ), floating = FALSE );
@ 
\par
\bigskip
isDownregulatedByTenofovir.Rectal: SCRIMalderelli uniqueISs vs Wang (Fisher's exact test p\Sexpr{SCRIMalderelliData.uniqueIS.isDownregulatedByTenofovir.Rectal.Wang.fisher.test.results.p.value})
\par
\bigskip
\end{minipage}

%% isUpregulatedByTenofovir.Rectal   
Figure~\ref{fig:SCRIMalderelliData.uniqueIS.p.value.isUpregulatedByTenofovir.Rectal} shows the significance of the enrichment of the isUpregulatedByTenofovir.Rectal feature among SCRIMalderelli uniqueISs, by showing where the count of unique ISs with this feature falls in the null distribution that is obtained by independently drawing the appropriate number of uniqueISs from the Wang data set. The probability of seeing such an extreme count statistic under the null hypothesis that the isUpregulatedByTenofovir.Rectal feature has the same abundance among SCRIMalderelli uniqueISs as among Wang ISs is p\Sexpr{prettyPrintPValuesTo4Digits( SCRIMalderelliData.p.values.by.feature[ "isUpregulatedByTenofovir.Rectal" ], " = ", " < " )}.

\begin{minipage}{\linewidth}
\centering
\par
\bigskip
\captionof{figure}{\bf SCRIMalderelli uniqueISs vs Wang: isUpregulatedByTenofovir.Rectal} \label{fig:SCRIMalderelliData.uniqueIS.p.value.isUpregulatedByTenofovir.Rectal}
<<echo = FALSE, results = hide, fig = TRUE>>=
.feature <- "isUpregulatedByTenofovir.Rectal";
qplot(
    c( SCRIMalderelliData.feature.nulls[[ "total" ]][ , .feature ] ),
    geom = "histogram",
    main = "Histogram of null counts", 
    xlab = "Counts of uniqueISs in genes that are isUpregulatedByTenofovir.Rectal",  
    fill=I("blue"), 
    col=I("black"),
    alpha=I(.2) ) + aes( y = ..density.. ) + labs( y = "Density" ) + geom_vline( xintercept = SCRIMalderelliData.num.uniqueIS.by.feature[ .feature ], color = "red", linetype = "longdash" );
@ 
\par
\bigskip
SCRIMalderelli uniqueISs vs Wang: isUpregulatedByTenofovir.Rectal \par
(p\Sexpr{prettyPrintPValuesTo4Digits( SCRIMalderelliData.p.values.by.feature[ "isUpregulatedByTenofovir.Rectal" ], " = ", " < " )})
\par
\bigskip
\end{minipage}

<<echo = FALSE, results = hide>>=
## isUpregulatedByTenofovir.Rectal
WangData.num.uniqueIS.isUpregulatedByTenofovir.Rectal <- 
    sum( WangData$isUpregulatedByTenofovir.Rectal > 0, na.rm = T );
WangData.num.uniqueIS.NOTisUpregulatedByTenofovir.Rectal <- 
    sum( WangData$isUpregulatedByTenofovir.Rectal == 0, na.rm = T );
WangData.frac.uniqueIS.isUpregulatedByTenofovir.Rectal <- 
    mean( WangData$isUpregulatedByTenofovir.Rectal > 0, na.rm = T );
WangData.frac.uniqueIS.isUpregulatedByTenofovir.Rectal

SCRIMalderelliData.num.uniqueIS.isUpregulatedByTenofovir.Rectal.by.subject.by.time <- 
  t( sapply( SCRIMalderelliData.subjectIDs, function( .subject.id ) {
      apply( ( SCRIMalderelliData[ ( SCRIMalderelliData$Pt. == .subject.id ) & !is.na( SCRIMalderelliData$isUpregulatedByTenofovir.Rectal ) & ( SCRIMalderelliData$isUpregulatedByTenofovir.Rectal > 0 ), c( "X1st", "X2nd", "X3rd" ), drop = FALSE > 0 ] ), 2, sum );
  } ) );
SCRIMalderelliData.num.uniqueIS.isUpregulatedByTenofovir.Rectal.by.time <- apply( SCRIMalderelliData.num.uniqueIS.isUpregulatedByTenofovir.Rectal.by.subject.by.time, 2, sum );

SCRIMalderelliData.num.uniqueIS.isUpregulatedByTenofovir.Rectal <- 
    sum( SCRIMalderelliData$isUpregulatedByTenofovir.Rectal > 0, na.rm = T );
SCRIMalderelliData.num.uniqueIS.NOTisUpregulatedByTenofovir.Rectal <- 
    sum( SCRIMalderelliData$isUpregulatedByTenofovir.Rectal == 0, na.rm = T );

SCRIMalderelliData.num.uniqueIS.proliferating.isUpregulatedByTenofovir.Rectal <- 
    sum( ( SCRIMalderelliData$Proliferating > 0 ) & !is.na( SCRIMalderelliData$isUpregulatedByTenofovir.Rectal ) & ( SCRIMalderelliData$isUpregulatedByTenofovir.Rectal > 0 ) );
SCRIMalderelliData.num.uniqueIS.proliferating.NOTisUpregulatedByTenofovir.Rectal <- 
    sum( ( SCRIMalderelliData$Proliferating > 0 ) & !is.na( SCRIMalderelliData$isUpregulatedByTenofovir.Rectal ) & ( SCRIMalderelliData$isUpregulatedByTenofovir.Rectal == 0 ) );

SCRIMalderelliData.num.uniqueIS.nonproliferating.isUpregulatedByTenofovir.Rectal <- 
    sum( ( SCRIMalderelliData$Proliferating == 0 ) & !is.na( SCRIMalderelliData$isUpregulatedByTenofovir.Rectal ) & ( SCRIMalderelliData$isUpregulatedByTenofovir.Rectal > 0 ) );
SCRIMalderelliData.num.uniqueIS.nonproliferating.NOTisUpregulatedByTenofovir.Rectal <- 
    sum( ( SCRIMalderelliData$Proliferating == 0 ) & !is.na( SCRIMalderelliData$isUpregulatedByTenofovir.Rectal ) & ( SCRIMalderelliData$isUpregulatedByTenofovir.Rectal == 0 ) );

SCRIMalderelliData.uniqueIS.isUpregulatedByTenofovir.Rectal.Wang.fisher.table <- cbind(
    c( SCRIMalderelliData.num.uniqueIS.isUpregulatedByTenofovir.Rectal, SCRIMalderelliData.num.uniqueIS.NOTisUpregulatedByTenofovir.Rectal ),
    c( WangData.num.uniqueIS.isUpregulatedByTenofovir.Rectal, WangData.num.uniqueIS.NOTisUpregulatedByTenofovir.Rectal ) );
colnames( SCRIMalderelliData.uniqueIS.isUpregulatedByTenofovir.Rectal.Wang.fisher.table ) <- c( "SCRIMalderelli", "Wang" );
rownames( SCRIMalderelliData.uniqueIS.isUpregulatedByTenofovir.Rectal.Wang.fisher.table ) <- c( "isUpregulatedByTenofovir.Rectal", "NOTisUpregulatedByTenofovir.Rectal" );
SCRIMalderelliData.uniqueIS.isUpregulatedByTenofovir.Rectal.Wang.fisher.test.results <- fisher.test( SCRIMalderelliData.uniqueIS.isUpregulatedByTenofovir.Rectal.Wang.fisher.table );
SCRIMalderelliData.uniqueIS.isUpregulatedByTenofovir.Rectal.Wang.fisher.test.results.p.value <- prettyPrintPValuesTo4Digits( SCRIMalderelliData.uniqueIS.isUpregulatedByTenofovir.Rectal.Wang.fisher.test.results$p.value, " = ", " < " );

SCRIMalderelliData.uniqueIS.proliferating.isUpregulatedByTenofovir.Rectal.Wang.fisher.table <- cbind(
    c( SCRIMalderelliData.num.uniqueIS.proliferating.isUpregulatedByTenofovir.Rectal, SCRIMalderelliData.num.uniqueIS.proliferating.NOTisUpregulatedByTenofovir.Rectal ),
    c( WangData.num.uniqueIS.isUpregulatedByTenofovir.Rectal, WangData.num.uniqueIS.NOTisUpregulatedByTenofovir.Rectal ) );
colnames( SCRIMalderelliData.uniqueIS.proliferating.isUpregulatedByTenofovir.Rectal.Wang.fisher.table ) <- c( "SCRIMalderelli", "Wang" );
rownames( SCRIMalderelliData.uniqueIS.proliferating.isUpregulatedByTenofovir.Rectal.Wang.fisher.table ) <- c( "isUpregulatedByTenofovir.Rectal", "NOTisUpregulatedByTenofovir.Rectal" );
SCRIMalderelliData.uniqueIS.proliferating.isUpregulatedByTenofovir.Rectal.Wang.fisher.test.results <- fisher.test( SCRIMalderelliData.uniqueIS.proliferating.isUpregulatedByTenofovir.Rectal.Wang.fisher.table );
SCRIMalderelliData.uniqueIS.proliferating.isUpregulatedByTenofovir.Rectal.Wang.fisher.test.results.p.value <- prettyPrintPValuesTo4Digits( SCRIMalderelliData.uniqueIS.proliferating.isUpregulatedByTenofovir.Rectal.Wang.fisher.test.results$p.value, " = ", " < " );

SCRIMalderelliData.uniqueIS.nonproliferating.isUpregulatedByTenofovir.Rectal.Wang.fisher.table <- cbind(
    c( SCRIMalderelliData.num.uniqueIS.nonproliferating.isUpregulatedByTenofovir.Rectal, SCRIMalderelliData.num.uniqueIS.nonproliferating.NOTisUpregulatedByTenofovir.Rectal ),
    c( WangData.num.uniqueIS.isUpregulatedByTenofovir.Rectal, WangData.num.uniqueIS.NOTisUpregulatedByTenofovir.Rectal ) );
colnames( SCRIMalderelliData.uniqueIS.nonproliferating.isUpregulatedByTenofovir.Rectal.Wang.fisher.table ) <- c( "SCRIMalderelli", "Wang" );
rownames( SCRIMalderelliData.uniqueIS.nonproliferating.isUpregulatedByTenofovir.Rectal.Wang.fisher.table ) <- c( "isUpregulatedByTenofovir.Rectal", "NOTisUpregulatedByTenofovir.Rectal" );
SCRIMalderelliData.uniqueIS.nonproliferating.isUpregulatedByTenofovir.Rectal.Wang.fisher.test.results <- fisher.test( SCRIMalderelliData.uniqueIS.nonproliferating.isUpregulatedByTenofovir.Rectal.Wang.fisher.table );
SCRIMalderelliData.uniqueIS.nonproliferating.isUpregulatedByTenofovir.Rectal.Wang.fisher.test.results.p.value <- prettyPrintPValuesTo4Digits( SCRIMalderelliData.uniqueIS.nonproliferating.isUpregulatedByTenofovir.Rectal.Wang.fisher.test.results$p.value, " = ", " < " );
@ 

Table~\ref{tab:SCRIMalderelliData.uniqueIS.isUpregulatedByTenofovir.Rectal.Wang.fisher} shows the comparison of isUpregulatedByTenofovir.Rectal between SCRIMalderelli (uniqueISs) and Wang that conditions on both margins (Fisher's exact test p\Sexpr{SCRIMalderelliData.uniqueIS.isUpregulatedByTenofovir.Rectal.Wang.fisher.test.results.p.value}).

\begin{minipage}{\linewidth}
\centering
\par
\bigskip
\captionof{table}{\bf isUpregulatedByTenofovir.Rectal: SCRIMalderelli uniqueISs vs Wang} \label{tab:SCRIMalderelliData.uniqueIS.isUpregulatedByTenofovir.Rectal.Wang.fisher}
<<echo = FALSE, results = tex>>=
print( xtable( SCRIMalderelliData.uniqueIS.isUpregulatedByTenofovir.Rectal.Wang.fisher.table, digits=2 ), floating = FALSE );
@ 
\par
\bigskip
isUpregulatedByTenofovir.Rectal: SCRIMalderelli uniqueISs vs Wang (Fisher's exact test p\Sexpr{SCRIMalderelliData.uniqueIS.isUpregulatedByTenofovir.Rectal.Wang.fisher.test.results.p.value})
\par
\bigskip
\end{minipage}

%% isDownregulatedByTenofovir.exvivo   
Figure~\ref{fig:SCRIMalderelliData.uniqueIS.p.value.isDownregulatedByTenofovir.exvivo} shows the significance of the enrichment of the isDownregulatedByTenofovir.exvivo feature among SCRIMalderelli uniqueISs, by showing where the count of unique ISs with this feature falls in the null distribution that is obtained by independently drawing the appropriate number of uniqueISs from the Wang data set. The probability of seeing such an extreme count statistic under the null hypothesis that the isDownregulatedByTenofovir.exvivo feature has the same abundance among SCRIMalderelli uniqueISs as among Wang ISs is p\Sexpr{prettyPrintPValuesTo4Digits( SCRIMalderelliData.p.values.by.feature[ "isDownregulatedByTenofovir.exvivo" ], " = ", " < " )}.

\begin{minipage}{\linewidth}
\centering
\par
\bigskip
\captionof{figure}{\bf SCRIMalderelli uniqueISs vs Wang: isDownregulatedByTenofovir.exvivo} \label{fig:SCRIMalderelliData.uniqueIS.p.value.isDownregulatedByTenofovir.exvivo}
<<echo = FALSE, results = hide, fig = TRUE>>=
.feature <- "isDownregulatedByTenofovir.exvivo";
qplot(
    c( SCRIMalderelliData.feature.nulls[[ "total" ]][ , .feature ] ),
    geom = "histogram",
    main = "Histogram of null counts", 
    xlab = "Counts of uniqueISs in genes that are isDownregulatedByTenofovir.exvivo",  
    fill=I("blue"), 
    col=I("black"),
    alpha=I(.2) ) + aes( y = ..density.. ) + labs( y = "Density" ) + geom_vline( xintercept = SCRIMalderelliData.num.uniqueIS.by.feature[ .feature ], color = "red", linetype = "longdash" );
@ 
\par
\bigskip
SCRIMalderelli uniqueISs vs Wang: isDownregulatedByTenofovir.exvivo \par
(p\Sexpr{prettyPrintPValuesTo4Digits( SCRIMalderelliData.p.values.by.feature[ "isDownregulatedByTenofovir.exvivo" ], " = ", " < " )})
\par
\bigskip
\end{minipage}

<<echo = FALSE, results = hide>>=
## isDownregulatedByTenofovir.exvivo
WangData.num.uniqueIS.isDownregulatedByTenofovir.exvivo <- 
    sum( WangData$isDownregulatedByTenofovir.exvivo > 0, na.rm = T );
WangData.num.uniqueIS.NOTisDownregulatedByTenofovir.exvivo <- 
    sum( WangData$isDownregulatedByTenofovir.exvivo == 0, na.rm = T );
WangData.frac.uniqueIS.isDownregulatedByTenofovir.exvivo <- 
    mean( WangData$isDownregulatedByTenofovir.exvivo > 0, na.rm = T );
WangData.frac.uniqueIS.isDownregulatedByTenofovir.exvivo

SCRIMalderelliData.num.uniqueIS.isDownregulatedByTenofovir.exvivo.by.subject.by.time <- 
  t( sapply( SCRIMalderelliData.subjectIDs, function( .subject.id ) {
      apply( ( SCRIMalderelliData[ ( SCRIMalderelliData$Pt. == .subject.id ) & !is.na( SCRIMalderelliData$isDownregulatedByTenofovir.exvivo ) & ( SCRIMalderelliData$isDownregulatedByTenofovir.exvivo > 0 ), c( "X1st", "X2nd", "X3rd" ), drop = FALSE ] ), 2, sum );
  } ) );
SCRIMalderelliData.num.uniqueIS.isDownregulatedByTenofovir.exvivo.by.time <- apply( SCRIMalderelliData.num.uniqueIS.isDownregulatedByTenofovir.exvivo.by.subject.by.time, 2, sum );

SCRIMalderelliData.num.uniqueIS.isDownregulatedByTenofovir.exvivo <- 
    sum( SCRIMalderelliData$isDownregulatedByTenofovir.exvivo > 0, na.rm = T );
SCRIMalderelliData.num.uniqueIS.NOTisDownregulatedByTenofovir.exvivo <- 
    sum( SCRIMalderelliData$isDownregulatedByTenofovir.exvivo == 0, na.rm = T );

SCRIMalderelliData.num.uniqueIS.proliferating.isDownregulatedByTenofovir.exvivo <- 
    sum( ( SCRIMalderelliData$Proliferating > 0 ) & !is.na( SCRIMalderelliData$isDownregulatedByTenofovir.exvivo ) & ( SCRIMalderelliData$isDownregulatedByTenofovir.exvivo > 0 ) );
SCRIMalderelliData.num.uniqueIS.proliferating.NOTisDownregulatedByTenofovir.exvivo <- 
    sum( ( SCRIMalderelliData$Proliferating > 0 ) & !is.na( SCRIMalderelliData$isDownregulatedByTenofovir.exvivo ) & ( SCRIMalderelliData$isDownregulatedByTenofovir.exvivo == 0 ) );

SCRIMalderelliData.num.uniqueIS.nonproliferating.isDownregulatedByTenofovir.exvivo <- 
    sum( ( SCRIMalderelliData$Proliferating == 0 ) & !is.na( SCRIMalderelliData$isDownregulatedByTenofovir.exvivo ) & ( SCRIMalderelliData$isDownregulatedByTenofovir.exvivo > 0 ) );
SCRIMalderelliData.num.uniqueIS.nonproliferating.NOTisDownregulatedByTenofovir.exvivo <- 
    sum( ( SCRIMalderelliData$Proliferating == 0 ) & !is.na( SCRIMalderelliData$isDownregulatedByTenofovir.exvivo ) & ( SCRIMalderelliData$isDownregulatedByTenofovir.exvivo == 0 ) );

SCRIMalderelliData.uniqueIS.isDownregulatedByTenofovir.exvivo.Wang.fisher.table <- cbind(
    c( SCRIMalderelliData.num.uniqueIS.isDownregulatedByTenofovir.exvivo, SCRIMalderelliData.num.uniqueIS.NOTisDownregulatedByTenofovir.exvivo ),
    c( WangData.num.uniqueIS.isDownregulatedByTenofovir.exvivo, WangData.num.uniqueIS.NOTisDownregulatedByTenofovir.exvivo ) );
colnames( SCRIMalderelliData.uniqueIS.isDownregulatedByTenofovir.exvivo.Wang.fisher.table ) <- c( "SCRIMalderelli", "Wang" );
rownames( SCRIMalderelliData.uniqueIS.isDownregulatedByTenofovir.exvivo.Wang.fisher.table ) <- c( "isDownregulatedByTenofovir.exvivo", "NOTisDownregulatedByTenofovir.exvivo" );
SCRIMalderelliData.uniqueIS.isDownregulatedByTenofovir.exvivo.Wang.fisher.test.results <- fisher.test( SCRIMalderelliData.uniqueIS.isDownregulatedByTenofovir.exvivo.Wang.fisher.table );
SCRIMalderelliData.uniqueIS.isDownregulatedByTenofovir.exvivo.Wang.fisher.test.results.p.value <- prettyPrintPValuesTo4Digits( SCRIMalderelliData.uniqueIS.isDownregulatedByTenofovir.exvivo.Wang.fisher.test.results$p.value, " = ", " < " );

SCRIMalderelliData.uniqueIS.proliferating.isDownregulatedByTenofovir.exvivo.Wang.fisher.table <- cbind(
    c( SCRIMalderelliData.num.uniqueIS.proliferating.isDownregulatedByTenofovir.exvivo, SCRIMalderelliData.num.uniqueIS.proliferating.NOTisDownregulatedByTenofovir.exvivo ),
    c( WangData.num.uniqueIS.isDownregulatedByTenofovir.exvivo, WangData.num.uniqueIS.NOTisDownregulatedByTenofovir.exvivo ) );
colnames( SCRIMalderelliData.uniqueIS.proliferating.isDownregulatedByTenofovir.exvivo.Wang.fisher.table ) <- c( "SCRIMalderelli", "Wang" );
rownames( SCRIMalderelliData.uniqueIS.proliferating.isDownregulatedByTenofovir.exvivo.Wang.fisher.table ) <- c( "isDownregulatedByTenofovir.exvivo", "NOTisDownregulatedByTenofovir.exvivo" );
SCRIMalderelliData.uniqueIS.proliferating.isDownregulatedByTenofovir.exvivo.Wang.fisher.test.results <- fisher.test( SCRIMalderelliData.uniqueIS.proliferating.isDownregulatedByTenofovir.exvivo.Wang.fisher.table );
SCRIMalderelliData.uniqueIS.proliferating.isDownregulatedByTenofovir.exvivo.Wang.fisher.test.results.p.value <- prettyPrintPValuesTo4Digits( SCRIMalderelliData.uniqueIS.proliferating.isDownregulatedByTenofovir.exvivo.Wang.fisher.test.results$p.value, " = ", " < " );

SCRIMalderelliData.uniqueIS.nonproliferating.isDownregulatedByTenofovir.exvivo.Wang.fisher.table <- cbind(
    c( SCRIMalderelliData.num.uniqueIS.nonproliferating.isDownregulatedByTenofovir.exvivo, SCRIMalderelliData.num.uniqueIS.nonproliferating.NOTisDownregulatedByTenofovir.exvivo ),
    c( WangData.num.uniqueIS.isDownregulatedByTenofovir.exvivo, WangData.num.uniqueIS.NOTisDownregulatedByTenofovir.exvivo ) );
colnames( SCRIMalderelliData.uniqueIS.nonproliferating.isDownregulatedByTenofovir.exvivo.Wang.fisher.table ) <- c( "SCRIMalderelli", "Wang" );
rownames( SCRIMalderelliData.uniqueIS.nonproliferating.isDownregulatedByTenofovir.exvivo.Wang.fisher.table ) <- c( "isDownregulatedByTenofovir.exvivo", "NOTisDownregulatedByTenofovir.exvivo" );
SCRIMalderelliData.uniqueIS.nonproliferating.isDownregulatedByTenofovir.exvivo.Wang.fisher.test.results <- fisher.test( SCRIMalderelliData.uniqueIS.nonproliferating.isDownregulatedByTenofovir.exvivo.Wang.fisher.table );
SCRIMalderelliData.uniqueIS.nonproliferating.isDownregulatedByTenofovir.exvivo.Wang.fisher.test.results.p.value <- prettyPrintPValuesTo4Digits( SCRIMalderelliData.uniqueIS.nonproliferating.isDownregulatedByTenofovir.exvivo.Wang.fisher.test.results$p.value, " = ", " < " );
@ 

Table~\ref{tab:SCRIMalderelliData.uniqueIS.isDownregulatedByTenofovir.exvivo.Wang.fisher} shows the comparison of isDownregulatedByTenofovir.exvivo between SCRIMalderelli (uniqueISs) and Wang that conditions on both margins (Fisher's exact test p\Sexpr{SCRIMalderelliData.uniqueIS.isDownregulatedByTenofovir.exvivo.Wang.fisher.test.results.p.value}).

\begin{minipage}{\linewidth}
\centering
\par
\bigskip
\captionof{table}{\bf isDownregulatedByTenofovir.exvivo: SCRIMalderelli uniqueISs vs Wang} \label{tab:SCRIMalderelliData.uniqueIS.isDownregulatedByTenofovir.exvivo.Wang.fisher}
<<echo = FALSE, results = tex>>=
print( xtable( SCRIMalderelliData.uniqueIS.isDownregulatedByTenofovir.exvivo.Wang.fisher.table, digits=2 ), floating = FALSE );
@ 
\par
\bigskip
isDownregulatedByTenofovir.exvivo: SCRIMalderelli uniqueISs vs Wang (Fisher's exact test p\Sexpr{SCRIMalderelliData.uniqueIS.isDownregulatedByTenofovir.exvivo.Wang.fisher.test.results.p.value})
\par
\bigskip
\end{minipage}


%% isUpregulatedByTenofovir.exvivo   
Figure~\ref{fig:SCRIMalderelliData.uniqueIS.p.value.isUpregulatedByTenofovir.exvivo} shows the significance of the enrichment of the isUpregulatedByTenofovir.exvivo feature among SCRIMalderelli uniqueISs, by showing where the count of unique ISs with this feature falls in the null distribution that is obtained by independently drawing the appropriate number of uniqueISs from the Wang data set. The probability of seeing such an extreme count statistic under the null hypothesis that the isUpregulatedByTenofovir.exvivo feature has the same abundance among SCRIMalderelli uniqueISs as among Wang ISs is p\Sexpr{prettyPrintPValuesTo4Digits( SCRIMalderelliData.p.values.by.feature[ "isUpregulatedByTenofovir.exvivo" ], " = ", " < " )}.

\begin{minipage}{\linewidth}
\centering
\par
\bigskip
\captionof{figure}{\bf SCRIMalderelli uniqueISs vs Wang: isUpregulatedByTenofovir.exvivo} \label{fig:SCRIMalderelliData.uniqueIS.p.value.isUpregulatedByTenofovir.exvivo}
<<echo = FALSE, results = hide, fig = TRUE>>=
.feature <- "isUpregulatedByTenofovir.exvivo";
qplot(
    c( SCRIMalderelliData.feature.nulls[[ "total" ]][ , .feature ] ),
    geom = "histogram",
    main = "Histogram of null counts", 
    xlab = "Counts of uniqueISs in genes that are isUpregulatedByTenofovir.exvivo",  
    fill=I("blue"), 
    col=I("black"),
    alpha=I(.2) ) + aes( y = ..density.. ) + labs( y = "Density" ) + geom_vline( xintercept = SCRIMalderelliData.num.uniqueIS.by.feature[ .feature ], color = "red", linetype = "longdash" );
@ 
\par
\bigskip
SCRIMalderelli uniqueISs vs Wang: isUpregulatedByTenofovir.exvivo \par
(p\Sexpr{prettyPrintPValuesTo4Digits( SCRIMalderelliData.p.values.by.feature[ "isUpregulatedByTenofovir.exvivo" ], " = ", " < " )})
\par
\bigskip
\end{minipage}

<<echo = FALSE, results = hide>>=
SCRIMalderelliData.num.uniqueIS.by.subject.by.time <- t( sapply( SCRIMalderelliData.subjectIDs, function ( .subject.id ) {
    apply( SCRIMalderelliData.observed.at.time[ SCRIMalderelliData$Pt. == .subject.id, , drop = FALSE ], 2, sum );
} ) );

SCRIMalderelliData.num.uniqueIS.by.time <- apply( SCRIMalderelliData.num.uniqueIS.by.subject.by.time, 2, sum );
SCRIMalderelliData.num.uniqueIS.by.time
@

<<echo = FALSE, results = hide>>=
## isUpregulatedByTenofovir.exvivo
WangData.num.uniqueIS.isUpregulatedByTenofovir.exvivo <- 
    sum( WangData$isUpregulatedByTenofovir.exvivo > 0, na.rm = T );
WangData.num.uniqueIS.NOTisUpregulatedByTenofovir.exvivo <- 
    sum( WangData$isUpregulatedByTenofovir.exvivo == 0, na.rm = T );
WangData.frac.uniqueIS.isUpregulatedByTenofovir.exvivo <- 
    mean( WangData$isUpregulatedByTenofovir.exvivo > 0, na.rm = T );
WangData.frac.uniqueIS.isUpregulatedByTenofovir.exvivo

SCRIMalderelliData.num.uniqueIS.isUpregulatedByTenofovir.exvivo.by.subject.by.time <- 
  t( sapply( SCRIMalderelliData.subjectIDs, function( .subject.id ) {
      apply( ( SCRIMalderelliData[ ( SCRIMalderelliData$Pt. == .subject.id ) & !is.na( SCRIMalderelliData$isUpregulatedByTenofovir.exvivo ) & ( SCRIMalderelliData$isUpregulatedByTenofovir.exvivo > 0 ), c( "X1st", "X2nd", "X3rd" ), drop = FALSE ] ), 2, sum );
  } ) );
SCRIMalderelliData.num.uniqueIS.isUpregulatedByTenofovir.exvivo.by.time <- apply( SCRIMalderelliData.num.uniqueIS.isUpregulatedByTenofovir.exvivo.by.subject.by.time, 2, sum );

SCRIMalderelliData.num.uniqueIS.isUpregulatedByTenofovir.exvivo <- 
    sum( SCRIMalderelliData$isUpregulatedByTenofovir.exvivo > 0, na.rm = T );
SCRIMalderelliData.num.uniqueIS.NOTisUpregulatedByTenofovir.exvivo <- 
    sum( SCRIMalderelliData$isUpregulatedByTenofovir.exvivo == 0, na.rm = T );

SCRIMalderelliData.num.uniqueIS.proliferating.isUpregulatedByTenofovir.exvivo <- 
    sum( ( SCRIMalderelliData$Proliferating > 0 ) & !is.na( SCRIMalderelliData$isUpregulatedByTenofovir.exvivo ) & ( SCRIMalderelliData$isUpregulatedByTenofovir.exvivo > 0 ) );
SCRIMalderelliData.num.uniqueIS.proliferating.NOTisUpregulatedByTenofovir.exvivo <- 
    sum( ( SCRIMalderelliData$Proliferating > 0 ) & !is.na( SCRIMalderelliData$isUpregulatedByTenofovir.exvivo ) & ( SCRIMalderelliData$isUpregulatedByTenofovir.exvivo == 0 ) );

SCRIMalderelliData.num.uniqueIS.nonproliferating.isUpregulatedByTenofovir.exvivo <- 
    sum( ( SCRIMalderelliData$Proliferating == 0 ) & !is.na( SCRIMalderelliData$isUpregulatedByTenofovir.exvivo ) & ( SCRIMalderelliData$isUpregulatedByTenofovir.exvivo > 0 ) );
SCRIMalderelliData.num.uniqueIS.nonproliferating.NOTisUpregulatedByTenofovir.exvivo <- 
    sum( ( SCRIMalderelliData$Proliferating == 0 ) & !is.na( SCRIMalderelliData$isUpregulatedByTenofovir.exvivo ) & ( SCRIMalderelliData$isUpregulatedByTenofovir.exvivo == 0 ) );

SCRIMalderelliData.uniqueIS.isUpregulatedByTenofovir.exvivo.Wang.fisher.table <- cbind(
    c( SCRIMalderelliData.num.uniqueIS.isUpregulatedByTenofovir.exvivo, SCRIMalderelliData.num.uniqueIS.NOTisUpregulatedByTenofovir.exvivo ),
    c( WangData.num.uniqueIS.isUpregulatedByTenofovir.exvivo, WangData.num.uniqueIS.NOTisUpregulatedByTenofovir.exvivo ) );
colnames( SCRIMalderelliData.uniqueIS.isUpregulatedByTenofovir.exvivo.Wang.fisher.table ) <- c( "SCRIMalderelli", "Wang" );
rownames( SCRIMalderelliData.uniqueIS.isUpregulatedByTenofovir.exvivo.Wang.fisher.table ) <- c( "isUpregulatedByTenofovir.exvivo", "NOTisUpregulatedByTenofovir.exvivo" );
SCRIMalderelliData.uniqueIS.isUpregulatedByTenofovir.exvivo.Wang.fisher.test.results <- fisher.test( SCRIMalderelliData.uniqueIS.isUpregulatedByTenofovir.exvivo.Wang.fisher.table );
SCRIMalderelliData.uniqueIS.isUpregulatedByTenofovir.exvivo.Wang.fisher.test.results.p.value <- prettyPrintPValuesTo4Digits( SCRIMalderelliData.uniqueIS.isUpregulatedByTenofovir.exvivo.Wang.fisher.test.results$p.value, " = ", " < " );

SCRIMalderelliData.uniqueIS.proliferating.isUpregulatedByTenofovir.exvivo.Wang.fisher.table <- cbind(
    c( SCRIMalderelliData.num.uniqueIS.proliferating.isUpregulatedByTenofovir.exvivo, SCRIMalderelliData.num.uniqueIS.proliferating.NOTisUpregulatedByTenofovir.exvivo ),
    c( WangData.num.uniqueIS.isUpregulatedByTenofovir.exvivo, WangData.num.uniqueIS.NOTisUpregulatedByTenofovir.exvivo ) );
colnames( SCRIMalderelliData.uniqueIS.proliferating.isUpregulatedByTenofovir.exvivo.Wang.fisher.table ) <- c( "SCRIMalderelli", "Wang" );
rownames( SCRIMalderelliData.uniqueIS.proliferating.isUpregulatedByTenofovir.exvivo.Wang.fisher.table ) <- c( "isUpregulatedByTenofovir.exvivo", "NOTisUpregulatedByTenofovir.exvivo" );
SCRIMalderelliData.uniqueIS.proliferating.isUpregulatedByTenofovir.exvivo.Wang.fisher.test.results <- fisher.test( SCRIMalderelliData.uniqueIS.proliferating.isUpregulatedByTenofovir.exvivo.Wang.fisher.table );
SCRIMalderelliData.uniqueIS.proliferating.isUpregulatedByTenofovir.exvivo.Wang.fisher.test.results.p.value <- prettyPrintPValuesTo4Digits( SCRIMalderelliData.uniqueIS.proliferating.isUpregulatedByTenofovir.exvivo.Wang.fisher.test.results$p.value, " = ", " < " );

SCRIMalderelliData.uniqueIS.nonproliferating.isUpregulatedByTenofovir.exvivo.Wang.fisher.table <- cbind(
    c( SCRIMalderelliData.num.uniqueIS.nonproliferating.isUpregulatedByTenofovir.exvivo, SCRIMalderelliData.num.uniqueIS.nonproliferating.NOTisUpregulatedByTenofovir.exvivo ),
    c( WangData.num.uniqueIS.isUpregulatedByTenofovir.exvivo, WangData.num.uniqueIS.NOTisUpregulatedByTenofovir.exvivo ) );
colnames( SCRIMalderelliData.uniqueIS.nonproliferating.isUpregulatedByTenofovir.exvivo.Wang.fisher.table ) <- c( "SCRIMalderelli", "Wang" );
rownames( SCRIMalderelliData.uniqueIS.nonproliferating.isUpregulatedByTenofovir.exvivo.Wang.fisher.table ) <- c( "isUpregulatedByTenofovir.exvivo", "NOTisUpregulatedByTenofovir.exvivo" );
SCRIMalderelliData.uniqueIS.nonproliferating.isUpregulatedByTenofovir.exvivo.Wang.fisher.test.results <- fisher.test( SCRIMalderelliData.uniqueIS.nonproliferating.isUpregulatedByTenofovir.exvivo.Wang.fisher.table );
SCRIMalderelliData.uniqueIS.nonproliferating.isUpregulatedByTenofovir.exvivo.Wang.fisher.test.results.p.value <- prettyPrintPValuesTo4Digits( SCRIMalderelliData.uniqueIS.nonproliferating.isUpregulatedByTenofovir.exvivo.Wang.fisher.test.results$p.value, " = ", " < " );
@ 

Table~\ref{tab:SCRIMalderelliData.uniqueIS.isUpregulatedByTenofovir.exvivo.Wang.fisher} shows the comparison of isUpregulatedByTenofovir.exvivo between SCRIMalderelli (uniqueISs) and Wang that conditions on both margins (Fisher's exact test p\Sexpr{SCRIMalderelliData.uniqueIS.isUpregulatedByTenofovir.exvivo.Wang.fisher.test.results.p.value}).

\begin{minipage}{\linewidth}
\centering
\par
\bigskip
\captionof{table}{\bf isUpregulatedByTenofovir.exvivo: SCRIMalderelli uniqueISs vs Wang} \label{tab:SCRIMalderelliData.uniqueIS.isUpregulatedByTenofovir.exvivo.Wang.fisher}
<<echo = FALSE, results = tex>>=
print( xtable( SCRIMalderelliData.uniqueIS.isUpregulatedByTenofovir.exvivo.Wang.fisher.table, digits=2 ), floating = FALSE );
@ 
\par
\bigskip
isUpregulatedByTenofovir.exvivo: SCRIMalderelli uniqueISs vs Wang (Fisher's exact test p\Sexpr{SCRIMalderelliData.uniqueIS.isUpregulatedByTenofovir.exvivo.Wang.fisher.test.results.p.value})
\par
\bigskip
\end{minipage}


Table~\ref{tab:SCRIMalderelliData.uniqueIS.p.values.by.feature.adjusted.secondaryFeatures.Tenofovir} shows the Holm-adjusted p-values of the uniqueIS test evaluating the secondary Tenofovir features in the SCRIMalderelli data set.

\begin{minipage}{\linewidth}
\centering
\par
\bigskip
\captionof{table}{\bf SCRIMalderelli uniqueISs vs Wang: Holm-adjusted p-values of secondary Tenofovir features} \label{tab:SCRIMalderelliData.uniqueIS.p.values.by.feature.adjusted.secondaryFeatures.Tenofovir}
<<echo = FALSE, results = tex>>=
.tab <- as.matrix( SCRIMalderelliData.p.values.by.feature.adjusted[ secondaryFeatures.Tenofovir ] );
colnames( .tab ) <- "Holm-adjusted p-value";
print( xtable( .tab, digits=4 ), floating = FALSE );
@ 
\par
\bigskip
SCRIMalderelli uniqueISs vs Wang: Holm-adjusted p-values of secondary Tenofovir features.
\par
\bigskip
\end{minipage}

Table~\ref{tab:SCRIMalderelliData.uniqueIS.proliferating.p.values.by.feature.adjusted.primaryFeatures.cancer} shows the Holm-adjusted p-values of the proliferating uniqueIS test evaluating the primary Cancer features in the SCRIMalderelli data set.

\begin{minipage}{\linewidth}
\centering
\par
\bigskip
\captionof{table}{\bf SCRIMalderelli proliferating uniqueISs vs Wang: Holm-adjusted p-values of primary Cancer features} \label{tab:SCRIMalderelliData.uniqueIS.proliferating.p.values.by.feature.adjusted.primaryFeatures.cancer}
<<echo = FALSE, results = tex>>=
.tab <- as.matrix( SCRIMalderelliData.p.values.proliferating.by.feature.adjusted[ primaryFeatures.cancer ] );
colnames( .tab ) <- "Holm-adjusted p-value";
print( xtable( .tab, digits=4 ), floating = FALSE );
@ 
\par
\bigskip
SCRIMalderelli proliferating uniqueISs vs Wang: Holm-adjusted p-values of primary Cancer features.
\par
\bigskip
\end{minipage}
 
%% isCancer   
Figure~\ref{fig:SCRIMalderelliData.uniqueIS.proliferating.p.value.isCancer} shows the significance of the enrichment of the isCancer feature among SCRIMalderelli proliferating uniqueISs, by showing where the count of unique ISs with this feature falls in the null distribution that is obtained by independently drawing the appropriate number of proliferating uniqueISs from the Wang data set. The probability of seeing such an extreme count statistic under the null hypothesis that the isCancer feature has the same abundance among SCRIMalderelli proliferating uniqueISs as among Wang ISs is p\Sexpr{prettyPrintPValuesTo4Digits( SCRIMalderelliData.p.values.proliferating.by.feature[ "isCancer" ], " = ", " < " )}.

\begin{minipage}{\linewidth}
\centering
\par
\bigskip
\captionof{figure}{\bf SCRIMalderelli proliferating uniqueISs vs Wang: isCancer} \label{fig:SCRIMalderelliData.uniqueIS.proliferating.p.value.isCancer}
<<echo = FALSE, results = hide, fig = TRUE>>=
.feature <- "isCancer";
qplot(
    c( SCRIMalderelliData.feature.nulls[[ "totalProliferating" ]][ , .feature ] ),
    geom = "histogram",
    main = "Histogram of null counts", 
    xlab = "Counts of proliferating uniqueISs in genes that are isCancer",  
    fill=I("blue"), 
    col=I("black"),
    alpha=I(.2) ) + aes( y = ..density.. ) + labs( y = "Density" ) + geom_vline( xintercept = SCRIMalderelliData.num.uniqueIS.proliferating.by.feature[ .feature ], color = "red", linetype = "longdash" );
@ 
\par
\bigskip
SCRIMalderelli proliferating uniqueISs vs Wang: isCancer \par
(p\Sexpr{prettyPrintPValuesTo4Digits( SCRIMalderelliData.p.values.proliferating.by.feature[ "isCancer" ], " = ", " < " )})
\par
\bigskip
\end{minipage}

Table~\ref{tab:SCRIMalderelliData.uniqueIS.proliferating.isCancer.Wang.fisher} shows the comparison of isCancer between SCRIMalderelli (proliferating uniqueISs) and Wang that conditions on both margins (Fisher's exact test p\Sexpr{SCRIMalderelliData.uniqueIS.proliferating.isCancer.Wang.fisher.test.results.p.value}).

\begin{minipage}{\linewidth}
\centering
\par
\bigskip
\captionof{table}{\bf isCancer: SCRIMalderelli proliferating uniqueISs vs Wang} \label{tab:SCRIMalderelliData.uniqueIS.proliferating.isCancer.Wang.fisher}
<<echo = FALSE, results = tex>>=
print( xtable( SCRIMalderelliData.uniqueIS.proliferating.isCancer.Wang.fisher.table, digits=2 ), floating = FALSE );
@ 
\par
\bigskip
isCancer: SCRIMalderelli proliferating uniqueISs vs Wang (Fisher's exact test p\Sexpr{SCRIMalderelliData.uniqueIS.proliferating.isCancer.Wang.fisher.test.results.p.value})
\par
\bigskip
\end{minipage}

%% isAnyCancer.GO
Figure~\ref{fig:SCRIMalderelliData.uniqueIS.proliferating.p.value.isAnyCancer.GO} shows the significance of the enrichment of the isAnyCancer.GO feature among SCRIMalderelli proliferating uniqueISs, by showing where the count of unique ISs with this feature falls in the null distribution that is obtained by independently drawing the appropriate number of proliferating uniqueISs from the Wang data set. The probability of seeing such an extreme count statistic under the null hypothesis that the isAnyCancer.GO feature has the same abundance among SCRIMalderelli proliferating uniqueISs as among Wang ISs is p\Sexpr{prettyPrintPValuesTo4Digits( SCRIMalderelliData.p.values.proliferating.by.feature[ "isAnyCancer.GO" ], " = ", " < " )}.

\begin{minipage}{\linewidth}
\centering
\par
\bigskip
\captionof{figure}{\bf SCRIMalderelli proliferating uniqueISs vs Wang: isAnyCancer.GO} \label{fig:SCRIMalderelliData.uniqueIS.proliferating.p.value.isAnyCancer.GO}
<<echo = FALSE, results = hide, fig = TRUE>>=
.feature <- "isAnyCancer.GO";
qplot(
    c( SCRIMalderelliData.feature.nulls[[ "totalProliferating" ]][ , .feature ] ),
    geom = "histogram",
    main = "Histogram of null counts", 
    xlab = "Counts of proliferating uniqueISs in genes that are isAnyCancer.GO",  
    fill=I("blue"), 
    col=I("black"),
    alpha=I(.2) ) + aes( y = ..density.. ) + labs( y = "Density" ) + geom_vline( xintercept = SCRIMalderelliData.num.uniqueIS.proliferating.by.feature[ .feature ], color = "red", linetype = "longdash" );
@ 
\par
\bigskip
SCRIMalderelli proliferating uniqueISs vs Wang: isAnyCancer.GO \par
(p\Sexpr{prettyPrintPValuesTo4Digits( SCRIMalderelliData.p.values.proliferating.by.feature[ "isAnyCancer.GO" ], " = ", " < " )})
\par
\bigskip
\end{minipage}

Table~\ref{tab:SCRIMalderelliData.uniqueIS.proliferating.isAnyCancer.GO.Wang.fisher} shows the comparison of isAnyCancer.GO between SCRIMalderelli (proliferating uniqueISs) and Wang that conditions on both margins (Fisher's exact test p\Sexpr{SCRIMalderelliData.uniqueIS.proliferating.isAnyCancer.GO.Wang.fisher.test.results.p.value}).

\begin{minipage}{\linewidth}
\centering
\par
\bigskip
\captionof{table}{\bf isAnyCancer.GO: SCRIMalderelli proliferating uniqueISs vs Wang} \label{tab:SCRIMalderelliData.uniqueIS.proliferating.isAnyCancer.GO.Wang.fisher}
<<echo = FALSE, results = tex>>=
print( xtable( SCRIMalderelliData.uniqueIS.proliferating.isAnyCancer.GO.Wang.fisher.table, digits=2 ), floating = FALSE );
@ 
\par
\bigskip
isAnyCancer.GO: SCRIMalderelli proliferating uniqueISs vs Wang (Fisher's exact test p\Sexpr{SCRIMalderelliData.uniqueIS.proliferating.isAnyCancer.GO.Wang.fisher.test.results.p.value})
\par
\bigskip
\end{minipage}


Table~\ref{tab:SCRIMalderelliData.uniqueIS.proliferating.p.values.by.feature.adjusted.primaryFeatures.Tenofovir} shows the Holm-adjusted p-values of the proliferating uniqueIS test evaluating the primary Tenofovir features in the SCRIMalderelli data set.

\begin{minipage}{\linewidth}
\centering
\par
\bigskip
\captionof{table}{\bf SCRIMalderelli proliferating uniqueISs vs Wang: Holm-adjusted p-values of primary Tenofovir features} \label{tab:SCRIMalderelliData.uniqueIS.proliferating.p.values.by.feature.adjusted.primaryFeatures.Tenofovir}
<<echo = FALSE, results = tex>>=
.tab <- as.matrix( SCRIMalderelliData.p.values.proliferating.by.feature.adjusted[ primaryFeatures.Tenofovir ] );
colnames( .tab ) <- "Holm-adjusted p-value";
print( xtable( .tab, digits=4 ), floating = FALSE );
@ 
\par
\bigskip
SCRIMalderelli proliferating uniqueISs vs Wang: Holm-adjusted p-values of primary Tenofovir features.
\par
\bigskip
\end{minipage}

%% isDownregulatedByTenofovir.Rectal
Figure~\ref{fig:SCRIMalderelliData.uniqueIS.proliferating.p.value.isDownregulatedByTenofovir.Rectal} shows the significance of the enrichment of the isDownregulatedByTenofovir.Rectal feature among SCRIMalderelli proliferating uniqueISs, by showing where the count of unique ISs with this feature falls in the null distribution that is obtained by independently drawing the appropriate number of proliferating uniqueISs from the Wang data set. The probability of seeing such an extreme count statistic under the null hypothesis that the isDownregulatedByTenofovir.Rectal feature has the same abundance among SCRIMalderelli proliferating uniqueISs as among Wang ISs is p\Sexpr{prettyPrintPValuesTo4Digits( SCRIMalderelliData.p.values.proliferating.by.feature[ "isDownregulatedByTenofovir.Rectal" ], " = ", " < " )}.

\begin{minipage}{\linewidth}
\centering
\par
\bigskip
\captionof{figure}{\bf SCRIMalderelli proliferating uniqueISs vs Wang: isDownregulatedByTenofovir.Rectal} \label{fig:SCRIMalderelliData.uniqueIS.proliferating.p.value.isDownregulatedByTenofovir.Rectal}
<<echo = FALSE, results = hide, fig = TRUE>>=
.feature <- "isDownregulatedByTenofovir.Rectal";
qplot(
    c( SCRIMalderelliData.feature.nulls[[ "totalProliferating" ]][ , .feature ] ),
    geom = "histogram",
    main = "Histogram of null counts", 
    xlab = "Counts of proliferating uniqueISs in genes that are isDownregulatedByTenofovir.Rectal",  
    fill=I("blue"), 
    col=I("black"),
    alpha=I(.2) ) + aes( y = ..density.. ) + labs( y = "Density" ) + geom_vline( xintercept = SCRIMalderelliData.num.uniqueIS.proliferating.by.feature[ .feature ], color = "red", linetype = "longdash" );
@ 
\par
\bigskip
SCRIMalderelli proliferating uniqueISs vs Wang: isDownregulatedByTenofovir.Rectal \par
(p\Sexpr{prettyPrintPValuesTo4Digits( SCRIMalderelliData.p.values.proliferating.by.feature[ "isDownregulatedByTenofovir.Rectal" ], " = ", " < " )})
\par
\bigskip
\end{minipage}

Table~\ref{tab:SCRIMalderelliData.uniqueIS.proliferating.isDownregulatedByTenofovir.Rectal.Wang.fisher} shows the comparison of isDownregulatedByTenofovir.Rectal between SCRIMalderelli (proliferating uniqueISs) and Wang that conditions on both margins (Fisher's exact test p\Sexpr{SCRIMalderelliData.uniqueIS.proliferating.isDownregulatedByTenofovir.Rectal.Wang.fisher.test.results.p.value}).

\begin{minipage}{\linewidth}
\centering
\par
\bigskip
\captionof{table}{\bf isDownregulatedByTenofovir.Rectal: SCRIMalderelli proliferating uniqueISs vs Wang} \label{tab:SCRIMalderelliData.uniqueIS.proliferating.isDownregulatedByTenofovir.Rectal.Wang.fisher}
<<echo = FALSE, results = tex>>=
print( xtable( SCRIMalderelliData.uniqueIS.proliferating.isDownregulatedByTenofovir.Rectal.Wang.fisher.table, digits=2 ), floating = FALSE );
@ 
\par
\bigskip
isDownregulatedByTenofovir.Rectal: SCRIMalderelli proliferating uniqueISs vs Wang (Fisher's exact test p\Sexpr{SCRIMalderelliData.uniqueIS.proliferating.isDownregulatedByTenofovir.Rectal.Wang.fisher.test.results.p.value})
\par
\bigskip
\end{minipage}
%% isDownregulatedByTenofovir.Rectal 

%% isUpregulatedByTenofovir.Rectal
Figure~\ref{fig:SCRIMalderelliData.uniqueIS.proliferating.p.value.isUpregulatedByTenofovir.Rectal} shows the significance of the enrichment of the isUpregulatedByTenofovir.Rectal feature among SCRIMalderelli proliferating uniqueISs, by showing where the count of unique ISs with this feature falls in the null distribution that is obtained by independently drawing the appropriate number of proliferating uniqueISs from the Wang data set. The probability of seeing such an extreme count statistic under the null hypothesis that the isUpregulatedByTenofovir.Rectal feature has the same abundance among SCRIMalderelli proliferating uniqueISs as among Wang ISs is p\Sexpr{prettyPrintPValuesTo4Digits( SCRIMalderelliData.p.values.proliferating.by.feature[ "isUpregulatedByTenofovir.Rectal" ], " = ", " < " )}.

\begin{minipage}{\linewidth}
\centering
\par
\bigskip
\captionof{figure}{\bf SCRIMalderelli proliferating uniqueISs vs Wang: isUpregulatedByTenofovir.Rectal} \label{fig:SCRIMalderelliData.uniqueIS.proliferating.p.value.isUpregulatedByTenofovir.Rectal}
<<echo = FALSE, results = hide, fig = TRUE>>=
.feature <- "isUpregulatedByTenofovir.Rectal";
qplot(
    c( SCRIMalderelliData.feature.nulls[[ "totalProliferating" ]][ , .feature ] ),
    geom = "histogram",
    main = "Histogram of null counts", 
    xlab = "Counts of proliferating uniqueISs in genes that are isUpregulatedByTenofovir.Rectal",  
    fill=I("blue"), 
    col=I("black"),
    alpha=I(.2) ) + aes( y = ..density.. ) + labs( y = "Density" ) + geom_vline( xintercept = SCRIMalderelliData.num.uniqueIS.proliferating.by.feature[ .feature ], color = "red", linetype = "longdash" );
@ 
\par
\bigskip
SCRIMalderelli proliferating uniqueISs vs Wang: isUpregulatedByTenofovir.Rectal \par
(p\Sexpr{prettyPrintPValuesTo4Digits( SCRIMalderelliData.p.values.proliferating.by.feature[ "isUpregulatedByTenofovir.Rectal" ], " = ", " < " )})
\par
\bigskip
\end{minipage}

Table~\ref{tab:SCRIMalderelliData.uniqueIS.proliferating.isUpregulatedByTenofovir.Rectal.Wang.fisher} shows the comparison of isUpregulatedByTenofovir.Rectal between SCRIMalderelli (proliferating uniqueISs) and Wang that conditions on both margins (Fisher's exact test p\Sexpr{SCRIMalderelliData.uniqueIS.proliferating.isUpregulatedByTenofovir.Rectal.Wang.fisher.test.results.p.value}).

\begin{minipage}{\linewidth}
\centering
\par
\bigskip
\captionof{table}{\bf isUpregulatedByTenofovir.Rectal: SCRIMalderelli proliferating uniqueISs vs Wang} \label{tab:SCRIMalderelliData.uniqueIS.proliferating.isUpregulatedByTenofovir.Rectal.Wang.fisher}
<<echo = FALSE, results = tex>>=
print( xtable( SCRIMalderelliData.uniqueIS.proliferating.isUpregulatedByTenofovir.Rectal.Wang.fisher.table, digits=2 ), floating = FALSE );
@ 
\par
\bigskip
isUpregulatedByTenofovir.Rectal: SCRIMalderelli proliferating uniqueISs vs Wang (Fisher's exact test p\Sexpr{SCRIMalderelliData.uniqueIS.proliferating.isUpregulatedByTenofovir.Rectal.Wang.fisher.test.results.p.value})
\par
\bigskip
\end{minipage}
%% isUpregulatedByTenofovir.Rectal 


%% isDownregulatedByTenofovir.exvivo
Figure~\ref{fig:SCRIMalderelliData.uniqueIS.proliferating.p.value.isDownregulatedByTenofovir.exvivo} shows the significance of the enrichment of the isDownregulatedByTenofovir.exvivo feature among SCRIMalderelli proliferating uniqueISs, by showing where the count of unique ISs with this feature falls in the null distribution that is obtained by independently drawing the appropriate number of proliferating uniqueISs from the Wang data set. The probability of seeing such an extreme count statistic under the null hypothesis that the isDownregulatedByTenofovir.exvivo feature has the same abundance among SCRIMalderelli proliferating uniqueISs as among Wang ISs is p\Sexpr{prettyPrintPValuesTo4Digits( SCRIMalderelliData.p.values.proliferating.by.feature[ "isDownregulatedByTenofovir.exvivo" ], " = ", " < " )}.

\begin{minipage}{\linewidth}
\centering
\par
\bigskip
\captionof{figure}{\bf SCRIMalderelli proliferating uniqueISs vs Wang: isDownregulatedByTenofovir.exvivo} \label{fig:SCRIMalderelliData.uniqueIS.proliferating.p.value.isDownregulatedByTenofovir.exvivo}
<<echo = FALSE, results = hide, fig = TRUE>>=
.feature <- "isDownregulatedByTenofovir.exvivo";
qplot(
    c( SCRIMalderelliData.feature.nulls[[ "totalProliferating" ]][ , .feature ] ),
    geom = "histogram",
    main = "Histogram of null counts", 
    xlab = "Counts of proliferating uniqueISs in genes that are isDownregulatedByTenofovir.exvivo",  
    fill=I("blue"), 
    col=I("black"),
    alpha=I(.2) ) + aes( y = ..density.. ) + labs( y = "Density" ) + geom_vline( xintercept = SCRIMalderelliData.num.uniqueIS.proliferating.by.feature[ .feature ], color = "red", linetype = "longdash" );
@ 
\par
\bigskip
SCRIMalderelli proliferating uniqueISs vs Wang: isDownregulatedByTenofovir.exvivo \par
(p\Sexpr{prettyPrintPValuesTo4Digits( SCRIMalderelliData.p.values.proliferating.by.feature[ "isDownregulatedByTenofovir.exvivo" ], " = ", " < " )})
\par
\bigskip
\end{minipage}

Table~\ref{tab:SCRIMalderelliData.uniqueIS.proliferating.isDownregulatedByTenofovir.exvivo.Wang.fisher} shows the comparison of isDownregulatedByTenofovir.exvivo between SCRIMalderelli (proliferating uniqueISs) and Wang that conditions on both margins (Fisher's exact test p\Sexpr{SCRIMalderelliData.uniqueIS.proliferating.isDownregulatedByTenofovir.exvivo.Wang.fisher.test.results.p.value}).

\begin{minipage}{\linewidth}
\centering
\par
\bigskip
\captionof{table}{\bf isDownregulatedByTenofovir.exvivo: SCRIMalderelli proliferating uniqueISs vs Wang} \label{tab:SCRIMalderelliData.uniqueIS.proliferating.isDownregulatedByTenofovir.exvivo.Wang.fisher}
<<echo = FALSE, results = tex>>=
print( xtable( SCRIMalderelliData.uniqueIS.proliferating.isDownregulatedByTenofovir.exvivo.Wang.fisher.table, digits=2 ), floating = FALSE );
@ 
\par
\bigskip
isDownregulatedByTenofovir.exvivo: SCRIMalderelli proliferating uniqueISs vs Wang (Fisher's exact test p\Sexpr{SCRIMalderelliData.uniqueIS.proliferating.isDownregulatedByTenofovir.exvivo.Wang.fisher.test.results.p.value})
\par
\bigskip
\end{minipage}
%% isDownregulatedByTenofovir.exvivo 


%% isUpregulatedByTenofovir.exvivo
Figure~\ref{fig:SCRIMalderelliData.uniqueIS.proliferating.p.value.isUpregulatedByTenofovir.exvivo} shows the significance of the enrichment of the isUpregulatedByTenofovir.exvivo feature among SCRIMalderelli proliferating uniqueISs, by showing where the count of unique ISs with this feature falls in the null distribution that is obtained by independently drawing the appropriate number of proliferating uniqueISs from the Wang data set. The probability of seeing such an extreme count statistic under the null hypothesis that the isUpregulatedByTenofovir.exvivo feature has the same abundance among SCRIMalderelli proliferating uniqueISs as among Wang ISs is p\Sexpr{prettyPrintPValuesTo4Digits( SCRIMalderelliData.p.values.proliferating.by.feature[ "isUpregulatedByTenofovir.exvivo" ], " = ", " < " )}.

\begin{minipage}{\linewidth}
\centering
\par
\bigskip
\captionof{figure}{\bf SCRIMalderelli proliferating uniqueISs vs Wang: isUpregulatedByTenofovir.exvivo} \label{fig:SCRIMalderelliData.uniqueIS.proliferating.p.value.isUpregulatedByTenofovir.exvivo}
<<echo = FALSE, results = hide, fig = TRUE>>=
.feature <- "isUpregulatedByTenofovir.exvivo";
qplot(
    c( SCRIMalderelliData.feature.nulls[[ "totalProliferating" ]][ , .feature ] ),
    geom = "histogram",
    main = "Histogram of null counts", 
    xlab = "Counts of proliferating uniqueISs in genes that are isUpregulatedByTenofovir.exvivo",  
    fill=I("blue"), 
    col=I("black"),
    alpha=I(.2) ) + aes( y = ..density.. ) + labs( y = "Density" ) + geom_vline( xintercept = SCRIMalderelliData.num.uniqueIS.proliferating.by.feature[ .feature ], color = "red", linetype = "longdash" );
@ 
\par
\bigskip
SCRIMalderelli proliferating uniqueISs vs Wang: isUpregulatedByTenofovir.exvivo \par
(p\Sexpr{prettyPrintPValuesTo4Digits( SCRIMalderelliData.p.values.proliferating.by.feature[ "isUpregulatedByTenofovir.exvivo" ], " = ", " < " )})
\par
\bigskip
\end{minipage}

Table~\ref{tab:SCRIMalderelliData.uniqueIS.proliferating.isUpregulatedByTenofovir.exvivo.Wang.fisher} shows the comparison of isUpregulatedByTenofovir.exvivo between SCRIMalderelli (proliferating uniqueISs) and Wang that conditions on both margins (Fisher's exact test p\Sexpr{SCRIMalderelliData.uniqueIS.proliferating.isUpregulatedByTenofovir.exvivo.Wang.fisher.test.results.p.value}).

\begin{minipage}{\linewidth}
\centering
\par
\bigskip
\captionof{table}{\bf isUpregulatedByTenofovir.exvivo: SCRIMalderelli proliferating uniqueISs vs Wang} \label{tab:SCRIMalderelliData.uniqueIS.proliferating.isUpregulatedByTenofovir.exvivo.Wang.fisher}
<<echo = FALSE, results = tex>>=
print( xtable( SCRIMalderelliData.uniqueIS.proliferating.isUpregulatedByTenofovir.exvivo.Wang.fisher.table, digits=2 ), floating = FALSE );
@ 
\par
\bigskip
isUpregulatedByTenofovir.exvivo: SCRIMalderelli proliferating uniqueISs vs Wang (Fisher's exact test p\Sexpr{SCRIMalderelliData.uniqueIS.proliferating.isUpregulatedByTenofovir.exvivo.Wang.fisher.test.results.p.value})
\par
\bigskip
\end{minipage}
%% isUpregulatedByTenofovir.exvivo 

Table~\ref{tab:SCRIMalderelliData.uniqueIS.proliferating.p.values.by.feature.adjusted.secondaryFeatures.Tenofovir} shows the Holm-adjusted p-values of the proliferating uniqueIS test evaluating the secondary Tenofovir features in the SCRIMalderelli data set.

\begin{minipage}{\linewidth}
\centering
\par
\bigskip
\captionof{table}{\bf SCRIMalderelli proliferating uniqueISs vs Wang: Holm-adjusted p-values of secondary Tenofovir features} \label{tab:SCRIMalderelliData.uniqueIS.proliferating.p.values.by.feature.adjusted.secondaryFeatures.Tenofovir}
<<echo = FALSE, results = tex>>=
.tab <- as.matrix( SCRIMalderelliData.p.values.proliferating.by.feature.adjusted[ secondaryFeatures.Tenofovir ] );
colnames( .tab ) <- "Holm-adjusted p-value";
print( xtable( .tab, digits=4 ), floating = FALSE );
@ 
\par
\bigskip
SCRIMalderelli proliferating uniqueISs vs Wang: Holm-adjusted p-values of secondary Tenofovir features.
\par
\bigskip
\end{minipage}


Table~\ref{tab:SCRIMalderelliData.uniqueIS.nonproliferating.p.values.by.feature.adjusted.primaryFeatures.cancer} shows the Holm-adjusted p-values of the nonproliferating uniqueIS test evaluating the primary Cancer features in the SCRIMalderelli data set.

\begin{minipage}{\linewidth}
\centering
\par
\bigskip
\captionof{table}{\bf SCRIMalderelli nonproliferating uniqueISs vs Wang: Holm-adjusted p-values of primary Cancer features} \label{tab:SCRIMalderelliData.uniqueIS.nonproliferating.p.values.by.feature.adjusted.primaryFeatures.cancer}
<<echo = FALSE, results = tex>>=
.tab <- as.matrix( SCRIMalderelliData.p.values.nonproliferating.by.feature.adjusted[ primaryFeatures.cancer ] );
colnames( .tab ) <- "Holm-adjusted p-value";
print( xtable( .tab, digits=4 ), floating = FALSE );
@ 
\par
\bigskip
SCRIMalderelli nonproliferating uniqueISs vs Wang: Holm-adjusted p-values of primary Cancer features.
\par
\bigskip
\end{minipage}
 
%% isCancer   
Figure~\ref{fig:SCRIMalderelliData.uniqueIS.nonproliferating.p.value.isCancer} shows the significance of the enrichment of the isCancer feature among SCRIMalderelli nonproliferating uniqueISs, by showing where the count of unique ISs with this feature falls in the null distribution that is obtained by independently drawing the appropriate number of nonproliferating uniqueISs from the Wang data set. The probability of seeing such an extreme count statistic under the null hypothesis that the isCancer feature has the same abundance among SCRIMalderelli nonproliferating uniqueISs as among Wang ISs is p\Sexpr{prettyPrintPValuesTo4Digits( SCRIMalderelliData.p.values.nonproliferating.by.feature[ "isCancer" ], " = ", " < " )}.

\begin{minipage}{\linewidth}
\centering
\par
\bigskip
\captionof{figure}{\bf SCRIMalderelli nonproliferating uniqueISs vs Wang: isCancer} \label{fig:SCRIMalderelliData.uniqueIS.nonproliferating.p.value.isCancer}
<<echo = FALSE, results = hide, fig = TRUE>>=
.feature <- "isCancer";
qplot(
    c( SCRIMalderelliData.feature.nulls[[ "totalNonproliferating" ]][ , .feature ] ),
    geom = "histogram",
    main = "Histogram of null counts", 
    xlab = "Counts of nonproliferating uniqueISs in genes that are isCancer",  
    fill=I("blue"), 
    col=I("black"),
    alpha=I(.2) ) + aes( y = ..density.. ) + labs( y = "Density" ) + geom_vline( xintercept = SCRIMalderelliData.num.uniqueIS.nonproliferating.by.feature[ .feature ], color = "red", linetype = "longdash" );
@ 
\par
\bigskip
SCRIMalderelli nonproliferating uniqueISs vs Wang: isCancer \par
(p\Sexpr{prettyPrintPValuesTo4Digits( SCRIMalderelliData.p.values.nonproliferating.by.feature[ "isCancer" ], " = ", " < " )})
\par
\bigskip
\end{minipage}

Table~\ref{tab:SCRIMalderelliData.uniqueIS.nonproliferating.isCancer.Wang.fisher} shows the comparison of isCancer between SCRIMalderelli (nonproliferating uniqueISs) and Wang that conditions on both margins (Fisher's exact test p\Sexpr{SCRIMalderelliData.uniqueIS.nonproliferating.isCancer.Wang.fisher.test.results.p.value}).

\begin{minipage}{\linewidth}
\centering
\par
\bigskip
\captionof{table}{\bf isCancer: SCRIMalderelli nonproliferating uniqueISs vs Wang} \label{tab:SCRIMalderelliData.uniqueIS.nonproliferating.isCancer.Wang.fisher}
<<echo = FALSE, results = tex>>=
print( xtable( SCRIMalderelliData.uniqueIS.nonproliferating.isCancer.Wang.fisher.table, digits=2 ), floating = FALSE );
@ 
\par
\bigskip
isCancer: SCRIMalderelli nonproliferating uniqueISs vs Wang (Fisher's exact test p\Sexpr{SCRIMalderelliData.uniqueIS.nonproliferating.isCancer.Wang.fisher.test.results.p.value})
\par
\bigskip
\end{minipage}

%% isAnyCancer.GO
Figure~\ref{fig:SCRIMalderelliData.uniqueIS.nonproliferating.p.value.isAnyCancer.GO} shows the significance of the enrichment of the isAnyCancer.GO feature among SCRIMalderelli nonproliferating uniqueISs, by showing where the count of unique ISs with this feature falls in the null distribution that is obtained by independently drawing the appropriate number of nonproliferating uniqueISs from the Wang data set. The probability of seeing such an extreme count statistic under the null hypothesis that the isAnyCancer.GO feature has the same abundance among SCRIMalderelli nonproliferating uniqueISs as among Wang ISs is p\Sexpr{prettyPrintPValuesTo4Digits( SCRIMalderelliData.p.values.nonproliferating.by.feature[ "isAnyCancer.GO" ], " = ", " < " )}.

\begin{minipage}{\linewidth}
\centering
\par
\bigskip
\captionof{figure}{\bf SCRIMalderelli nonproliferating uniqueISs vs Wang: isAnyCancer.GO} \label{fig:SCRIMalderelliData.uniqueIS.nonproliferating.p.value.isAnyCancer.GO}
<<echo = FALSE, results = hide, fig = TRUE>>=
.feature <- "isAnyCancer.GO";
qplot(
    c( SCRIMalderelliData.feature.nulls[[ "totalNonproliferating" ]][ , .feature ] ),
    geom = "histogram",
    main = "Histogram of null counts", 
    xlab = "Counts of nonproliferating uniqueISs in genes that are isAnyCancer.GO",  
    fill=I("blue"), 
    col=I("black"),
    alpha=I(.2) ) + aes( y = ..density.. ) + labs( y = "Density" ) + geom_vline( xintercept = SCRIMalderelliData.num.uniqueIS.nonproliferating.by.feature[ .feature ], color = "red", linetype = "longdash" );
@ 
\par
\bigskip
SCRIMalderelli nonproliferating uniqueISs vs Wang: isAnyCancer.GO \par
(p\Sexpr{prettyPrintPValuesTo4Digits( SCRIMalderelliData.p.values.nonproliferating.by.feature[ "isAnyCancer.GO" ], " = ", " < " )})
\par
\bigskip
\end{minipage}

Table~\ref{tab:SCRIMalderelliData.uniqueIS.nonproliferating.isAnyCancer.GO.Wang.fisher} shows the comparison of isAnyCancer.GO between SCRIMalderelli (nonproliferating uniqueISs) and Wang that conditions on both margins (Fisher's exact test p\Sexpr{SCRIMalderelliData.uniqueIS.nonproliferating.isAnyCancer.GO.Wang.fisher.test.results.p.value}).

\begin{minipage}{\linewidth}
\centering
\par
\bigskip
\captionof{table}{\bf isAnyCancer.GO: SCRIMalderelli nonproliferating uniqueISs vs Wang} \label{tab:SCRIMalderelliData.uniqueIS.nonproliferating.isAnyCancer.GO.Wang.fisher}
<<echo = FALSE, results = tex>>=
print( xtable( SCRIMalderelliData.uniqueIS.nonproliferating.isAnyCancer.GO.Wang.fisher.table, digits=2 ), floating = FALSE );
@ 
\par
\bigskip
isAnyCancer.GO: SCRIMalderelli nonproliferating uniqueISs vs Wang (Fisher's exact test p\Sexpr{SCRIMalderelliData.uniqueIS.nonproliferating.isAnyCancer.GO.Wang.fisher.test.results.p.value})
\par
\bigskip
\end{minipage}


Table~\ref{tab:SCRIMalderelliData.uniqueIS.nonproliferating.p.values.by.feature.adjusted.primaryFeatures.Tenofovir} shows the Holm-adjusted p-values of the nonproliferating uniqueIS test evaluating the primary Tenofovir features in the SCRIMalderelli data set.

\begin{minipage}{\linewidth}
\centering
\par
\bigskip
\captionof{table}{\bf SCRIMalderelli nonproliferating uniqueISs vs Wang: Holm-adjusted p-values of primary Tenofovir features} \label{tab:SCRIMalderelliData.uniqueIS.nonproliferating.p.values.by.feature.adjusted.primaryFeatures.Tenofovir}
<<echo = FALSE, results = tex>>=
.tab <- as.matrix( SCRIMalderelliData.p.values.nonproliferating.by.feature.adjusted[ primaryFeatures.Tenofovir ] );
colnames( .tab ) <- "Holm-adjusted p-value";
print( xtable( .tab, digits=4 ), floating = FALSE );
@ 
\par
\bigskip
SCRIMalderelli nonproliferating uniqueISs vs Wang: Holm-adjusted p-values of primary Tenofovir features.
\par
\bigskip
\end{minipage}

%% isDownregulatedByTenofovir.Rectal
Figure~\ref{fig:SCRIMalderelliData.uniqueIS.nonproliferating.p.value.isDownregulatedByTenofovir.Rectal} shows the significance of the enrichment of the isDownregulatedByTenofovir.Rectal feature among SCRIMalderelli nonproliferating uniqueISs, by showing where the count of unique ISs with this feature falls in the null distribution that is obtained by independently drawing the appropriate number of nonproliferating uniqueISs from the Wang data set. The probability of seeing such an extreme count statistic under the null hypothesis that the isDownregulatedByTenofovir.Rectal feature has the same abundance among SCRIMalderelli nonproliferating uniqueISs as among Wang ISs is p\Sexpr{prettyPrintPValuesTo4Digits( SCRIMalderelliData.p.values.nonproliferating.by.feature[ "isDownregulatedByTenofovir.Rectal" ], " = ", " < " )}.

\begin{minipage}{\linewidth}
\centering
\par
\bigskip
\captionof{figure}{\bf SCRIMalderelli nonproliferating uniqueISs vs Wang: isDownregulatedByTenofovir.Rectal} \label{fig:SCRIMalderelliData.uniqueIS.nonproliferating.p.value.isDownregulatedByTenofovir.Rectal}
<<echo = FALSE, results = hide, fig = TRUE>>=
.feature <- "isDownregulatedByTenofovir.Rectal";
qplot(
    c( SCRIMalderelliData.feature.nulls[[ "totalNonproliferating" ]][ , .feature ] ),
    geom = "histogram",
    main = "Histogram of null counts", 
    xlab = "Counts of nonproliferating uniqueISs in genes that are isDownregulatedByTenofovir.Rectal",  
    fill=I("blue"), 
    col=I("black"),
    alpha=I(.2) ) + aes( y = ..density.. ) + labs( y = "Density" ) + geom_vline( xintercept = SCRIMalderelliData.num.uniqueIS.nonproliferating.by.feature[ .feature ], color = "red", linetype = "longdash" );
@ 
\par
\bigskip
SCRIMalderelli nonproliferating uniqueISs vs Wang: isDownregulatedByTenofovir.Rectal \par
(p\Sexpr{prettyPrintPValuesTo4Digits( SCRIMalderelliData.p.values.nonproliferating.by.feature[ "isDownregulatedByTenofovir.Rectal" ], " = ", " < " )})
\par
\bigskip
\end{minipage}

Table~\ref{tab:SCRIMalderelliData.uniqueIS.nonproliferating.isDownregulatedByTenofovir.Rectal.Wang.fisher} shows the comparison of isDownregulatedByTenofovir.Rectal between SCRIMalderelli (nonproliferating uniqueISs) and Wang that conditions on both margins (Fisher's exact test p\Sexpr{SCRIMalderelliData.uniqueIS.nonproliferating.isDownregulatedByTenofovir.Rectal.Wang.fisher.test.results.p.value}).

\begin{minipage}{\linewidth}
\centering
\par
\bigskip
\captionof{table}{\bf isDownregulatedByTenofovir.Rectal: SCRIMalderelli nonproliferating uniqueISs vs Wang} \label{tab:SCRIMalderelliData.uniqueIS.nonproliferating.isDownregulatedByTenofovir.Rectal.Wang.fisher}
<<echo = FALSE, results = tex>>=
print( xtable( SCRIMalderelliData.uniqueIS.nonproliferating.isDownregulatedByTenofovir.Rectal.Wang.fisher.table, digits=2 ), floating = FALSE );
@ 
\par
\bigskip
isDownregulatedByTenofovir.Rectal: SCRIMalderelli nonproliferating uniqueISs vs Wang (Fisher's exact test p\Sexpr{SCRIMalderelliData.uniqueIS.nonproliferating.isDownregulatedByTenofovir.Rectal.Wang.fisher.test.results.p.value})
\par
\bigskip
\end{minipage}
%% isDownregulatedByTenofovir.Rectal 

%% isUpregulatedByTenofovir.Rectal
Figure~\ref{fig:SCRIMalderelliData.uniqueIS.nonproliferating.p.value.isUpregulatedByTenofovir.Rectal} shows the significance of the enrichment of the isUpregulatedByTenofovir.Rectal feature among SCRIMalderelli nonproliferating uniqueISs, by showing where the count of unique ISs with this feature falls in the null distribution that is obtained by independently drawing the appropriate number of nonproliferating uniqueISs from the Wang data set. The probability of seeing such an extreme count statistic under the null hypothesis that the isUpregulatedByTenofovir.Rectal feature has the same abundance among SCRIMalderelli nonproliferating uniqueISs as among Wang ISs is p\Sexpr{prettyPrintPValuesTo4Digits( SCRIMalderelliData.p.values.nonproliferating.by.feature[ "isUpregulatedByTenofovir.Rectal" ], " = ", " < " )}.

\begin{minipage}{\linewidth}
\centering
\par
\bigskip
\captionof{figure}{\bf SCRIMalderelli nonproliferating uniqueISs vs Wang: isUpregulatedByTenofovir.Rectal} \label{fig:SCRIMalderelliData.uniqueIS.nonproliferating.p.value.isUpregulatedByTenofovir.Rectal}
<<echo = FALSE, results = hide, fig = TRUE>>=
.feature <- "isUpregulatedByTenofovir.Rectal";
qplot(
    c( SCRIMalderelliData.feature.nulls[[ "totalNonproliferating" ]][ , .feature ] ),
    geom = "histogram",
    main = "Histogram of null counts", 
    xlab = "Counts of nonproliferating uniqueISs in genes that are isUpregulatedByTenofovir.Rectal",  
    fill=I("blue"), 
    col=I("black"),
    alpha=I(.2) ) + aes( y = ..density.. ) + labs( y = "Density" ) + geom_vline( xintercept = SCRIMalderelliData.num.uniqueIS.nonproliferating.by.feature[ .feature ], color = "red", linetype = "longdash" );
@ 
\par
\bigskip
SCRIMalderelli nonproliferating uniqueISs vs Wang: isUpregulatedByTenofovir.Rectal \par
(p\Sexpr{prettyPrintPValuesTo4Digits( SCRIMalderelliData.p.values.nonproliferating.by.feature[ "isUpregulatedByTenofovir.Rectal" ], " = ", " < " )})
\par
\bigskip
\end{minipage}

Table~\ref{tab:SCRIMalderelliData.uniqueIS.nonproliferating.isUpregulatedByTenofovir.Rectal.Wang.fisher} shows the comparison of isUpregulatedByTenofovir.Rectal between SCRIMalderelli (nonproliferating uniqueISs) and Wang that conditions on both margins (Fisher's exact test p\Sexpr{SCRIMalderelliData.uniqueIS.nonproliferating.isUpregulatedByTenofovir.Rectal.Wang.fisher.test.results.p.value}).

\begin{minipage}{\linewidth}
\centering
\par
\bigskip
\captionof{table}{\bf isUpregulatedByTenofovir.Rectal: SCRIMalderelli nonproliferating uniqueISs vs Wang} \label{tab:SCRIMalderelliData.uniqueIS.nonproliferating.isUpregulatedByTenofovir.Rectal.Wang.fisher}
<<echo = FALSE, results = tex>>=
print( xtable( SCRIMalderelliData.uniqueIS.nonproliferating.isUpregulatedByTenofovir.Rectal.Wang.fisher.table, digits=2 ), floating = FALSE );
@ 
\par
\bigskip
isUpregulatedByTenofovir.Rectal: SCRIMalderelli nonproliferating uniqueISs vs Wang (Fisher's exact test p\Sexpr{SCRIMalderelliData.uniqueIS.nonproliferating.isUpregulatedByTenofovir.Rectal.Wang.fisher.test.results.p.value})
\par
\bigskip
\end{minipage}
%% isUpregulatedByTenofovir.Rectal 


%% isDownregulatedByTenofovir.exvivo
Figure~\ref{fig:SCRIMalderelliData.uniqueIS.nonproliferating.p.value.isDownregulatedByTenofovir.exvivo} shows the significance of the enrichment of the isDownregulatedByTenofovir.exvivo feature among SCRIMalderelli nonproliferating uniqueISs, by showing where the count of unique ISs with this feature falls in the null distribution that is obtained by independently drawing the appropriate number of nonproliferating uniqueISs from the Wang data set. The probability of seeing such an extreme count statistic under the null hypothesis that the isDownregulatedByTenofovir.exvivo feature has the same abundance among SCRIMalderelli nonproliferating uniqueISs as among Wang ISs is p\Sexpr{prettyPrintPValuesTo4Digits( SCRIMalderelliData.p.values.nonproliferating.by.feature[ "isDownregulatedByTenofovir.exvivo" ], " = ", " < " )}.

\begin{minipage}{\linewidth}
\centering
\par
\bigskip
\captionof{figure}{\bf SCRIMalderelli nonproliferating uniqueISs vs Wang: isDownregulatedByTenofovir.exvivo} \label{fig:SCRIMalderelliData.uniqueIS.nonproliferating.p.value.isDownregulatedByTenofovir.exvivo}
<<echo = FALSE, results = hide, fig = TRUE>>=
.feature <- "isDownregulatedByTenofovir.exvivo";
qplot(
    c( SCRIMalderelliData.feature.nulls[[ "totalNonproliferating" ]][ , .feature ] ),
    geom = "histogram",
    main = "Histogram of null counts", 
    xlab = "Counts of nonproliferating uniqueISs in genes that are isDownregulatedByTenofovir.exvivo",  
    fill=I("blue"), 
    col=I("black"),
    alpha=I(.2) ) + aes( y = ..density.. ) + labs( y = "Density" ) + geom_vline( xintercept = SCRIMalderelliData.num.uniqueIS.nonproliferating.by.feature[ .feature ], color = "red", linetype = "longdash" );
@ 
\par
\bigskip
SCRIMalderelli nonproliferating uniqueISs vs Wang: isDownregulatedByTenofovir.exvivo \par
(p\Sexpr{prettyPrintPValuesTo4Digits( SCRIMalderelliData.p.values.nonproliferating.by.feature[ "isDownregulatedByTenofovir.exvivo" ], " = ", " < " )})
\par
\bigskip
\end{minipage}

Table~\ref{tab:SCRIMalderelliData.uniqueIS.nonproliferating.isDownregulatedByTenofovir.exvivo.Wang.fisher} shows the comparison of isDownregulatedByTenofovir.exvivo between SCRIMalderelli (nonproliferating uniqueISs) and Wang that conditions on both margins (Fisher's exact test p\Sexpr{SCRIMalderelliData.uniqueIS.nonproliferating.isDownregulatedByTenofovir.exvivo.Wang.fisher.test.results.p.value}).

\begin{minipage}{\linewidth}
\centering
\par
\bigskip
\captionof{table}{\bf isDownregulatedByTenofovir.exvivo: SCRIMalderelli nonproliferating uniqueISs vs Wang} \label{tab:SCRIMalderelliData.uniqueIS.nonproliferating.isDownregulatedByTenofovir.exvivo.Wang.fisher}
<<echo = FALSE, results = tex>>=
print( xtable( SCRIMalderelliData.uniqueIS.nonproliferating.isDownregulatedByTenofovir.exvivo.Wang.fisher.table, digits=2 ), floating = FALSE );
@ 
\par
\bigskip
isDownregulatedByTenofovir.exvivo: SCRIMalderelli nonproliferating uniqueISs vs Wang (Fisher's exact test p\Sexpr{SCRIMalderelliData.uniqueIS.nonproliferating.isDownregulatedByTenofovir.exvivo.Wang.fisher.test.results.p.value})
\par
\bigskip
\end{minipage}
%% isDownregulatedByTenofovir.exvivo 


%% isUpregulatedByTenofovir.exvivo
Figure~\ref{fig:SCRIMalderelliData.uniqueIS.nonproliferating.p.value.isUpregulatedByTenofovir.exvivo} shows the significance of the enrichment of the isUpregulatedByTenofovir.exvivo feature among SCRIMalderelli nonproliferating uniqueISs, by showing where the count of unique ISs with this feature falls in the null distribution that is obtained by independently drawing the appropriate number of nonproliferating uniqueISs from the Wang data set. The probability of seeing such an extreme count statistic under the null hypothesis that the isUpregulatedByTenofovir.exvivo feature has the same abundance among SCRIMalderelli nonproliferating uniqueISs as among Wang ISs is p\Sexpr{prettyPrintPValuesTo4Digits( SCRIMalderelliData.p.values.nonproliferating.by.feature[ "isUpregulatedByTenofovir.exvivo" ], " = ", " < " )}.

\begin{minipage}{\linewidth}
\centering
\par
\bigskip
\captionof{figure}{\bf SCRIMalderelli nonproliferating uniqueISs vs Wang: isUpregulatedByTenofovir.exvivo} \label{fig:SCRIMalderelliData.uniqueIS.nonproliferating.p.value.isUpregulatedByTenofovir.exvivo}
<<echo = FALSE, results = hide, fig = TRUE>>=
.feature <- "isUpregulatedByTenofovir.exvivo";
qplot(
    c( SCRIMalderelliData.feature.nulls[[ "totalNonproliferating" ]][ , .feature ] ),
    geom = "histogram",
    main = "Histogram of null counts", 
    xlab = "Counts of nonproliferating uniqueISs in genes that are isUpregulatedByTenofovir.exvivo",  
    fill=I("blue"), 
    col=I("black"),
    alpha=I(.2) ) + aes( y = ..density.. ) + labs( y = "Density" ) + geom_vline( xintercept = SCRIMalderelliData.num.uniqueIS.nonproliferating.by.feature[ .feature ], color = "red", linetype = "longdash" );
@ 
\par
\bigskip
SCRIMalderelli nonproliferating uniqueISs vs Wang: isUpregulatedByTenofovir.exvivo \par
(p\Sexpr{prettyPrintPValuesTo4Digits( SCRIMalderelliData.p.values.nonproliferating.by.feature[ "isUpregulatedByTenofovir.exvivo" ], " = ", " < " )})
\par
\bigskip
\end{minipage}

Table~\ref{tab:SCRIMalderelliData.uniqueIS.nonproliferating.isUpregulatedByTenofovir.exvivo.Wang.fisher} shows the comparison of isUpregulatedByTenofovir.exvivo between SCRIMalderelli (nonproliferating uniqueISs) and Wang that conditions on both margins (Fisher's exact test p\Sexpr{SCRIMalderelliData.uniqueIS.nonproliferating.isUpregulatedByTenofovir.exvivo.Wang.fisher.test.results.p.value}).

\begin{minipage}{\linewidth}
\centering
\par
\bigskip
\captionof{table}{\bf isUpregulatedByTenofovir.exvivo: SCRIMalderelli nonproliferating uniqueISs vs Wang} \label{tab:SCRIMalderelliData.uniqueIS.nonproliferating.isUpregulatedByTenofovir.exvivo.Wang.fisher}
<<echo = FALSE, results = tex>>=
print( xtable( SCRIMalderelliData.uniqueIS.nonproliferating.isUpregulatedByTenofovir.exvivo.Wang.fisher.table, digits=2 ), floating = FALSE );
@ 
\par
\bigskip
isUpregulatedByTenofovir.exvivo: SCRIMalderelli nonproliferating uniqueISs vs Wang (Fisher's exact test p\Sexpr{SCRIMalderelliData.uniqueIS.nonproliferating.isUpregulatedByTenofovir.exvivo.Wang.fisher.test.results.p.value})
\par
\bigskip
\end{minipage}
%% isUpregulatedByTenofovir.exvivo 

Table~\ref{tab:SCRIMalderelliData.uniqueIS.nonproliferating.p.values.by.feature.adjusted.secondaryFeatures.Tenofovir} shows the Holm-adjusted p-values of the nonproliferating uniqueIS test evaluating the secondary Tenofovir features in the SCRIMalderelli data set.

\begin{minipage}{\linewidth}
\centering
\par
\bigskip
\captionof{table}{\bf SCRIMalderelli nonproliferating uniqueISs vs Wang: Holm-adjusted p-values of secondary Tenofovir features} \label{tab:SCRIMalderelliData.uniqueIS.nonproliferating.p.values.by.feature.adjusted.secondaryFeatures.Tenofovir}
<<echo = FALSE, results = tex>>=
.tab <- as.matrix( SCRIMalderelliData.p.values.nonproliferating.by.feature.adjusted[ secondaryFeatures.Tenofovir ] );
colnames( .tab ) <- "Holm-adjusted p-value";
print( xtable( .tab, digits=4 ), floating = FALSE );
@ 
\par
\bigskip
SCRIMalderelli nonproliferating uniqueISs vs Wang: Holm-adjusted p-values of secondary Tenofovir features.
\par
\bigskip
\end{minipage}


<<echo = FALSE, results = hide>>=
## TODO: include these results in a table and graphs

### Cooccurrence
SCRIMalderelliData.num.uniqueIS.meanHitsPerGene.by.subject
#       L1       B1       R1 
# 1.156250 1.022727 1.020270 
SCRIMalderelliData.p.values.cooccurrence.by.subject <- sapply( SCRIMalderelliData.subjectIDs, function( .subject.id ) {
    ( sum( SCRIMalderelliData.cooccurrence.nulls[[ .subject.id ]] >= SCRIMalderelliData.num.uniqueIS.meanHitsPerGene.by.subject[ .subject.id ] ) / num.samples )
} );
SCRIMalderelliData.p.values.cooccurrence <- 
    ( sum( SCRIMalderelliData.cooccurrence.nulls[[ "total" ]] >= SCRIMalderelliData.num.uniqueIS.meanHitsPerGene ) / num.samples );
SCRIMalderelliData.p.values.proliferating.cooccurrence <- 
    ( sum( SCRIMalderelliData.cooccurrence.nulls[[ "totalProliferating" ]] >= SCRIMalderelliData.num.uniqueIS.proliferating.meanHitsPerGene ) / num.samples );
SCRIMalderelliData.p.values.nonproliferating.cooccurrence <- 
    ( sum( SCRIMalderelliData.cooccurrence.nulls[[ "totalNonproliferating" ]] >= SCRIMalderelliData.num.uniqueIS.nonproliferating.meanHitsPerGene ) / num.samples );

## TODO: Replace these results when using larger num.samples.
SCRIMalderelliData.p.values.cooccurrence.by.subject
#     L1    B1    R1 
# 0.000 0.403 0.742  

## TODO: Replace these results when using larger num.samples.
SCRIMalderelliData.p.values.cooccurrence
# [1] 0.005


## TODO: Replace these results when using larger num.samples.
SCRIMalderelliData.p.values.proliferating.cooccurrence
# [1] 0.001

SCRIMalderelliData.p.values.nonproliferating.cooccurrence

## TODO: Replace these results when using larger num.samples.
SCRIMalderelliData.p.values.cooccurrence.twoSubjectGenes <- 
    ( sum( SCRIMalderelliData.cooccurrence.twoSubjectGenes.nulls >= SCRIMalderelliData.num.uniqueIS.twoSubjectGenes ) / num.samples.cooccurrence.twoSubjectGenes );
SCRIMalderelliData.p.values.cooccurrence.twoSubjectGenes
# [1] 0.264

@

\clearpage

\subsection{genesWithAnyISs}

<<echo = FALSE, results = hide>>=
if( exists( "SCRIMalderelli.genesWithAnyISs.SAMPLES.ARE.LOADED.ALREADY" ) && SCRIMalderelli.genesWithAnyISs.SAMPLES.ARE.LOADED.ALREADY ) {
    ## GREAT.
} else {
### genesWithAnyISs analyses.
if( file.exists( SCRIMalderelliData.genesWithAnyISs.the.samples.Rda.filename ) ) {
    load( file = SCRIMalderelliData.genesWithAnyISs.the.samples.Rda.filename );
} else {
    set.seed( the.seed );
    WangData.num.genesWithAnyISs <- length( WangData.num.uniqueIS.by.gene );
    SCRIMalderelliData.genesWithAnyISs.the.samples <- lapply( SCRIMalderelliData.num.genesWithAnyISs.by.subject.and.total.and.totalProliferating, function ( .num.integration.sites ) {
        .rv <- t( rmultinom( num.samples, .num.integration.sites, rep( 1, WangData.num.genesWithAnyISs ) ) )
        colnames( .rv ) <- names( WangData.num.uniqueIS.by.gene );
        return( .rv );
    } );
    names( SCRIMalderelliData.genesWithAnyISs.the.samples ) <- names( SCRIMalderelliData.num.genesWithAnyISs.by.subject.and.total.and.totalProliferating );
    save( SCRIMalderelliData.genesWithAnyISs.the.samples, file = SCRIMalderelliData.genesWithAnyISs.the.samples.Rda.filename );
}

### Analysis based on the samples
if( file.exists( SCRIMalderelliData.genesWithAnyISs.feature.nulls.Rda.filename ) ) {
    load( file = SCRIMalderelliData.genesWithAnyISs.feature.nulls.Rda.filename );
} else {
    SCRIMalderelliData.genesWithAnyISs.feature.nulls <- lapply( SCRIMalderelliData.genesWithAnyISs.the.samples, function ( .the.samples ) {
        sapply( colnames( Wang.feature.by.gene ), function ( .feature ) {
            print( .feature );
            .feature.genes <- names( which( Wang.feature.by.gene[ , .feature ] ) );
            if( length( .feature.genes ) == 0 ) {
                return( rep( 0, nrow( .the.samples ) ) );
            } else {
                return( apply( .the.samples[ , .feature.genes, drop = FALSE ], 1, sum ) );
            }
        } )
    } );
    save( SCRIMalderelliData.genesWithAnyISs.feature.nulls, file = SCRIMalderelliData.genesWithAnyISs.feature.nulls.Rda.filename );
}

SCRIMalderelli.genesWithAnyISs.SAMPLES.ARE.LOADED.ALREADY <- TRUE;
} # End if SCRIMalderelli.genesWithAnyISs.SAMPLES.ARE.LOADED.ALREADY .. else ..@ 
@

<<echo = FALSE>>=
## SCRIMalderelliData.genesWithAnyISs.the.samples no longer used starting here.
if( exists( "SCRIMalderelliData.genesWithAnyISs.the.samples" ) ) {
  rm( "SCRIMalderelliData.genesWithAnyISs.the.samples" );
  gc();
}
@ 

<<echo = FALSE, results = hide>>=
if( exists( "SCRIMalderelli.genesWithAnyISs.P.VALUES.ARE.COMPUTED.ALREADY" ) && SCRIMalderelli.genesWithAnyISs.P.VALUES.ARE.COMPUTED.ALREADY ) {
    ## GREAT.
} else {

## Calculate conservative two-sided p-values for the observed number of genesWithAnyISs with each feature exceeding the observed number.
# first, for each subject separately:
SCRIMalderelliData.genesWithAnyISs.p.values.by.feature.by.subject <-
  t( sapply( SCRIMalderelliData.subjectIDs, function( .subject.id ) {
      sapply( colnames( Wang.feature.by.gene ), function ( .feature ) {
          calculatePValue( SCRIMalderelliData.num.genesWithAnyISs.by.subject.by.feature[ .subject.id, .feature ], SCRIMalderelliData.genesWithAnyISs.feature.nulls[[ .subject.id ]] )
      } )
  } ) );
# Next, for all subjects pooled:
SCRIMalderelliData.genesWithAnyISs.p.values.by.feature <-
  sapply( colnames( Wang.feature.by.gene ), function ( .feature ) {
      calculatePValue( SCRIMalderelliData.num.genesWithAnyISs.by.feature[ .feature ], SCRIMalderelliData.genesWithAnyISs.feature.nulls[[ "total" ]][ , .feature ] )
  } );
# Finally, for all subjects pooled, but just looking at proliferating genesWithAnyISs:
SCRIMalderelliData.genesWithAnyISs.p.values.proliferating.by.feature <-
  sapply( colnames( Wang.feature.by.gene ), function ( .feature ) {
      calculatePValue( SCRIMalderelliData.num.genesWithAnyISs.proliferating.by.feature[ .feature ], SCRIMalderelliData.genesWithAnyISs.feature.nulls[[ "totalProliferating" ]][ , .feature ] )
  } );
# Finally, for all subjects pooled, but just looking at nonproliferating genesWithAnyISs:
SCRIMalderelliData.genesWithAnyISs.p.values.nonproliferating.by.feature <-
  sapply( colnames( Wang.feature.by.gene ), function ( .feature ) {
      calculatePValue( SCRIMalderelliData.num.genesWithAnyISs.nonproliferating.by.feature[ .feature ], SCRIMalderelliData.genesWithAnyISs.feature.nulls[[ "totalNonproliferating" ]][ , .feature ] )
  } );
## Note that we pre-specified that we'd ignore all but the top 20 GO terms, but we lazily did the analysis for all of them.

.isFeatures <- grep( "^is", names( SCRIMalderelliData.genesWithAnyISs.p.values.proliferating.by.feature ), value = T )
primaryFeatures.Tenofovir <- c( "isDownregulatedByTenofovir.exvivo", "isUpregulatedByTenofovir.exvivo", "isDownregulatedByTenofovir.Rectal", "isUpregulatedByTenofovir.Rectal" );
primaryFeatures.GO <- c( "isAnyTop20.GO" );
primaryFeatures.cancer <- c( "isCancer", "isAnyCancer.GO" );
secondaryFeatures.Tenofovir <- setdiff( grep( "Tenofovir", .isFeatures, value = TRUE ), primaryFeatures.Tenofovir );
secondaryFeatures.cancer10 <- setdiff( .isFeatures, c( primaryFeatures.GO, primaryFeatures.cancer, primaryFeatures.Tenofovir, secondaryFeatures.Tenofovir ) );
stopifnot( length( secondaryFeatures.cancer10 ) == 10 );
individualGOFeatures.Hallmark40 <- names( SCRIMalderelliData.genesWithAnyISs.p.values.proliferating.by.feature )[ 1:40 ];
stopifnot( length( individualGOFeatures.Hallmark40 ) == 40 );
individualGOFeatures.top20 <- names( SCRIMalderelliData.genesWithAnyISs.p.values.proliferating.by.feature )[ 53:(53 + 19) ];
stopifnot( length( individualGOFeatures.top20 ) == 20 );

# FWER-correct (using "holm" method) the p-values for the cancer10 and the Hallmark40 and the top20.
SCRIMalderelliData.genesWithAnyISs.p.values.by.feature.by.subject.adjusted <- t( apply( SCRIMalderelliData.genesWithAnyISs.p.values.by.feature.by.subject, 1, function( .p.values.by.feature ) {
    .p.values.by.feature[ primaryFeatures.Tenofovir ] <- p.adjust( .p.values.by.feature[ primaryFeatures.Tenofovir ], method = "holm" );
    .p.values.by.feature[ secondaryFeatures.Tenofovir ] <- p.adjust( .p.values.by.feature[ secondaryFeatures.Tenofovir ], method = "holm" );
    .p.values.by.feature[ secondaryFeatures.cancer10 ] <- p.adjust( .p.values.by.feature[ secondaryFeatures.cancer10 ], method = "holm" );
    .p.values.by.feature[ individualGOFeatures.Hallmark40 ] <- p.adjust( .p.values.by.feature[ individualGOFeatures.Hallmark40 ], method = "holm" );
    .p.values.by.feature[ individualGOFeatures.top20 ] <- p.adjust( .p.values.by.feature[ individualGOFeatures.top20 ], method = "holm" );
    return( .p.values.by.feature );
} ) );
SCRIMalderelliData.genesWithAnyISs.p.values.by.feature.adjusted <- SCRIMalderelliData.genesWithAnyISs.p.values.by.feature;
SCRIMalderelliData.genesWithAnyISs.p.values.by.feature.adjusted[ primaryFeatures.Tenofovir ] <- p.adjust( SCRIMalderelliData.genesWithAnyISs.p.values.by.feature[ primaryFeatures.Tenofovir ], method = "holm" );
SCRIMalderelliData.genesWithAnyISs.p.values.by.feature.adjusted[ secondaryFeatures.Tenofovir ] <- p.adjust( SCRIMalderelliData.genesWithAnyISs.p.values.by.feature[ secondaryFeatures.Tenofovir ], method = "holm" );
SCRIMalderelliData.genesWithAnyISs.p.values.by.feature.adjusted[ secondaryFeatures.cancer10 ] <- p.adjust( SCRIMalderelliData.genesWithAnyISs.p.values.by.feature[ secondaryFeatures.cancer10 ], method = "holm" );
SCRIMalderelliData.genesWithAnyISs.p.values.by.feature.adjusted[ individualGOFeatures.Hallmark40 ] <- p.adjust( SCRIMalderelliData.genesWithAnyISs.p.values.by.feature[ individualGOFeatures.Hallmark40 ], method = "holm" );
SCRIMalderelliData.genesWithAnyISs.p.values.by.feature.adjusted[ individualGOFeatures.top20 ] <- p.adjust( SCRIMalderelliData.genesWithAnyISs.p.values.by.feature[ individualGOFeatures.top20 ], method = "holm" );

## Adjust the proliferating results
SCRIMalderelliData.genesWithAnyISs.p.values.proliferating.by.feature.adjusted <- SCRIMalderelliData.genesWithAnyISs.p.values.proliferating.by.feature;
SCRIMalderelliData.genesWithAnyISs.p.values.proliferating.by.feature.adjusted[ primaryFeatures.Tenofovir ] <- p.adjust( SCRIMalderelliData.genesWithAnyISs.p.values.proliferating.by.feature[ primaryFeatures.Tenofovir ], method = "holm" );
SCRIMalderelliData.genesWithAnyISs.p.values.proliferating.by.feature.adjusted[ secondaryFeatures.Tenofovir ] <- p.adjust( SCRIMalderelliData.genesWithAnyISs.p.values.proliferating.by.feature[ secondaryFeatures.Tenofovir ], method = "holm" );
SCRIMalderelliData.genesWithAnyISs.p.values.proliferating.by.feature.adjusted[ secondaryFeatures.cancer10 ] <- p.adjust( SCRIMalderelliData.genesWithAnyISs.p.values.proliferating.by.feature[ secondaryFeatures.cancer10 ], method = "holm" );
SCRIMalderelliData.genesWithAnyISs.p.values.proliferating.by.feature.adjusted[ individualGOFeatures.Hallmark40 ] <- p.adjust( SCRIMalderelliData.genesWithAnyISs.p.values.proliferating.by.feature[ individualGOFeatures.Hallmark40 ], method = "holm" );
SCRIMalderelliData.genesWithAnyISs.p.values.proliferating.by.feature.adjusted[ individualGOFeatures.top20 ] <- p.adjust( SCRIMalderelliData.genesWithAnyISs.p.values.proliferating.by.feature[ individualGOFeatures.top20 ], method = "holm" );

## Adjust the nonproliferating results
SCRIMalderelliData.genesWithAnyISs.p.values.nonproliferating.by.feature.adjusted <- SCRIMalderelliData.genesWithAnyISs.p.values.nonproliferating.by.feature;
SCRIMalderelliData.genesWithAnyISs.p.values.nonproliferating.by.feature.adjusted[ primaryFeatures.Tenofovir ] <- p.adjust( SCRIMalderelliData.genesWithAnyISs.p.values.nonproliferating.by.feature[ primaryFeatures.Tenofovir ], method = "holm" );
SCRIMalderelliData.genesWithAnyISs.p.values.nonproliferating.by.feature.adjusted[ secondaryFeatures.Tenofovir ] <- p.adjust( SCRIMalderelliData.genesWithAnyISs.p.values.nonproliferating.by.feature[ secondaryFeatures.Tenofovir ], method = "holm" );
SCRIMalderelliData.genesWithAnyISs.p.values.nonproliferating.by.feature.adjusted[ secondaryFeatures.cancer10 ] <- p.adjust( SCRIMalderelliData.genesWithAnyISs.p.values.nonproliferating.by.feature[ secondaryFeatures.cancer10 ], method = "holm" );
SCRIMalderelliData.genesWithAnyISs.p.values.nonproliferating.by.feature.adjusted[ individualGOFeatures.Hallmark40 ] <- p.adjust( SCRIMalderelliData.genesWithAnyISs.p.values.nonproliferating.by.feature[ individualGOFeatures.Hallmark40 ], method = "holm" );
SCRIMalderelliData.genesWithAnyISs.p.values.nonproliferating.by.feature.adjusted[ individualGOFeatures.top20 ] <- p.adjust( SCRIMalderelliData.genesWithAnyISs.p.values.nonproliferating.by.feature[ individualGOFeatures.top20 ], method = "holm" );

SCRIMalderelli.genesWithAnyISs.P.VALUES.ARE.COMPUTED.ALREADY <- TRUE;
} # End if SCRIMalderelli.genesWithAnyISs.P.VALUES.ARE.COMPUTED.ALREADY .. else ..
@ 

Table~\ref{tab:SCRIMalderelliData.genesWithAnyISs.p.values.by.feature.adjusted.primaryFeatures.cancer} shows the Holm-adjusted p-values of the genesWithAnyISs test evaluating the primary Cancer features in the SCRIMalderelli data set.

\begin{minipage}{\linewidth}
\centering
\par
\bigskip
\captionof{table}{\bf SCRIMalderelli genesWithAnyISs vs Wang: Holm-adjusted p-values of primary Cancer features} \label{tab:SCRIMalderelliData.genesWithAnyISs.p.values.by.feature.adjusted.primaryFeatures.cancer}
<<echo = FALSE, results = tex>>=
.tab <- as.matrix( SCRIMalderelliData.genesWithAnyISs.p.values.by.feature.adjusted[ primaryFeatures.cancer ] );
colnames( .tab ) <- "Holm-adjusted p-value";
print( xtable( .tab, digits=4 ), floating = FALSE );
@ 
\par
\bigskip
SCRIMalderelli genesWithAnyISs vs Wang: Holm-adjusted p-values of primary Cancer features.
\par
\bigskip
\end{minipage}
 
 
%% isCancer 
<<echo = FALSE, results = hide>>=
WangData.num.genesWithAnyISs.isCancer <- 
    length( unique( WangData[ WangData$isCancer > 0, "Gene" ] ) );
WangData.num.genesWithAnyISs.NOTisCancer <- 
    length( unique( WangData[ WangData$isCancer == 0, "Gene" ] ) );

SCRIMalderelliData.num.genesWithAnyISs.isCancer <- 
    length( unique( SCRIMalderelliData[ SCRIMalderelliData$isCancer > 0, "Gene" ] ) );
SCRIMalderelliData.num.genesWithAnyISs.NOTisCancer <- 
    length( unique( SCRIMalderelliData[ SCRIMalderelliData$isCancer == 0, "Gene" ] ) );

SCRIMalderelliData.genesWithAnyISs.isCancer.Wang.fisher.table <- cbind(
    c( SCRIMalderelliData.num.genesWithAnyISs.isCancer, SCRIMalderelliData.num.genesWithAnyISs.NOTisCancer ),
    c( WangData.num.genesWithAnyISs.isCancer, WangData.num.genesWithAnyISs.NOTisCancer ) );
colnames( SCRIMalderelliData.genesWithAnyISs.isCancer.Wang.fisher.table ) <- c( "SCRIMalderelli", "Wang" );
rownames( SCRIMalderelliData.genesWithAnyISs.isCancer.Wang.fisher.table ) <- c( "isCancer", "NOTisCancer" );
SCRIMalderelliData.genesWithAnyISs.isCancer.Wang.fisher.test.results <- fisher.test( SCRIMalderelliData.genesWithAnyISs.isCancer.Wang.fisher.table );
SCRIMalderelliData.genesWithAnyISs.isCancer.Wang.fisher.test.results.p.value <- prettyPrintPValuesTo4Digits( SCRIMalderelliData.genesWithAnyISs.isCancer.Wang.fisher.test.results$p.value, " = ", " < " );

SCRIMalderelliData.num.genesWithAnyISs.proliferating.isCancer <- 
  length( unique( SCRIMalderelliData[ ( SCRIMalderelliData$Proliferating > 0 ) & ( SCRIMalderelliData$isCancer > 0 ), "Gene" ] ) );
SCRIMalderelliData.num.genesWithAnyISs.proliferating.NOTisCancer <- 
    length( unique( SCRIMalderelliData[ ( SCRIMalderelliData$Proliferating > 0 ) & ( SCRIMalderelliData$isCancer == 0 ), "Gene" ] ) );

SCRIMalderelliData.num.genesWithAnyISs.nonproliferating.isCancer <- 
    length( unique( SCRIMalderelliData[ ( SCRIMalderelliData$Proliferating == 0 ) & ( SCRIMalderelliData$isCancer > 0 ), "Gene" ] ) );
SCRIMalderelliData.num.genesWithAnyISs.nonproliferating.NOTisCancer <- 
    length( unique( SCRIMalderelliData[ ( SCRIMalderelliData$Proliferating == 0 ) & ( SCRIMalderelliData$isCancer == 0 ), "Gene" ] ) );

SCRIMalderelliData.genesWithAnyISs.proliferating.isCancer.Wang.fisher.table <- cbind(
    c( SCRIMalderelliData.num.genesWithAnyISs.proliferating.isCancer, SCRIMalderelliData.num.genesWithAnyISs.proliferating.NOTisCancer ),
    c( WangData.num.genesWithAnyISs.isCancer, WangData.num.genesWithAnyISs.NOTisCancer ) );
colnames( SCRIMalderelliData.genesWithAnyISs.proliferating.isCancer.Wang.fisher.table ) <- c( "SCRIMalderelli", "Wang" );
rownames( SCRIMalderelliData.genesWithAnyISs.proliferating.isCancer.Wang.fisher.table ) <- c( "isCancer", "NOTisCancer" );
SCRIMalderelliData.genesWithAnyISs.proliferating.isCancer.Wang.fisher.test.results <- fisher.test( SCRIMalderelliData.genesWithAnyISs.proliferating.isCancer.Wang.fisher.table );
SCRIMalderelliData.genesWithAnyISs.proliferating.isCancer.Wang.fisher.test.results.p.value <- prettyPrintPValuesTo4Digits( SCRIMalderelliData.genesWithAnyISs.proliferating.isCancer.Wang.fisher.test.results$p.value, " = ", " < " );

SCRIMalderelliData.genesWithAnyISs.nonproliferating.isCancer.Wang.fisher.table <- cbind(
    c( SCRIMalderelliData.num.genesWithAnyISs.nonproliferating.isCancer, SCRIMalderelliData.num.genesWithAnyISs.nonproliferating.NOTisCancer ),
    c( WangData.num.genesWithAnyISs.isCancer, WangData.num.genesWithAnyISs.NOTisCancer ) );
colnames( SCRIMalderelliData.genesWithAnyISs.nonproliferating.isCancer.Wang.fisher.table ) <- c( "SCRIMalderelli", "Wang" );
rownames( SCRIMalderelliData.genesWithAnyISs.nonproliferating.isCancer.Wang.fisher.table ) <- c( "isCancer", "NOTisCancer" );
SCRIMalderelliData.genesWithAnyISs.nonproliferating.isCancer.Wang.fisher.test.results <- fisher.test( SCRIMalderelliData.genesWithAnyISs.nonproliferating.isCancer.Wang.fisher.table );
SCRIMalderelliData.genesWithAnyISs.nonproliferating.isCancer.Wang.fisher.test.results.p.value <- prettyPrintPValuesTo4Digits( SCRIMalderelliData.genesWithAnyISs.nonproliferating.isCancer.Wang.fisher.test.results$p.value, " = ", " < " );
@ 

Figure~\ref{fig:SCRIMalderelliData.genesWithAnyISs.p.value.isCancer} shows the significance of the enrichment of the isCancer feature among SCRIMalderelli genesWithAnyISs, by showing where the count of genesWithAnyISs with this feature falls in the null distribution that is obtained by independently drawing the appropriate number of genesWithAnyISs from the Wang data set. The probability of seeing such an extreme count statistic under the null hypothesis that the isCancer feature has the same abundance among SCRIMalderelli genesWithAnyISs as among Wang genesWithAnyISs is p\Sexpr{prettyPrintPValuesTo4Digits( SCRIMalderelliData.genesWithAnyISs.p.values.by.feature[ "isCancer" ], " = ", "< " )}.

\begin{minipage}{\linewidth}
\centering
\par
\bigskip
\captionof{figure}{\bf SCRIMalderelli genesWithAnyISs vs Wang: isCancer} \label{fig:SCRIMalderelliData.genesWithAnyISs.p.value.isCancer}
<<echo = FALSE, results = hide, fig = TRUE>>=
.feature <- "isCancer";
qplot(
    c( SCRIMalderelliData.genesWithAnyISs.feature.nulls[[ "total" ]][ , .feature ] ),
    geom = "histogram",
    main = "Histogram of null counts", 
    xlab = "Counts of genesWithAnyISs in genes that are isCancer",  
    fill=I("blue"), 
    col=I("black"),
    alpha=I(.2) ) + aes( y = ..density.. ) + labs( y = "Density" ) + geom_vline( xintercept = SCRIMalderelliData.num.genesWithAnyISs.by.feature[ .feature ], color = "red", linetype = "longdash" );
@ 
\par
\bigskip
SCRIMalderelli genesWithAnyISs vs Wang: isCancer \par
(p\Sexpr{prettyPrintPValuesTo4Digits( SCRIMalderelliData.genesWithAnyISs.p.values.by.feature[ "isCancer" ], " = ", "< " )})
\par
\bigskip
\end{minipage}

Table~\ref{tab:SCRIMalderelliData.genesWithAnyISs.isCancer.Wang.fisher} shows the comparison of isCancer between SCRIMalderelli (genesWithAnyISs) and Wang that conditions on both margins (Fisher's exact test p\Sexpr{SCRIMalderelliData.genesWithAnyISs.isCancer.Wang.fisher.test.results.p.value}).

\begin{minipage}{\linewidth}
\centering
\par
\bigskip
\captionof{table}{\bf isCancer: SCRIMalderelli genesWithAnyISs vs Wang} \label{tab:SCRIMalderelliData.genesWithAnyISs.isCancer.Wang.fisher}
<<echo = FALSE, results = tex>>=
print( xtable( SCRIMalderelliData.genesWithAnyISs.isCancer.Wang.fisher.table, digits=2 ), floating = FALSE );
@ 
\par
\bigskip
isCancer: SCRIMalderelli genesWithAnyISs vs Wang (Fisher's exact test p\Sexpr{SCRIMalderelliData.genesWithAnyISs.isCancer.Wang.fisher.test.results.p.value})
\par
\bigskip
\end{minipage}
%% isCancer 

 
%% isAnyCancer.GO 
<<echo = FALSE, results = hide>>=
WangData.num.genesWithAnyISs.isAnyCancer.GO <- 
    length( unique( WangData[ WangData$isAnyCancer.GO > 0, "Gene" ] ) );
WangData.num.genesWithAnyISs.NOTisAnyCancer.GO <- 
    length( unique( WangData[ WangData$isAnyCancer.GO == 0, "Gene" ] ) );

SCRIMalderelliData.num.genesWithAnyISs.isAnyCancer.GO <- 
    length( unique( SCRIMalderelliData[ SCRIMalderelliData$isAnyCancer.GO > 0, "Gene" ] ) );
SCRIMalderelliData.num.genesWithAnyISs.NOTisAnyCancer.GO <- 
    length( unique( SCRIMalderelliData[ SCRIMalderelliData$isAnyCancer.GO == 0, "Gene" ] ) );

SCRIMalderelliData.genesWithAnyISs.isAnyCancer.GO.Wang.fisher.table <- cbind(
    c( SCRIMalderelliData.num.genesWithAnyISs.isAnyCancer.GO, SCRIMalderelliData.num.genesWithAnyISs.NOTisAnyCancer.GO ),
    c( WangData.num.genesWithAnyISs.isAnyCancer.GO, WangData.num.genesWithAnyISs.NOTisAnyCancer.GO ) );
colnames( SCRIMalderelliData.genesWithAnyISs.isAnyCancer.GO.Wang.fisher.table ) <- c( "SCRIMalderelli", "Wang" );
rownames( SCRIMalderelliData.genesWithAnyISs.isAnyCancer.GO.Wang.fisher.table ) <- c( "isAnyCancer.GO", "NOTisAnyCancer.GO" );
SCRIMalderelliData.genesWithAnyISs.isAnyCancer.GO.Wang.fisher.test.results <- fisher.test( SCRIMalderelliData.genesWithAnyISs.isAnyCancer.GO.Wang.fisher.table );
SCRIMalderelliData.genesWithAnyISs.isAnyCancer.GO.Wang.fisher.test.results.p.value <- prettyPrintPValuesTo4Digits( SCRIMalderelliData.genesWithAnyISs.isAnyCancer.GO.Wang.fisher.test.results$p.value, " = ", " < " );

SCRIMalderelliData.num.genesWithAnyISs.proliferating.isAnyCancer.GO <- 
    length( unique( SCRIMalderelliData[ ( SCRIMalderelliData$Proliferating > 0 ) & ( SCRIMalderelliData$isAnyCancer.GO > 0 ), "Gene" ] ) );
SCRIMalderelliData.num.genesWithAnyISs.proliferating.NOTisAnyCancer.GO <- 
    length( unique( SCRIMalderelliData[ ( SCRIMalderelliData$Proliferating > 0 ) & ( SCRIMalderelliData$isAnyCancer.GO == 0 ), "Gene" ] ) );

SCRIMalderelliData.num.genesWithAnyISs.nonproliferating.isAnyCancer.GO <- 
    length( unique( SCRIMalderelliData[ ( SCRIMalderelliData$Proliferating == 0 ) & ( SCRIMalderelliData$isAnyCancer.GO > 0 ), "Gene" ] ) );
SCRIMalderelliData.num.genesWithAnyISs.nonproliferating.NOTisAnyCancer.GO <- 
    length( unique( SCRIMalderelliData[ ( SCRIMalderelliData$Proliferating == 0 ) & ( SCRIMalderelliData$isAnyCancer.GO == 0 ), "Gene" ] ) );

SCRIMalderelliData.genesWithAnyISs.proliferating.isAnyCancer.GO.Wang.fisher.table <- cbind(
    c( SCRIMalderelliData.num.genesWithAnyISs.proliferating.isAnyCancer.GO, SCRIMalderelliData.num.genesWithAnyISs.proliferating.NOTisAnyCancer.GO ),
    c( WangData.num.genesWithAnyISs.isAnyCancer.GO, WangData.num.genesWithAnyISs.NOTisAnyCancer.GO ) );
colnames( SCRIMalderelliData.genesWithAnyISs.proliferating.isAnyCancer.GO.Wang.fisher.table ) <- c( "SCRIMalderelli", "Wang" );
rownames( SCRIMalderelliData.genesWithAnyISs.proliferating.isAnyCancer.GO.Wang.fisher.table ) <- c( "isAnyCancer.GO", "NOTisAnyCancer.GO" );
SCRIMalderelliData.genesWithAnyISs.proliferating.isAnyCancer.GO.Wang.fisher.test.results <- fisher.test( SCRIMalderelliData.genesWithAnyISs.proliferating.isAnyCancer.GO.Wang.fisher.table );
SCRIMalderelliData.genesWithAnyISs.proliferating.isAnyCancer.GO.Wang.fisher.test.results.p.value <- prettyPrintPValuesTo4Digits( SCRIMalderelliData.genesWithAnyISs.proliferating.isAnyCancer.GO.Wang.fisher.test.results$p.value, " = ", " < " );

SCRIMalderelliData.genesWithAnyISs.nonproliferating.isAnyCancer.GO.Wang.fisher.table <- cbind(
    c( SCRIMalderelliData.num.genesWithAnyISs.nonproliferating.isAnyCancer.GO, SCRIMalderelliData.num.genesWithAnyISs.nonproliferating.NOTisAnyCancer.GO ),
    c( WangData.num.genesWithAnyISs.isAnyCancer.GO, WangData.num.genesWithAnyISs.NOTisAnyCancer.GO ) );
colnames( SCRIMalderelliData.genesWithAnyISs.nonproliferating.isAnyCancer.GO.Wang.fisher.table ) <- c( "SCRIMalderelli", "Wang" );
rownames( SCRIMalderelliData.genesWithAnyISs.nonproliferating.isAnyCancer.GO.Wang.fisher.table ) <- c( "isAnyCancer.GO", "NOTisAnyCancer.GO" );
SCRIMalderelliData.genesWithAnyISs.nonproliferating.isAnyCancer.GO.Wang.fisher.test.results <- fisher.test( SCRIMalderelliData.genesWithAnyISs.nonproliferating.isAnyCancer.GO.Wang.fisher.table );
SCRIMalderelliData.genesWithAnyISs.nonproliferating.isAnyCancer.GO.Wang.fisher.test.results.p.value <- prettyPrintPValuesTo4Digits( SCRIMalderelliData.genesWithAnyISs.nonproliferating.isAnyCancer.GO.Wang.fisher.test.results$p.value, " = ", " < " );
@ 

Figure~\ref{fig:SCRIMalderelliData.genesWithAnyISs.p.value.isAnyCancer.GO} shows the significance of the enrichment of the isAnyCancer.GO feature among SCRIMalderelli genesWithAnyISs, by showing where the count of genesWithAnyISs with this feature falls in the null distribution that is obtained by independently drawing the appropriate number of genesWithAnyISs from the Wang data set. The probability of seeing such an extreme count statistic under the null hypothesis that the isAnyCancer.GO feature has the same abundance among SCRIMalderelli genesWithAnyISs as among Wang genesWithAnyISs is p\Sexpr{prettyPrintPValuesTo4Digits( SCRIMalderelliData.genesWithAnyISs.p.values.by.feature[ "isAnyCancer.GO" ], " = ", "< " )}.

\begin{minipage}{\linewidth}
\centering
\par
\bigskip
\captionof{figure}{\bf SCRIMalderelli genesWithAnyISs vs Wang: isAnyCancer.GO} \label{fig:SCRIMalderelliData.genesWithAnyISs.p.value.isAnyCancer.GO}
<<echo = FALSE, results = hide, fig = TRUE>>=
.feature <- "isAnyCancer.GO";
qplot(
    c( SCRIMalderelliData.genesWithAnyISs.feature.nulls[[ "total" ]][ , .feature ] ),
    geom = "histogram",
    main = "Histogram of null counts", 
    xlab = "Counts of genesWithAnyISs in genes that are isAnyCancer.GO",  
    fill=I("blue"), 
    col=I("black"),
    alpha=I(.2) ) + aes( y = ..density.. ) + labs( y = "Density" ) + geom_vline( xintercept = SCRIMalderelliData.num.genesWithAnyISs.by.feature[ .feature ], color = "red", linetype = "longdash" );
@ 
\par
\bigskip
SCRIMalderelli genesWithAnyISs vs Wang: isAnyCancer.GO \par
(p\Sexpr{prettyPrintPValuesTo4Digits( SCRIMalderelliData.genesWithAnyISs.p.values.by.feature[ "isAnyCancer.GO" ], " = ", "< " )})
\par
\bigskip
\end{minipage}

Table~\ref{tab:SCRIMalderelliData.genesWithAnyISs.isAnyCancer.GO.Wang.fisher} shows the comparison of isAnyCancer.GO between SCRIMalderelli (genesWithAnyISs) and Wang that conditions on both margins (Fisher's exact test p\Sexpr{SCRIMalderelliData.genesWithAnyISs.isAnyCancer.GO.Wang.fisher.test.results.p.value}).

\begin{minipage}{\linewidth}
\centering
\par
\bigskip
\captionof{table}{\bf isAnyCancer.GO: SCRIMalderelli genesWithAnyISs vs Wang} \label{tab:SCRIMalderelliData.genesWithAnyISs.isAnyCancer.GO.Wang.fisher}
<<echo = FALSE, results = tex>>=
print( xtable( SCRIMalderelliData.genesWithAnyISs.isAnyCancer.GO.Wang.fisher.table, digits=2 ), floating = FALSE );
@ 
\par
\bigskip
isAnyCancer.GO: SCRIMalderelli genesWithAnyISs vs Wang (Fisher's exact test p\Sexpr{SCRIMalderelliData.genesWithAnyISs.isAnyCancer.GO.Wang.fisher.test.results.p.value})
\par
\bigskip
\end{minipage}

\begin{minipage}{\linewidth}
\centering
\par
\bigskip
\captionof{table}{\bf SCRIMalderelli genesWithAnyISs vs Wang: Holm-adjusted p-values of primary Tenofovir features} \label{tab:SCRIMalderelliData.genesWithAnyISs.p.values.by.feature.adjusted.primaryFeatures.Tenofovir}
<<echo = FALSE, results = tex>>=
.tab <- as.matrix( SCRIMalderelliData.genesWithAnyISs.p.values.by.feature.adjusted[ primaryFeatures.Tenofovir ] );
colnames( .tab ) <- "Holm-adjusted p-value";
print( xtable( .tab, digits=4 ), floating = FALSE );
@ 
\par
\bigskip
SCRIMalderelli genesWithAnyISs vs Wang: Holm-adjusted p-values of primary Tenofovir features.
\par
\bigskip
\end{minipage}
 
%% isDownregulatedByTenofovir.Rectal 
<<echo = FALSE, results = hide>>=
WangData.num.genesWithAnyISs.isDownregulatedByTenofovir.Rectal <- 
    length( unique( WangData[ WangData$isDownregulatedByTenofovir.Rectal > 0, "Gene" ] ) );
WangData.num.genesWithAnyISs.NOTisDownregulatedByTenofovir.Rectal <- 
    length( unique( WangData[ WangData$isDownregulatedByTenofovir.Rectal == 0, "Gene" ] ) );

SCRIMalderelliData.num.genesWithAnyISs.isDownregulatedByTenofovir.Rectal <- 
    length( unique( SCRIMalderelliData[ SCRIMalderelliData$isDownregulatedByTenofovir.Rectal > 0, "Gene" ] ) );
SCRIMalderelliData.num.genesWithAnyISs.NOTisDownregulatedByTenofovir.Rectal <- 
    length( unique( SCRIMalderelliData[ SCRIMalderelliData$isDownregulatedByTenofovir.Rectal == 0, "Gene" ] ) );

SCRIMalderelliData.genesWithAnyISs.isDownregulatedByTenofovir.Rectal.Wang.fisher.table <- cbind(
    c( SCRIMalderelliData.num.genesWithAnyISs.isDownregulatedByTenofovir.Rectal, SCRIMalderelliData.num.genesWithAnyISs.NOTisDownregulatedByTenofovir.Rectal ),
    c( WangData.num.genesWithAnyISs.isDownregulatedByTenofovir.Rectal, WangData.num.genesWithAnyISs.NOTisDownregulatedByTenofovir.Rectal ) );
colnames( SCRIMalderelliData.genesWithAnyISs.isDownregulatedByTenofovir.Rectal.Wang.fisher.table ) <- c( "SCRIMalderelli", "Wang" );
rownames( SCRIMalderelliData.genesWithAnyISs.isDownregulatedByTenofovir.Rectal.Wang.fisher.table ) <- c( "isDownregulatedByTenofovir.Rectal", "NOTisDownregulatedByTenofovir.Rectal" );
SCRIMalderelliData.genesWithAnyISs.isDownregulatedByTenofovir.Rectal.Wang.fisher.test.results <- fisher.test( SCRIMalderelliData.genesWithAnyISs.isDownregulatedByTenofovir.Rectal.Wang.fisher.table );
SCRIMalderelliData.genesWithAnyISs.isDownregulatedByTenofovir.Rectal.Wang.fisher.test.results.p.value <- prettyPrintPValuesTo4Digits( SCRIMalderelliData.genesWithAnyISs.isDownregulatedByTenofovir.Rectal.Wang.fisher.test.results$p.value, " = ", " < " );

SCRIMalderelliData.num.genesWithAnyISs.proliferating.isDownregulatedByTenofovir.Rectal <- 
    length( unique( SCRIMalderelliData[ ( SCRIMalderelliData$Proliferating > 0 ) & ( SCRIMalderelliData$isDownregulatedByTenofovir.Rectal > 0 ), "Gene" ] ) );
SCRIMalderelliData.num.genesWithAnyISs.proliferating.NOTisDownregulatedByTenofovir.Rectal <- 
    length( unique( SCRIMalderelliData[ ( SCRIMalderelliData$Proliferating > 0 ) & ( SCRIMalderelliData$isDownregulatedByTenofovir.Rectal == 0 ), "Gene" ] ) );

SCRIMalderelliData.num.genesWithAnyISs.nonproliferating.isDownregulatedByTenofovir.Rectal <- 
    length( unique( SCRIMalderelliData[ ( SCRIMalderelliData$Proliferating == 0 ) & ( SCRIMalderelliData$isDownregulatedByTenofovir.Rectal > 0 ), "Gene" ] ) );
SCRIMalderelliData.num.genesWithAnyISs.nonproliferating.NOTisDownregulatedByTenofovir.Rectal <- 
    length( unique( SCRIMalderelliData[ ( SCRIMalderelliData$Proliferating == 0 ) & ( SCRIMalderelliData$isDownregulatedByTenofovir.Rectal == 0 ), "Gene" ] ) );

SCRIMalderelliData.genesWithAnyISs.proliferating.isDownregulatedByTenofovir.Rectal.Wang.fisher.table <- cbind(
    c( SCRIMalderelliData.num.genesWithAnyISs.proliferating.isDownregulatedByTenofovir.Rectal, SCRIMalderelliData.num.genesWithAnyISs.proliferating.NOTisDownregulatedByTenofovir.Rectal ),
    c( WangData.num.genesWithAnyISs.isDownregulatedByTenofovir.Rectal, WangData.num.genesWithAnyISs.NOTisDownregulatedByTenofovir.Rectal ) );
colnames( SCRIMalderelliData.genesWithAnyISs.proliferating.isDownregulatedByTenofovir.Rectal.Wang.fisher.table ) <- c( "SCRIMalderelli", "Wang" );
rownames( SCRIMalderelliData.genesWithAnyISs.proliferating.isDownregulatedByTenofovir.Rectal.Wang.fisher.table ) <- c( "isDownregulatedByTenofovir.Rectal", "NOTisDownregulatedByTenofovir.Rectal" );
SCRIMalderelliData.genesWithAnyISs.proliferating.isDownregulatedByTenofovir.Rectal.Wang.fisher.test.results <- fisher.test( SCRIMalderelliData.genesWithAnyISs.proliferating.isDownregulatedByTenofovir.Rectal.Wang.fisher.table );
SCRIMalderelliData.genesWithAnyISs.proliferating.isDownregulatedByTenofovir.Rectal.Wang.fisher.test.results.p.value <- prettyPrintPValuesTo4Digits( SCRIMalderelliData.genesWithAnyISs.proliferating.isDownregulatedByTenofovir.Rectal.Wang.fisher.test.results$p.value, " = ", " < " );

SCRIMalderelliData.genesWithAnyISs.nonproliferating.isDownregulatedByTenofovir.Rectal.Wang.fisher.table <- cbind(
    c( SCRIMalderelliData.num.genesWithAnyISs.nonproliferating.isDownregulatedByTenofovir.Rectal, SCRIMalderelliData.num.genesWithAnyISs.nonproliferating.NOTisDownregulatedByTenofovir.Rectal ),
    c( WangData.num.genesWithAnyISs.isDownregulatedByTenofovir.Rectal, WangData.num.genesWithAnyISs.NOTisDownregulatedByTenofovir.Rectal ) );
colnames( SCRIMalderelliData.genesWithAnyISs.nonproliferating.isDownregulatedByTenofovir.Rectal.Wang.fisher.table ) <- c( "SCRIMalderelli", "Wang" );
rownames( SCRIMalderelliData.genesWithAnyISs.nonproliferating.isDownregulatedByTenofovir.Rectal.Wang.fisher.table ) <- c( "isDownregulatedByTenofovir.Rectal", "NOTisDownregulatedByTenofovir.Rectal" );
SCRIMalderelliData.genesWithAnyISs.nonproliferating.isDownregulatedByTenofovir.Rectal.Wang.fisher.test.results <- fisher.test( SCRIMalderelliData.genesWithAnyISs.nonproliferating.isDownregulatedByTenofovir.Rectal.Wang.fisher.table );
SCRIMalderelliData.genesWithAnyISs.nonproliferating.isDownregulatedByTenofovir.Rectal.Wang.fisher.test.results.p.value <- prettyPrintPValuesTo4Digits( SCRIMalderelliData.genesWithAnyISs.nonproliferating.isDownregulatedByTenofovir.Rectal.Wang.fisher.test.results$p.value, " = ", " < " );
@ 

Figure~\ref{fig:SCRIMalderelliData.genesWithAnyISs.p.value.isDownregulatedByTenofovir.Rectal} shows the significance of the enrichment of the isDownregulatedByTenofovir.Rectal feature among SCRIMalderelli genesWithAnyISs, by showing where the count of genesWithAnyISs with this feature falls in the null distribution that is obtained by independently drawing the appropriate number of genesWithAnyISs from the Wang data set. The probability of seeing such an extreme count statistic under the null hypothesis that the isDownregulatedByTenofovir.Rectal feature has the same abundance among SCRIMalderelli genesWithAnyISs as among Wang genesWithAnyISs is p\Sexpr{prettyPrintPValuesTo4Digits( SCRIMalderelliData.genesWithAnyISs.p.values.by.feature[ "isDownregulatedByTenofovir.Rectal" ], " = ", "< " )}.

\begin{minipage}{\linewidth}
\centering
\par
\bigskip
\captionof{figure}{\bf SCRIMalderelli genesWithAnyISs vs Wang: isDownregulatedByTenofovir.Rectal} \label{fig:SCRIMalderelliData.genesWithAnyISs.p.value.isDownregulatedByTenofovir.Rectal}
<<echo = FALSE, results = hide, fig = TRUE>>=
.feature <- "isDownregulatedByTenofovir.Rectal";
qplot(
    c( SCRIMalderelliData.genesWithAnyISs.feature.nulls[[ "total" ]][ , .feature ] ),
    geom = "histogram",
    main = "Histogram of null counts", 
    xlab = "Counts of genesWithAnyISs in genes that are isDownregulatedByTenofovir.Rectal",  
    fill=I("blue"), 
    col=I("black"),
    alpha=I(.2) ) + aes( y = ..density.. ) + labs( y = "Density" ) + geom_vline( xintercept = SCRIMalderelliData.num.genesWithAnyISs.by.feature[ .feature ], color = "red", linetype = "longdash" );
@ 
\par
\bigskip
SCRIMalderelli genesWithAnyISs vs Wang: isDownregulatedByTenofovir.Rectal \par
(p\Sexpr{prettyPrintPValuesTo4Digits( SCRIMalderelliData.genesWithAnyISs.p.values.by.feature[ "isDownregulatedByTenofovir.Rectal" ], " = ", "< " )})
\par
\bigskip
\end{minipage}

Table~\ref{tab:SCRIMalderelliData.genesWithAnyISs.isDownregulatedByTenofovir.Rectal.Wang.fisher} shows the comparison of isDownregulatedByTenofovir.Rectal between SCRIMalderelli (genesWithAnyISs) and Wang that conditions on both margins (Fisher's exact test p\Sexpr{SCRIMalderelliData.genesWithAnyISs.isDownregulatedByTenofovir.Rectal.Wang.fisher.test.results.p.value}).

\begin{minipage}{\linewidth}
\centering
\par
\bigskip
\captionof{table}{\bf isDownregulatedByTenofovir.Rectal: SCRIMalderelli genesWithAnyISs vs Wang} \label{tab:SCRIMalderelliData.genesWithAnyISs.isDownregulatedByTenofovir.Rectal.Wang.fisher}
<<echo = FALSE, results = tex>>=
print( xtable( SCRIMalderelliData.genesWithAnyISs.isDownregulatedByTenofovir.Rectal.Wang.fisher.table, digits=2 ), floating = FALSE );
@ 
\par
\bigskip
isDownregulatedByTenofovir.Rectal: SCRIMalderelli genesWithAnyISs vs Wang (Fisher's exact test p\Sexpr{SCRIMalderelliData.genesWithAnyISs.isDownregulatedByTenofovir.Rectal.Wang.fisher.test.results.p.value})
\par
\bigskip
\end{minipage}

%% isUpregulatedByTenofovir.Rectal 
<<echo = FALSE, results = hide>>=
WangData.num.genesWithAnyISs.isUpregulatedByTenofovir.Rectal <- 
    length( unique( WangData[ WangData$isUpregulatedByTenofovir.Rectal > 0, "Gene" ] ) );
WangData.num.genesWithAnyISs.NOTisUpregulatedByTenofovir.Rectal <- 
    length( unique( WangData[ WangData$isUpregulatedByTenofovir.Rectal == 0, "Gene" ] ) );

SCRIMalderelliData.num.genesWithAnyISs.isUpregulatedByTenofovir.Rectal <- 
    length( unique( SCRIMalderelliData[ SCRIMalderelliData$isUpregulatedByTenofovir.Rectal > 0, "Gene" ] ) );
SCRIMalderelliData.num.genesWithAnyISs.NOTisUpregulatedByTenofovir.Rectal <- 
    length( unique( SCRIMalderelliData[ SCRIMalderelliData$isUpregulatedByTenofovir.Rectal == 0, "Gene" ] ) );

SCRIMalderelliData.genesWithAnyISs.isUpregulatedByTenofovir.Rectal.Wang.fisher.table <- cbind(
    c( SCRIMalderelliData.num.genesWithAnyISs.isUpregulatedByTenofovir.Rectal, SCRIMalderelliData.num.genesWithAnyISs.NOTisUpregulatedByTenofovir.Rectal ),
    c( WangData.num.genesWithAnyISs.isUpregulatedByTenofovir.Rectal, WangData.num.genesWithAnyISs.NOTisUpregulatedByTenofovir.Rectal ) );
colnames( SCRIMalderelliData.genesWithAnyISs.isUpregulatedByTenofovir.Rectal.Wang.fisher.table ) <- c( "SCRIMalderelli", "Wang" );
rownames( SCRIMalderelliData.genesWithAnyISs.isUpregulatedByTenofovir.Rectal.Wang.fisher.table ) <- c( "isUpregulatedByTenofovir.Rectal", "NOTisUpregulatedByTenofovir.Rectal" );
SCRIMalderelliData.genesWithAnyISs.isUpregulatedByTenofovir.Rectal.Wang.fisher.test.results <- fisher.test( SCRIMalderelliData.genesWithAnyISs.isUpregulatedByTenofovir.Rectal.Wang.fisher.table );
SCRIMalderelliData.genesWithAnyISs.isUpregulatedByTenofovir.Rectal.Wang.fisher.test.results.p.value <- prettyPrintPValuesTo4Digits( SCRIMalderelliData.genesWithAnyISs.isUpregulatedByTenofovir.Rectal.Wang.fisher.test.results$p.value, " = ", " < " );

SCRIMalderelliData.num.genesWithAnyISs.proliferating.isUpregulatedByTenofovir.Rectal <- 
    length( unique( SCRIMalderelliData[ ( SCRIMalderelliData$Proliferating > 0 ) & ( SCRIMalderelliData$isUpregulatedByTenofovir.Rectal > 0 ), "Gene" ] ) );
SCRIMalderelliData.num.genesWithAnyISs.proliferating.NOTisUpregulatedByTenofovir.Rectal <- 
    length( unique( SCRIMalderelliData[ ( SCRIMalderelliData$Proliferating > 0 ) & ( SCRIMalderelliData$isUpregulatedByTenofovir.Rectal == 0 ), "Gene" ] ) );

SCRIMalderelliData.num.genesWithAnyISs.nonproliferating.isUpregulatedByTenofovir.Rectal <- 
    length( unique( SCRIMalderelliData[ ( SCRIMalderelliData$Proliferating == 0 ) & ( SCRIMalderelliData$isUpregulatedByTenofovir.Rectal > 0 ), "Gene" ] ) );
SCRIMalderelliData.num.genesWithAnyISs.nonproliferating.NOTisUpregulatedByTenofovir.Rectal <- 
    length( unique( SCRIMalderelliData[ ( SCRIMalderelliData$Proliferating == 0 ) & ( SCRIMalderelliData$isUpregulatedByTenofovir.Rectal == 0 ), "Gene" ] ) );

SCRIMalderelliData.genesWithAnyISs.proliferating.isUpregulatedByTenofovir.Rectal.Wang.fisher.table <- cbind(
    c( SCRIMalderelliData.num.genesWithAnyISs.proliferating.isUpregulatedByTenofovir.Rectal, SCRIMalderelliData.num.genesWithAnyISs.proliferating.NOTisUpregulatedByTenofovir.Rectal ),
    c( WangData.num.genesWithAnyISs.isUpregulatedByTenofovir.Rectal, WangData.num.genesWithAnyISs.NOTisUpregulatedByTenofovir.Rectal ) );
colnames( SCRIMalderelliData.genesWithAnyISs.proliferating.isUpregulatedByTenofovir.Rectal.Wang.fisher.table ) <- c( "SCRIMalderelli", "Wang" );
rownames( SCRIMalderelliData.genesWithAnyISs.proliferating.isUpregulatedByTenofovir.Rectal.Wang.fisher.table ) <- c( "isUpregulatedByTenofovir.Rectal", "NOTisUpregulatedByTenofovir.Rectal" );
SCRIMalderelliData.genesWithAnyISs.proliferating.isUpregulatedByTenofovir.Rectal.Wang.fisher.test.results <- fisher.test( SCRIMalderelliData.genesWithAnyISs.proliferating.isUpregulatedByTenofovir.Rectal.Wang.fisher.table );
SCRIMalderelliData.genesWithAnyISs.proliferating.isUpregulatedByTenofovir.Rectal.Wang.fisher.test.results.p.value <- prettyPrintPValuesTo4Digits( SCRIMalderelliData.genesWithAnyISs.proliferating.isUpregulatedByTenofovir.Rectal.Wang.fisher.test.results$p.value, " = ", " < " );

SCRIMalderelliData.genesWithAnyISs.nonproliferating.isUpregulatedByTenofovir.Rectal.Wang.fisher.table <- cbind(
    c( SCRIMalderelliData.num.genesWithAnyISs.nonproliferating.isUpregulatedByTenofovir.Rectal, SCRIMalderelliData.num.genesWithAnyISs.nonproliferating.NOTisUpregulatedByTenofovir.Rectal ),
    c( WangData.num.genesWithAnyISs.isUpregulatedByTenofovir.Rectal, WangData.num.genesWithAnyISs.NOTisUpregulatedByTenofovir.Rectal ) );
colnames( SCRIMalderelliData.genesWithAnyISs.nonproliferating.isUpregulatedByTenofovir.Rectal.Wang.fisher.table ) <- c( "SCRIMalderelli", "Wang" );
rownames( SCRIMalderelliData.genesWithAnyISs.nonproliferating.isUpregulatedByTenofovir.Rectal.Wang.fisher.table ) <- c( "isUpregulatedByTenofovir.Rectal", "NOTisUpregulatedByTenofovir.Rectal" );
SCRIMalderelliData.genesWithAnyISs.nonproliferating.isUpregulatedByTenofovir.Rectal.Wang.fisher.test.results <- fisher.test( SCRIMalderelliData.genesWithAnyISs.nonproliferating.isUpregulatedByTenofovir.Rectal.Wang.fisher.table );
SCRIMalderelliData.genesWithAnyISs.nonproliferating.isUpregulatedByTenofovir.Rectal.Wang.fisher.test.results.p.value <- prettyPrintPValuesTo4Digits( SCRIMalderelliData.genesWithAnyISs.nonproliferating.isUpregulatedByTenofovir.Rectal.Wang.fisher.test.results$p.value, " = ", " < " );
@ 

Figure~\ref{fig:SCRIMalderelliData.genesWithAnyISs.p.value.isUpregulatedByTenofovir.Rectal} shows the significance of the enrichment of the isUpregulatedByTenofovir.Rectal feature among SCRIMalderelli genesWithAnyISs, by showing where the count of genesWithAnyISs with this feature falls in the null distribution that is obtained by independently drawing the appropriate number of genesWithAnyISs from the Wang data set. The probability of seeing such an extreme count statistic under the null hypothesis that the isUpregulatedByTenofovir.Rectal feature has the same abundance among SCRIMalderelli genesWithAnyISs as among Wang genesWithAnyISs is p\Sexpr{prettyPrintPValuesTo4Digits( SCRIMalderelliData.genesWithAnyISs.p.values.by.feature[ "isUpregulatedByTenofovir.Rectal" ], " = ", "< " )}.

\begin{minipage}{\linewidth}
\centering
\par
\bigskip
\captionof{figure}{\bf SCRIMalderelli genesWithAnyISs vs Wang: isUpregulatedByTenofovir.Rectal} \label{fig:SCRIMalderelliData.genesWithAnyISs.p.value.isUpregulatedByTenofovir.Rectal}
<<echo = FALSE, results = hide, fig = TRUE>>=
.feature <- "isUpregulatedByTenofovir.Rectal";
qplot(
    c( SCRIMalderelliData.genesWithAnyISs.feature.nulls[[ "total" ]][ , .feature ] ),
    geom = "histogram",
    main = "Histogram of null counts", 
    xlab = "Counts of genesWithAnyISs in genes that are isUpregulatedByTenofovir.Rectal",  
    fill=I("blue"), 
    col=I("black"),
    alpha=I(.2) ) + aes( y = ..density.. ) + labs( y = "Density" ) + geom_vline( xintercept = SCRIMalderelliData.num.genesWithAnyISs.by.feature[ .feature ], color = "red", linetype = "longdash" );
@ 
\par
\bigskip
SCRIMalderelli genesWithAnyISs vs Wang: isUpregulatedByTenofovir.Rectal \par
(p\Sexpr{prettyPrintPValuesTo4Digits( SCRIMalderelliData.genesWithAnyISs.p.values.by.feature[ "isUpregulatedByTenofovir.Rectal" ], " = ", "< " )})
\par
\bigskip
\end{minipage}

Table~\ref{tab:SCRIMalderelliData.genesWithAnyISs.isUpregulatedByTenofovir.Rectal.Wang.fisher} shows the comparison of isUpregulatedByTenofovir.Rectal between SCRIMalderelli (genesWithAnyISs) and Wang that conditions on both margins (Fisher's exact test p\Sexpr{SCRIMalderelliData.genesWithAnyISs.isUpregulatedByTenofovir.Rectal.Wang.fisher.test.results.p.value}).

\begin{minipage}{\linewidth}
\centering
\par
\bigskip
\captionof{table}{\bf isUpregulatedByTenofovir.Rectal: SCRIMalderelli genesWithAnyISs vs Wang} \label{tab:SCRIMalderelliData.genesWithAnyISs.isUpregulatedByTenofovir.Rectal.Wang.fisher}
<<echo = FALSE, results = tex>>=
print( xtable( SCRIMalderelliData.genesWithAnyISs.isUpregulatedByTenofovir.Rectal.Wang.fisher.table, digits=2 ), floating = FALSE );
@ 
\par
\bigskip
isUpregulatedByTenofovir.Rectal: SCRIMalderelli genesWithAnyISs vs Wang (Fisher's exact test p\Sexpr{SCRIMalderelliData.genesWithAnyISs.isUpregulatedByTenofovir.Rectal.Wang.fisher.test.results.p.value})
\par
\bigskip
\end{minipage}

%% isDownregulatedByTenofovir.exvivo 
<<echo = FALSE, results = hide>>=
WangData.num.genesWithAnyISs.isDownregulatedByTenofovir.exvivo <- 
    length( unique( WangData[ WangData$isDownregulatedByTenofovir.exvivo > 0, "Gene" ] ) );
WangData.num.genesWithAnyISs.NOTisDownregulatedByTenofovir.exvivo <- 
    length( unique( WangData[ WangData$isDownregulatedByTenofovir.exvivo == 0, "Gene" ] ) );

SCRIMalderelliData.num.genesWithAnyISs.isDownregulatedByTenofovir.exvivo <- 
    length( unique( SCRIMalderelliData[ SCRIMalderelliData$isDownregulatedByTenofovir.exvivo > 0, "Gene" ] ) );
SCRIMalderelliData.num.genesWithAnyISs.NOTisDownregulatedByTenofovir.exvivo <- 
    length( unique( SCRIMalderelliData[ SCRIMalderelliData$isDownregulatedByTenofovir.exvivo == 0, "Gene" ] ) );

SCRIMalderelliData.genesWithAnyISs.isDownregulatedByTenofovir.exvivo.Wang.fisher.table <- cbind(
    c( SCRIMalderelliData.num.genesWithAnyISs.isDownregulatedByTenofovir.exvivo, SCRIMalderelliData.num.genesWithAnyISs.NOTisDownregulatedByTenofovir.exvivo ),
    c( WangData.num.genesWithAnyISs.isDownregulatedByTenofovir.exvivo, WangData.num.genesWithAnyISs.NOTisDownregulatedByTenofovir.exvivo ) );
colnames( SCRIMalderelliData.genesWithAnyISs.isDownregulatedByTenofovir.exvivo.Wang.fisher.table ) <- c( "SCRIMalderelli", "Wang" );
rownames( SCRIMalderelliData.genesWithAnyISs.isDownregulatedByTenofovir.exvivo.Wang.fisher.table ) <- c( "isDownregulatedByTenofovir.exvivo", "NOTisDownregulatedByTenofovir.exvivo" );
SCRIMalderelliData.genesWithAnyISs.isDownregulatedByTenofovir.exvivo.Wang.fisher.test.results <- fisher.test( SCRIMalderelliData.genesWithAnyISs.isDownregulatedByTenofovir.exvivo.Wang.fisher.table );
SCRIMalderelliData.genesWithAnyISs.isDownregulatedByTenofovir.exvivo.Wang.fisher.test.results.p.value <- prettyPrintPValuesTo4Digits( SCRIMalderelliData.genesWithAnyISs.isDownregulatedByTenofovir.exvivo.Wang.fisher.test.results$p.value, " = ", " < " );

SCRIMalderelliData.num.genesWithAnyISs.proliferating.isDownregulatedByTenofovir.exvivo <- 
    length( unique( SCRIMalderelliData[ ( SCRIMalderelliData$Proliferating > 0 ) & ( SCRIMalderelliData$isDownregulatedByTenofovir.exvivo > 0 ), "Gene" ] ) );
SCRIMalderelliData.num.genesWithAnyISs.proliferating.NOTisDownregulatedByTenofovir.exvivo <- 
    length( unique( SCRIMalderelliData[ ( SCRIMalderelliData$Proliferating > 0 ) & ( SCRIMalderelliData$isDownregulatedByTenofovir.exvivo == 0 ), "Gene" ] ) );

SCRIMalderelliData.num.genesWithAnyISs.nonproliferating.isDownregulatedByTenofovir.exvivo <- 
    length( unique( SCRIMalderelliData[ ( SCRIMalderelliData$Proliferating == 0 ) & ( SCRIMalderelliData$isDownregulatedByTenofovir.exvivo > 0 ), "Gene" ] ) );
SCRIMalderelliData.num.genesWithAnyISs.nonproliferating.NOTisDownregulatedByTenofovir.exvivo <- 
    length( unique( SCRIMalderelliData[ ( SCRIMalderelliData$Proliferating == 0 ) & ( SCRIMalderelliData$isDownregulatedByTenofovir.exvivo == 0 ), "Gene" ] ) );

SCRIMalderelliData.genesWithAnyISs.proliferating.isDownregulatedByTenofovir.exvivo.Wang.fisher.table <- cbind(
    c( SCRIMalderelliData.num.genesWithAnyISs.proliferating.isDownregulatedByTenofovir.exvivo, SCRIMalderelliData.num.genesWithAnyISs.proliferating.NOTisDownregulatedByTenofovir.exvivo ),
    c( WangData.num.genesWithAnyISs.isDownregulatedByTenofovir.exvivo, WangData.num.genesWithAnyISs.NOTisDownregulatedByTenofovir.exvivo ) );
colnames( SCRIMalderelliData.genesWithAnyISs.proliferating.isDownregulatedByTenofovir.exvivo.Wang.fisher.table ) <- c( "SCRIMalderelli", "Wang" );
rownames( SCRIMalderelliData.genesWithAnyISs.proliferating.isDownregulatedByTenofovir.exvivo.Wang.fisher.table ) <- c( "isDownregulatedByTenofovir.exvivo", "NOTisDownregulatedByTenofovir.exvivo" );
SCRIMalderelliData.genesWithAnyISs.proliferating.isDownregulatedByTenofovir.exvivo.Wang.fisher.test.results <- fisher.test( SCRIMalderelliData.genesWithAnyISs.proliferating.isDownregulatedByTenofovir.exvivo.Wang.fisher.table );
SCRIMalderelliData.genesWithAnyISs.proliferating.isDownregulatedByTenofovir.exvivo.Wang.fisher.test.results.p.value <- prettyPrintPValuesTo4Digits( SCRIMalderelliData.genesWithAnyISs.proliferating.isDownregulatedByTenofovir.exvivo.Wang.fisher.test.results$p.value, " = ", " < " );

SCRIMalderelliData.genesWithAnyISs.nonproliferating.isDownregulatedByTenofovir.exvivo.Wang.fisher.table <- cbind(
    c( SCRIMalderelliData.num.genesWithAnyISs.nonproliferating.isDownregulatedByTenofovir.exvivo, SCRIMalderelliData.num.genesWithAnyISs.nonproliferating.NOTisDownregulatedByTenofovir.exvivo ),
    c( WangData.num.genesWithAnyISs.isDownregulatedByTenofovir.exvivo, WangData.num.genesWithAnyISs.NOTisDownregulatedByTenofovir.exvivo ) );
colnames( SCRIMalderelliData.genesWithAnyISs.nonproliferating.isDownregulatedByTenofovir.exvivo.Wang.fisher.table ) <- c( "SCRIMalderelli", "Wang" );
rownames( SCRIMalderelliData.genesWithAnyISs.nonproliferating.isDownregulatedByTenofovir.exvivo.Wang.fisher.table ) <- c( "isDownregulatedByTenofovir.exvivo", "NOTisDownregulatedByTenofovir.exvivo" );
SCRIMalderelliData.genesWithAnyISs.nonproliferating.isDownregulatedByTenofovir.exvivo.Wang.fisher.test.results <- fisher.test( SCRIMalderelliData.genesWithAnyISs.nonproliferating.isDownregulatedByTenofovir.exvivo.Wang.fisher.table );
SCRIMalderelliData.genesWithAnyISs.nonproliferating.isDownregulatedByTenofovir.exvivo.Wang.fisher.test.results.p.value <- prettyPrintPValuesTo4Digits( SCRIMalderelliData.genesWithAnyISs.nonproliferating.isDownregulatedByTenofovir.exvivo.Wang.fisher.test.results$p.value, " = ", " < " );
@ 

Figure~\ref{fig:SCRIMalderelliData.genesWithAnyISs.p.value.isDownregulatedByTenofovir.exvivo} shows the significance of the enrichment of the isDownregulatedByTenofovir.exvivo feature among SCRIMalderelli genesWithAnyISs, by showing where the count of genesWithAnyISs with this feature falls in the null distribution that is obtained by independently drawing the appropriate number of genesWithAnyISs from the Wang data set. The probability of seeing such an extreme count statistic under the null hypothesis that the isDownregulatedByTenofovir.exvivo feature has the same abundance among SCRIMalderelli genesWithAnyISs as among Wang genesWithAnyISs is p\Sexpr{prettyPrintPValuesTo4Digits( SCRIMalderelliData.genesWithAnyISs.p.values.by.feature[ "isDownregulatedByTenofovir.exvivo" ], " = ", "< " )}.

\begin{minipage}{\linewidth}
\centering
\par
\bigskip
\captionof{figure}{\bf SCRIMalderelli genesWithAnyISs vs Wang: isDownregulatedByTenofovir.exvivo} \label{fig:SCRIMalderelliData.genesWithAnyISs.p.value.isDownregulatedByTenofovir.exvivo}
<<echo = FALSE, results = hide, fig = TRUE>>=
.feature <- "isDownregulatedByTenofovir.exvivo";
qplot(
    c( SCRIMalderelliData.genesWithAnyISs.feature.nulls[[ "total" ]][ , .feature ] ),
    geom = "histogram",
    main = "Histogram of null counts", 
    xlab = "Counts of genesWithAnyISs in genes that are isDownregulatedByTenofovir.exvivo",  
    fill=I("blue"), 
    col=I("black"),
    alpha=I(.2) ) + aes( y = ..density.. ) + labs( y = "Density" ) + geom_vline( xintercept = SCRIMalderelliData.num.genesWithAnyISs.by.feature[ .feature ], color = "red", linetype = "longdash" );
@ 
\par
\bigskip
SCRIMalderelli genesWithAnyISs vs Wang: isDownregulatedByTenofovir.exvivo \par
(p\Sexpr{prettyPrintPValuesTo4Digits( SCRIMalderelliData.genesWithAnyISs.p.values.by.feature[ "isDownregulatedByTenofovir.exvivo" ], " = ", "< " )})
\par
\bigskip
\end{minipage}

Table~\ref{tab:SCRIMalderelliData.genesWithAnyISs.isDownregulatedByTenofovir.exvivo.Wang.fisher} shows the comparison of isDownregulatedByTenofovir.exvivo between SCRIMalderelli (genesWithAnyISs) and Wang that conditions on both margins (Fisher's exact test p\Sexpr{SCRIMalderelliData.genesWithAnyISs.isDownregulatedByTenofovir.exvivo.Wang.fisher.test.results.p.value}).

\begin{minipage}{\linewidth}
\centering
\par
\bigskip
\captionof{table}{\bf isDownregulatedByTenofovir.exvivo: SCRIMalderelli genesWithAnyISs vs Wang} \label{tab:SCRIMalderelliData.genesWithAnyISs.isDownregulatedByTenofovir.exvivo.Wang.fisher}
<<echo = FALSE, results = tex>>=
print( xtable( SCRIMalderelliData.genesWithAnyISs.isDownregulatedByTenofovir.exvivo.Wang.fisher.table, digits=2 ), floating = FALSE );
@ 
\par
\bigskip
isDownregulatedByTenofovir.exvivo: SCRIMalderelli genesWithAnyISs vs Wang (Fisher's exact test p\Sexpr{SCRIMalderelliData.genesWithAnyISs.isDownregulatedByTenofovir.exvivo.Wang.fisher.test.results.p.value})
\par
\bigskip
\end{minipage}

%% isUpregulatedByTenofovir.exvivo 
<<echo = FALSE, results = hide>>=
WangData.num.genesWithAnyISs.isUpregulatedByTenofovir.exvivo <- 
    length( unique( WangData[ WangData$isUpregulatedByTenofovir.exvivo > 0, "Gene" ] ) );
WangData.num.genesWithAnyISs.NOTisUpregulatedByTenofovir.exvivo <- 
    length( unique( WangData[ WangData$isUpregulatedByTenofovir.exvivo == 0, "Gene" ] ) );

SCRIMalderelliData.num.genesWithAnyISs.isUpregulatedByTenofovir.exvivo <- 
    length( unique( SCRIMalderelliData[ SCRIMalderelliData$isUpregulatedByTenofovir.exvivo > 0, "Gene" ] ) );
SCRIMalderelliData.num.genesWithAnyISs.NOTisUpregulatedByTenofovir.exvivo <- 
    length( unique( SCRIMalderelliData[ SCRIMalderelliData$isUpregulatedByTenofovir.exvivo == 0, "Gene" ] ) );

SCRIMalderelliData.genesWithAnyISs.isUpregulatedByTenofovir.exvivo.Wang.fisher.table <- cbind(
    c( SCRIMalderelliData.num.genesWithAnyISs.isUpregulatedByTenofovir.exvivo, SCRIMalderelliData.num.genesWithAnyISs.NOTisUpregulatedByTenofovir.exvivo ),
    c( WangData.num.genesWithAnyISs.isUpregulatedByTenofovir.exvivo, WangData.num.genesWithAnyISs.NOTisUpregulatedByTenofovir.exvivo ) );
colnames( SCRIMalderelliData.genesWithAnyISs.isUpregulatedByTenofovir.exvivo.Wang.fisher.table ) <- c( "SCRIMalderelli", "Wang" );
rownames( SCRIMalderelliData.genesWithAnyISs.isUpregulatedByTenofovir.exvivo.Wang.fisher.table ) <- c( "isUpregulatedByTenofovir.exvivo", "NOTisUpregulatedByTenofovir.exvivo" );
SCRIMalderelliData.genesWithAnyISs.isUpregulatedByTenofovir.exvivo.Wang.fisher.test.results <- fisher.test( SCRIMalderelliData.genesWithAnyISs.isUpregulatedByTenofovir.exvivo.Wang.fisher.table );
SCRIMalderelliData.genesWithAnyISs.isUpregulatedByTenofovir.exvivo.Wang.fisher.test.results.p.value <- prettyPrintPValuesTo4Digits( SCRIMalderelliData.genesWithAnyISs.isUpregulatedByTenofovir.exvivo.Wang.fisher.test.results$p.value, " = ", " < " );

SCRIMalderelliData.num.genesWithAnyISs.proliferating.isUpregulatedByTenofovir.exvivo <- 
    length( unique( SCRIMalderelliData[ ( SCRIMalderelliData$Proliferating > 0 ) & ( SCRIMalderelliData$isUpregulatedByTenofovir.exvivo > 0 ), "Gene" ] ) );
SCRIMalderelliData.num.genesWithAnyISs.proliferating.NOTisUpregulatedByTenofovir.exvivo <- 
    length( unique( SCRIMalderelliData[ ( SCRIMalderelliData$Proliferating > 0 ) & ( SCRIMalderelliData$isUpregulatedByTenofovir.exvivo == 0 ), "Gene" ] ) );

SCRIMalderelliData.num.genesWithAnyISs.nonproliferating.isUpregulatedByTenofovir.exvivo <- 
    length( unique( SCRIMalderelliData[ ( SCRIMalderelliData$Proliferating == 0 ) & ( SCRIMalderelliData$isUpregulatedByTenofovir.exvivo > 0 ), "Gene" ] ) );
SCRIMalderelliData.num.genesWithAnyISs.nonproliferating.NOTisUpregulatedByTenofovir.exvivo <- 
    length( unique( SCRIMalderelliData[ ( SCRIMalderelliData$Proliferating == 0 ) & ( SCRIMalderelliData$isUpregulatedByTenofovir.exvivo == 0 ), "Gene" ] ) );

SCRIMalderelliData.genesWithAnyISs.proliferating.isUpregulatedByTenofovir.exvivo.Wang.fisher.table <- cbind(
    c( SCRIMalderelliData.num.genesWithAnyISs.proliferating.isUpregulatedByTenofovir.exvivo, SCRIMalderelliData.num.genesWithAnyISs.proliferating.NOTisUpregulatedByTenofovir.exvivo ),
    c( WangData.num.genesWithAnyISs.isUpregulatedByTenofovir.exvivo, WangData.num.genesWithAnyISs.NOTisUpregulatedByTenofovir.exvivo ) );
colnames( SCRIMalderelliData.genesWithAnyISs.proliferating.isUpregulatedByTenofovir.exvivo.Wang.fisher.table ) <- c( "SCRIMalderelli", "Wang" );
rownames( SCRIMalderelliData.genesWithAnyISs.proliferating.isUpregulatedByTenofovir.exvivo.Wang.fisher.table ) <- c( "isUpregulatedByTenofovir.exvivo", "NOTisUpregulatedByTenofovir.exvivo" );
SCRIMalderelliData.genesWithAnyISs.proliferating.isUpregulatedByTenofovir.exvivo.Wang.fisher.test.results <- fisher.test( SCRIMalderelliData.genesWithAnyISs.proliferating.isUpregulatedByTenofovir.exvivo.Wang.fisher.table );
SCRIMalderelliData.genesWithAnyISs.proliferating.isUpregulatedByTenofovir.exvivo.Wang.fisher.test.results.p.value <- prettyPrintPValuesTo4Digits( SCRIMalderelliData.genesWithAnyISs.proliferating.isUpregulatedByTenofovir.exvivo.Wang.fisher.test.results$p.value, " = ", " < " );

SCRIMalderelliData.genesWithAnyISs.nonproliferating.isUpregulatedByTenofovir.exvivo.Wang.fisher.table <- cbind(
    c( SCRIMalderelliData.num.genesWithAnyISs.nonproliferating.isUpregulatedByTenofovir.exvivo, SCRIMalderelliData.num.genesWithAnyISs.nonproliferating.NOTisUpregulatedByTenofovir.exvivo ),
    c( WangData.num.genesWithAnyISs.isUpregulatedByTenofovir.exvivo, WangData.num.genesWithAnyISs.NOTisUpregulatedByTenofovir.exvivo ) );
colnames( SCRIMalderelliData.genesWithAnyISs.nonproliferating.isUpregulatedByTenofovir.exvivo.Wang.fisher.table ) <- c( "SCRIMalderelli", "Wang" );
rownames( SCRIMalderelliData.genesWithAnyISs.nonproliferating.isUpregulatedByTenofovir.exvivo.Wang.fisher.table ) <- c( "isUpregulatedByTenofovir.exvivo", "NOTisUpregulatedByTenofovir.exvivo" );
SCRIMalderelliData.genesWithAnyISs.nonproliferating.isUpregulatedByTenofovir.exvivo.Wang.fisher.test.results <- fisher.test( SCRIMalderelliData.genesWithAnyISs.nonproliferating.isUpregulatedByTenofovir.exvivo.Wang.fisher.table );
SCRIMalderelliData.genesWithAnyISs.nonproliferating.isUpregulatedByTenofovir.exvivo.Wang.fisher.test.results.p.value <- prettyPrintPValuesTo4Digits( SCRIMalderelliData.genesWithAnyISs.nonproliferating.isUpregulatedByTenofovir.exvivo.Wang.fisher.test.results$p.value, " = ", " < " );
@ 

Figure~\ref{fig:SCRIMalderelliData.genesWithAnyISs.p.value.isUpregulatedByTenofovir.exvivo} shows the significance of the enrichment of the isUpregulatedByTenofovir.exvivo feature among SCRIMalderelli genesWithAnyISs, by showing where the count of genesWithAnyISs with this feature falls in the null distribution that is obtained by independently drawing the appropriate number of genesWithAnyISs from the Wang data set. The probability of seeing such an extreme count statistic under the null hypothesis that the isUpregulatedByTenofovir.exvivo feature has the same abundance among SCRIMalderelli genesWithAnyISs as among Wang genesWithAnyISs is p\Sexpr{prettyPrintPValuesTo4Digits( SCRIMalderelliData.genesWithAnyISs.p.values.by.feature[ "isUpregulatedByTenofovir.exvivo" ], " = ", "< " )}.

\begin{minipage}{\linewidth}
\centering
\par
\bigskip
\captionof{figure}{\bf SCRIMalderelli genesWithAnyISs vs Wang: isUpregulatedByTenofovir.exvivo} \label{fig:SCRIMalderelliData.genesWithAnyISs.p.value.isUpregulatedByTenofovir.exvivo}
<<echo = FALSE, results = hide, fig = TRUE>>=
.feature <- "isUpregulatedByTenofovir.exvivo";
qplot(
    c( SCRIMalderelliData.genesWithAnyISs.feature.nulls[[ "total" ]][ , .feature ] ),
    geom = "histogram",
    main = "Histogram of null counts", 
    xlab = "Counts of genesWithAnyISs in genes that are isUpregulatedByTenofovir.exvivo",  
    fill=I("blue"), 
    col=I("black"),
    alpha=I(.2) ) + aes( y = ..density.. ) + labs( y = "Density" ) + geom_vline( xintercept = SCRIMalderelliData.num.genesWithAnyISs.by.feature[ .feature ], color = "red", linetype = "longdash" );
@ 
\par
\bigskip
SCRIMalderelli genesWithAnyISs vs Wang: isUpregulatedByTenofovir.exvivo \par
(p\Sexpr{prettyPrintPValuesTo4Digits( SCRIMalderelliData.genesWithAnyISs.p.values.by.feature[ "isUpregulatedByTenofovir.exvivo" ], " = ", "< " )})
\par
\bigskip
\end{minipage}

Table~\ref{tab:SCRIMalderelliData.genesWithAnyISs.isUpregulatedByTenofovir.exvivo.Wang.fisher} shows the comparison of isUpregulatedByTenofovir.exvivo between SCRIMalderelli (genesWithAnyISs) and Wang that conditions on both margins (Fisher's exact test p\Sexpr{SCRIMalderelliData.genesWithAnyISs.isUpregulatedByTenofovir.exvivo.Wang.fisher.test.results.p.value}).

\begin{minipage}{\linewidth}
\centering
\par
\bigskip
\captionof{table}{\bf isUpregulatedByTenofovir.exvivo: SCRIMalderelli genesWithAnyISs vs Wang} \label{tab:SCRIMalderelliData.genesWithAnyISs.isUpregulatedByTenofovir.exvivo.Wang.fisher}
<<echo = FALSE, results = tex>>=
print( xtable( SCRIMalderelliData.genesWithAnyISs.isUpregulatedByTenofovir.exvivo.Wang.fisher.table, digits=2 ), floating = FALSE );
@ 
\par
\bigskip
isUpregulatedByTenofovir.exvivo: SCRIMalderelli genesWithAnyISs vs Wang (Fisher's exact test p\Sexpr{SCRIMalderelliData.genesWithAnyISs.isUpregulatedByTenofovir.exvivo.Wang.fisher.test.results.p.value})
\par
\bigskip
\end{minipage}


Table~\ref{tab:SCRIMalderelliData.genesWithAnyISs.p.values.by.feature.adjusted.secondaryFeatures.Tenofovir} shows the Holm-adjusted p-values of the genesWithAnyISs test evaluating the secondary Tenofovir features in the SCRIMalderelli data set.

\begin{minipage}{\linewidth}
\centering
\par
\bigskip
\captionof{table}{\bf SCRIMalderelli genesWithAnyISs vs Wang: Holm-adjusted p-values of secondary Tenofovir features} \label{tab:SCRIMalderelliData.genesWithAnyISs.p.values.by.feature.adjusted.secondaryFeatures.Tenofovir}
<<echo = FALSE, results = tex>>=
.tab <- as.matrix( SCRIMalderelliData.genesWithAnyISs.p.values.by.feature.adjusted[ secondaryFeatures.Tenofovir ] );
colnames( .tab ) <- "Holm-adjusted p-value";
print( xtable( .tab, digits=4 ), floating = FALSE );
@ 
\par
\bigskip
SCRIMalderelli genesWithAnyISs vs Wang: Holm-adjusted p-values of secondary Tenofovir features.
\par
\bigskip
\end{minipage}


Table~\ref{tab:SCRIMalderelliData.genesWithAnyISs.proliferating.p.values.by.feature.adjusted.secondaryFeatures.Tenofovir} shows the Holm-adjusted p-values of the proliferating genesWithAnyISs test evaluating the secondary Tenofovir features in the SCRIMalderelli data set.

\begin{minipage}{\linewidth}
\centering
\par
\bigskip
\captionof{table}{\bf SCRIMalderelli proliferating genesWithAnyISs vs Wang: Holm-adjusted p-values of secondary Tenofovir features} \label{tab:SCRIMalderelliData.genesWithAnyISs.proliferating.p.values.by.feature.adjusted.secondaryFeatures.Tenofovir}
<<echo = FALSE, results = tex>>=
.tab <- as.matrix( SCRIMalderelliData.genesWithAnyISs.p.values.proliferating.by.feature.adjusted[ secondaryFeatures.Tenofovir ] );
colnames( .tab ) <- "Holm-adjusted p-value";
print( xtable( .tab, digits=4 ), floating = FALSE );
@ 
\par
\bigskip
SCRIMalderelli proliferating genesWithAnyISs vs Wang: Holm-adjusted p-values of secondary Tenofovir features.
\par
\bigskip
\end{minipage}


Table~\ref{tab:SCRIMalderelliData.genesWithAnyISs.nonproliferating.p.values.by.feature.adjusted.secondaryFeatures.Tenofovir} shows the Holm-adjusted p-values of the nonproliferating genesWithAnyISs test evaluating the secondary Tenofovir features in the SCRIMalderelli data set.

\begin{minipage}{\linewidth}
\centering
\par
\bigskip
\captionof{table}{\bf SCRIMalderelli nonproliferating genesWithAnyISs vs Wang: Holm-adjusted p-values of secondary Tenofovir features} \label{tab:SCRIMalderelliData.genesWithAnyISs.nonproliferating.p.values.by.feature.adjusted.secondaryFeatures.Tenofovir}
<<echo = FALSE, results = tex>>=
.tab <- as.matrix( SCRIMalderelliData.genesWithAnyISs.p.values.nonproliferating.by.feature.adjusted[ secondaryFeatures.Tenofovir ] );
colnames( .tab ) <- "Holm-adjusted p-value";
print( xtable( .tab, digits=4 ), floating = FALSE );
@ 
\par
\bigskip
SCRIMalderelli nonproliferating genesWithAnyISs vs Wang: Holm-adjusted p-values of secondary Tenofovir features.
\par
\bigskip
\end{minipage}

\clearpage

\subsection{All ISs}

<<echo = FALSE, results = hide>>=
if( exists( "SCRIMalderelli.IS.SAMPLES.ARE.LOADED.ALREADY" ) && SCRIMalderelli.IS.SAMPLES.ARE.LOADED.ALREADY ) {
    ## GREAT.
} else {
### all ISs analyses.
if( file.exists( SCRIMalderelliData.IS.the.samples.Rda.filename ) ) {
    load( file = SCRIMalderelliData.IS.the.samples.Rda.filename );
} else {
    set.seed( the.seed );
    SCRIMalderelliData.IS.the.samples <- lapply( SCRIMalderelliData.num.IS.by.subject.and.total.and.totalProliferating, function ( .num.integration.sites ) {
        print( .num.integration.sites );
        t( rmultinom( num.samples, .num.integration.sites, WangData.num.uniqueIS.by.gene ) )
    } );
    names( SCRIMalderelliData.IS.the.samples ) <- names( SCRIMalderelliData.num.IS.by.subject.and.total.and.totalProliferating );
    save( SCRIMalderelliData.IS.the.samples, file = SCRIMalderelliData.IS.the.samples.Rda.filename );
}

### Analysis based on the samples
if( file.exists( SCRIMalderelliData.IS.feature.nulls.Rda.filename ) ) {
    load( file = SCRIMalderelliData.IS.feature.nulls.Rda.filename );
} else {
    SCRIMalderelliData.IS.feature.nulls <- lapply( SCRIMalderelliData.IS.the.samples, function ( .the.samples ) {
        sapply( colnames( Wang.feature.by.gene ), function ( .feature ) {
            print( .feature );
            .feature.genes <- names( which( Wang.feature.by.gene[ , .feature ] ) );
            if( length( .feature.genes ) == 0 ) {
                return( rep( 0, nrow( .the.samples ) ) );
            } else {
                return( apply( .the.samples[ , .feature.genes, drop = FALSE ], 1, sum ) );
            }
        } )
    } );
    save( SCRIMalderelliData.IS.feature.nulls, file = SCRIMalderelliData.IS.feature.nulls.Rda.filename );
}

SCRIMalderelli.IS.SAMPLES.ARE.LOADED.ALREADY <- TRUE;
} # End if SCRIMalderelli.IS.SAMPLES.ARE.LOADED.ALREADY .. else ..@ 
@

<<echo = FALSE>>=
## SCRIMalderelliData.IS.the.samples no longer used starting here.
if( exists( "SCRIMalderelliData.IS.the.samples" ) ) {
  rm( "SCRIMalderelliData.IS.the.samples" );
  gc();
}
@ 

<<echo = FALSE, results = hide>>=
if( exists( "SCRIMalderelli.IS.P.VALUES.ARE.COMPUTED.ALREADY" ) && SCRIMalderelli.IS.P.VALUES.ARE.COMPUTED.ALREADY ) {
    ## GREAT.
} else {

## Calculate conservative two-sided p-values for the observed number of ISs with each feature exceeding the observed number.
# first, for each subject separately:
SCRIMalderelliData.IS.p.values.by.feature.by.subject <-
  t( sapply( SCRIMalderelliData.subjectIDs, function( .subject.id ) {
      sapply( colnames( Wang.feature.by.gene ), function ( .feature ) {
          calculatePValue( SCRIMalderelliData.num.IS.by.subject.by.feature[ .subject.id, .feature ], SCRIMalderelliData.IS.feature.nulls[[ .subject.id ]] )
      } )
  } ) );
# Next, for all subjects pooled:
SCRIMalderelliData.IS.p.values.by.feature <-
  sapply( colnames( Wang.feature.by.gene ), function ( .feature ) {
      calculatePValue( SCRIMalderelliData.num.IS.by.feature[ .feature ], SCRIMalderelliData.IS.feature.nulls[[ "total" ]][ , .feature ] )
  } );
# Finally, for all subjects pooled, but just looking at proliferating ISs:
SCRIMalderelliData.IS.p.values.proliferating.by.feature <-
  sapply( colnames( Wang.feature.by.gene ), function ( .feature ) {
      calculatePValue( SCRIMalderelliData.num.IS.proliferating.by.feature[ .feature ], SCRIMalderelliData.IS.feature.nulls[[ "totalProliferating" ]][ , .feature ] )
  } );
# Finally, for all subjects pooled, but just looking at nonproliferating ISs:
SCRIMalderelliData.IS.p.values.nonproliferating.by.feature <-
  sapply( colnames( Wang.feature.by.gene ), function ( .feature ) {
      calculatePValue( SCRIMalderelliData.num.IS.nonproliferating.by.feature[ .feature ], SCRIMalderelliData.IS.feature.nulls[[ "totalNonproliferating" ]][ , .feature ] )
  } );
## Note that we pre-specified that we'd ignore all but the top 20 GO terms, but we lazily did the analysis for all of them.

.isFeatures <- grep( "^is", names( SCRIMalderelliData.IS.p.values.proliferating.by.feature ), value = T )
primaryFeatures.Tenofovir <- c( "isDownregulatedByTenofovir.exvivo", "isUpregulatedByTenofovir.exvivo", "isDownregulatedByTenofovir.Rectal", "isUpregulatedByTenofovir.Rectal" );
primaryFeatures.GO <- c( "isAnyTop20.GO" );
primaryFeatures.cancer <- c( "isCancer", "isAnyCancer.GO" );
secondaryFeatures.Tenofovir <- setdiff( grep( "Tenofovir", .isFeatures, value = TRUE ), primaryFeatures.Tenofovir );
secondaryFeatures.cancer10 <- setdiff( .isFeatures, c( primaryFeatures.GO, primaryFeatures.cancer, primaryFeatures.Tenofovir, secondaryFeatures.Tenofovir ) );
stopifnot( length( secondaryFeatures.cancer10 ) == 10 );
individualGOFeatures.Hallmark40 <- names( SCRIMalderelliData.IS.p.values.proliferating.by.feature )[ 1:40 ];
stopifnot( length( individualGOFeatures.Hallmark40 ) == 40 );
individualGOFeatures.top20 <- names( SCRIMalderelliData.IS.p.values.proliferating.by.feature )[ 53:(53 + 19) ];
stopifnot( length( individualGOFeatures.top20 ) == 20 );

# FWER-correct (using "holm" method) the p-values for the cancer10 and the Hallmark40 and the top20.
SCRIMalderelliData.IS.p.values.by.feature.by.subject.adjusted <- t( apply( SCRIMalderelliData.IS.p.values.by.feature.by.subject, 1, function( .p.values.by.feature ) {
    .p.values.by.feature[ primaryFeatures.Tenofovir ] <- p.adjust( .p.values.by.feature[ primaryFeatures.Tenofovir ], method = "holm" );
    .p.values.by.feature[ secondaryFeatures.Tenofovir ] <- p.adjust( .p.values.by.feature[ secondaryFeatures.Tenofovir ], method = "holm" );
    .p.values.by.feature[ secondaryFeatures.cancer10 ] <- p.adjust( .p.values.by.feature[ secondaryFeatures.cancer10 ], method = "holm" );
    .p.values.by.feature[ individualGOFeatures.Hallmark40 ] <- p.adjust( .p.values.by.feature[ individualGOFeatures.Hallmark40 ], method = "holm" );
    .p.values.by.feature[ individualGOFeatures.top20 ] <- p.adjust( .p.values.by.feature[ individualGOFeatures.top20 ], method = "holm" );
    return( .p.values.by.feature );
} ) );
SCRIMalderelliData.IS.p.values.by.feature.adjusted <- SCRIMalderelliData.IS.p.values.by.feature;
SCRIMalderelliData.IS.p.values.by.feature.adjusted[ primaryFeatures.Tenofovir ] <- p.adjust( SCRIMalderelliData.IS.p.values.by.feature[ primaryFeatures.Tenofovir ], method = "holm" );
SCRIMalderelliData.IS.p.values.by.feature.adjusted[ secondaryFeatures.Tenofovir ] <- p.adjust( SCRIMalderelliData.IS.p.values.by.feature[ secondaryFeatures.Tenofovir ], method = "holm" );
SCRIMalderelliData.IS.p.values.by.feature.adjusted[ secondaryFeatures.cancer10 ] <- p.adjust( SCRIMalderelliData.IS.p.values.by.feature[ secondaryFeatures.cancer10 ], method = "holm" );
SCRIMalderelliData.IS.p.values.by.feature.adjusted[ individualGOFeatures.Hallmark40 ] <- p.adjust( SCRIMalderelliData.IS.p.values.by.feature[ individualGOFeatures.Hallmark40 ], method = "holm" );
SCRIMalderelliData.IS.p.values.by.feature.adjusted[ individualGOFeatures.top20 ] <- p.adjust( SCRIMalderelliData.IS.p.values.by.feature[ individualGOFeatures.top20 ], method = "holm" );

## Adjust the proliferating results
SCRIMalderelliData.IS.p.values.proliferating.by.feature.adjusted <- SCRIMalderelliData.IS.p.values.proliferating.by.feature;
SCRIMalderelliData.IS.p.values.proliferating.by.feature.adjusted[ primaryFeatures.Tenofovir ] <- p.adjust( SCRIMalderelliData.IS.p.values.proliferating.by.feature[ primaryFeatures.Tenofovir ], method = "holm" );
SCRIMalderelliData.IS.p.values.proliferating.by.feature.adjusted[ secondaryFeatures.Tenofovir ] <- p.adjust( SCRIMalderelliData.IS.p.values.proliferating.by.feature[ secondaryFeatures.Tenofovir ], method = "holm" );
SCRIMalderelliData.IS.p.values.proliferating.by.feature.adjusted[ secondaryFeatures.cancer10 ] <- p.adjust( SCRIMalderelliData.IS.p.values.proliferating.by.feature[ secondaryFeatures.cancer10 ], method = "holm" );
SCRIMalderelliData.IS.p.values.proliferating.by.feature.adjusted[ individualGOFeatures.Hallmark40 ] <- p.adjust( SCRIMalderelliData.IS.p.values.proliferating.by.feature[ individualGOFeatures.Hallmark40 ], method = "holm" );
SCRIMalderelliData.IS.p.values.proliferating.by.feature.adjusted[ individualGOFeatures.top20 ] <- p.adjust( SCRIMalderelliData.IS.p.values.proliferating.by.feature[ individualGOFeatures.top20 ], method = "holm" );

## Adjust the nonproliferating results
SCRIMalderelliData.IS.p.values.nonproliferating.by.feature.adjusted <- SCRIMalderelliData.IS.p.values.nonproliferating.by.feature;
SCRIMalderelliData.IS.p.values.nonproliferating.by.feature.adjusted[ primaryFeatures.Tenofovir ] <- p.adjust( SCRIMalderelliData.IS.p.values.nonproliferating.by.feature[ primaryFeatures.Tenofovir ], method = "holm" );
SCRIMalderelliData.IS.p.values.nonproliferating.by.feature.adjusted[ secondaryFeatures.Tenofovir ] <- p.adjust( SCRIMalderelliData.IS.p.values.nonproliferating.by.feature[ secondaryFeatures.Tenofovir ], method = "holm" );
SCRIMalderelliData.IS.p.values.nonproliferating.by.feature.adjusted[ secondaryFeatures.cancer10 ] <- p.adjust( SCRIMalderelliData.IS.p.values.nonproliferating.by.feature[ secondaryFeatures.cancer10 ], method = "holm" );
SCRIMalderelliData.IS.p.values.nonproliferating.by.feature.adjusted[ individualGOFeatures.Hallmark40 ] <- p.adjust( SCRIMalderelliData.IS.p.values.nonproliferating.by.feature[ individualGOFeatures.Hallmark40 ], method = "holm" );
SCRIMalderelliData.IS.p.values.nonproliferating.by.feature.adjusted[ individualGOFeatures.top20 ] <- p.adjust( SCRIMalderelliData.IS.p.values.nonproliferating.by.feature[ individualGOFeatures.top20 ], method = "holm" );

SCRIMalderelli.IS.P.VALUES.ARE.COMPUTED.ALREADY <- TRUE;
} # End if SCRIMalderelli.IS.P.VALUES.ARE.COMPUTED.ALREADY .. else ..
@ 

Table~\ref{tab:SCRIMalderelliData.IS.p.values.by.feature.adjusted.primaryFeatures.cancer} shows the Holm-adjusted p-values of the IS test evaluating the primary Cancer features in the SCRIMalderelli data set.

\begin{minipage}{\linewidth}
\centering
\par
\bigskip
\captionof{table}{\bf SCRIMalderelli ISs vs Wang: Holm-adjusted p-values of primary Cancer features} \label{tab:SCRIMalderelliData.IS.p.values.by.feature.adjusted.primaryFeatures.cancer}
<<echo = FALSE, results = tex>>=
.tab <- as.matrix( SCRIMalderelliData.IS.p.values.by.feature.adjusted[ primaryFeatures.cancer ] );
colnames( .tab ) <- "Holm-adjusted p-value";
print( xtable( .tab, digits=4 ), floating = FALSE );
@ 
\par
\bigskip
SCRIMalderelli ISs vs Wang: Holm-adjusted p-values of primary Cancer features.
\par
\bigskip
\end{minipage}
 
 
%% isCancer 
<<echo = FALSE, results = hide>>=
SCRIMalderelliData.num.IS.isCancer <- 
    sum( SCRIMalderelliData[ SCRIMalderelliData$isCancer > 0, time.points ] );
SCRIMalderelliData.num.IS.NOTisCancer <- 
    sum( SCRIMalderelliData[ SCRIMalderelliData$isCancer == 0, time.points ] );

SCRIMalderelliData.IS.isCancer.Wang.fisher.table <- cbind(
    c( SCRIMalderelliData.num.IS.isCancer, SCRIMalderelliData.num.IS.NOTisCancer ),
    c( WangData.num.uniqueIS.isCancer, WangData.num.uniqueIS.NOTisCancer ) );
colnames( SCRIMalderelliData.IS.isCancer.Wang.fisher.table ) <- c( "SCRIMalderelli", "Wang" );
rownames( SCRIMalderelliData.IS.isCancer.Wang.fisher.table ) <- c( "isCancer", "NOTisCancer" );
SCRIMalderelliData.IS.isCancer.Wang.fisher.test.results <- fisher.test( SCRIMalderelliData.IS.isCancer.Wang.fisher.table );
SCRIMalderelliData.IS.isCancer.Wang.fisher.test.results.p.value <- prettyPrintPValuesTo4Digits( SCRIMalderelliData.IS.isCancer.Wang.fisher.test.results$p.value, " = ", " < " );

SCRIMalderelliData.num.IS.proliferating.isCancer <- 
    sum( SCRIMalderelliData[ ( SCRIMalderelliData$Proliferating > 0 ) & ( SCRIMalderelliData$isCancer > 0 ), time.points ] );
SCRIMalderelliData.num.IS.proliferating.NOTisCancer <- 
    sum( SCRIMalderelliData[ ( SCRIMalderelliData$Proliferating > 0 ) & ( SCRIMalderelliData$isCancer == 0 ), time.points ] );

SCRIMalderelliData.num.IS.nonproliferating.isCancer <- 
    sum( SCRIMalderelliData[ ( SCRIMalderelliData$Proliferating == 0 ) & ( SCRIMalderelliData$isCancer > 0 ), time.points ] );
SCRIMalderelliData.num.IS.nonproliferating.NOTisCancer <- 
    sum( SCRIMalderelliData[ ( SCRIMalderelliData$Proliferating == 0 ) & ( SCRIMalderelliData$isCancer == 0 ), time.points ] );

SCRIMalderelliData.IS.proliferating.isCancer.Wang.fisher.table <- cbind(
    c( SCRIMalderelliData.num.IS.proliferating.isCancer, SCRIMalderelliData.num.IS.proliferating.NOTisCancer ),
    c( WangData.num.uniqueIS.isCancer, WangData.num.uniqueIS.NOTisCancer ) );
colnames( SCRIMalderelliData.IS.proliferating.isCancer.Wang.fisher.table ) <- c( "SCRIMalderelli", "Wang" );
rownames( SCRIMalderelliData.IS.proliferating.isCancer.Wang.fisher.table ) <- c( "isCancer", "NOTisCancer" );
SCRIMalderelliData.IS.proliferating.isCancer.Wang.fisher.test.results <- fisher.test( SCRIMalderelliData.IS.proliferating.isCancer.Wang.fisher.table );
SCRIMalderelliData.IS.proliferating.isCancer.Wang.fisher.test.results.p.value <- prettyPrintPValuesTo4Digits( SCRIMalderelliData.IS.proliferating.isCancer.Wang.fisher.test.results$p.value, " = ", " < " );

SCRIMalderelliData.IS.nonproliferating.isCancer.Wang.fisher.table <- cbind(
    c( SCRIMalderelliData.num.IS.nonproliferating.isCancer, SCRIMalderelliData.num.IS.nonproliferating.NOTisCancer ),
    c( WangData.num.uniqueIS.isCancer, WangData.num.uniqueIS.NOTisCancer ) );
colnames( SCRIMalderelliData.IS.nonproliferating.isCancer.Wang.fisher.table ) <- c( "SCRIMalderelli", "Wang" );
rownames( SCRIMalderelliData.IS.nonproliferating.isCancer.Wang.fisher.table ) <- c( "isCancer", "NOTisCancer" );
SCRIMalderelliData.IS.nonproliferating.isCancer.Wang.fisher.test.results <- fisher.test( SCRIMalderelliData.IS.nonproliferating.isCancer.Wang.fisher.table );
SCRIMalderelliData.IS.nonproliferating.isCancer.Wang.fisher.test.results.p.value <- prettyPrintPValuesTo4Digits( SCRIMalderelliData.IS.nonproliferating.isCancer.Wang.fisher.test.results$p.value, " = ", " < " );
@ 

Figure~\ref{fig:SCRIMalderelliData.IS.p.value.isCancer} shows the significance of the enrichment of the isCancer feature among SCRIMalderelli ISs, by showing where the count of ISs with this feature falls in the null distribution that is obtained by independently drawing the appropriate number of ISs from the Wang data set. The probability of seeing such an extreme count statistic under the null hypothesis that the isCancer feature has the same abundance among SCRIMalderelli ISs as among Wang ISs is p\Sexpr{prettyPrintPValuesTo4Digits( SCRIMalderelliData.IS.p.values.by.feature[ "isCancer" ], " = ", "< " )}.

\begin{minipage}{\linewidth}
\centering
\par
\bigskip
\captionof{figure}{\bf SCRIMalderelli ISs vs Wang: isCancer} \label{fig:SCRIMalderelliData.IS.p.value.isCancer}
<<echo = FALSE, results = hide, fig = TRUE>>=
.feature <- "isCancer";
qplot(
    c( SCRIMalderelliData.IS.feature.nulls[[ "total" ]][ , .feature ] ),
    geom = "histogram",
    main = "Histogram of null counts", 
    xlab = "Counts of ISs in genes that are isCancer",  
    fill=I("blue"), 
    col=I("black"),
    alpha=I(.2) ) + aes( y = ..density.. ) + labs( y = "Density" ) + geom_vline( xintercept = SCRIMalderelliData.num.IS.by.feature[ .feature ], color = "red", linetype = "longdash" );
@ 
\par
\bigskip
SCRIMalderelli ISs vs Wang: isCancer \par
(p\Sexpr{prettyPrintPValuesTo4Digits( SCRIMalderelliData.IS.p.values.by.feature[ "isCancer" ], " = ", "< " )})
\par
\bigskip
\end{minipage}

Table~\ref{tab:SCRIMalderelliData.IS.isCancer.Wang.fisher} shows the comparison of isCancer between SCRIMalderelli (ISs) and Wang that conditions on both margins (Fisher's exact test p\Sexpr{SCRIMalderelliData.IS.isCancer.Wang.fisher.test.results.p.value}).

\begin{minipage}{\linewidth}
\centering
\par
\bigskip
\captionof{table}{\bf isCancer: SCRIMalderelli ISs vs Wang} \label{tab:SCRIMalderelliData.IS.isCancer.Wang.fisher}
<<echo = FALSE, results = tex>>=
print( xtable( SCRIMalderelliData.IS.isCancer.Wang.fisher.table, digits=2 ), floating = FALSE );
@ 
\par
\bigskip
isCancer: SCRIMalderelli ISs vs Wang (Fisher's exact test p\Sexpr{SCRIMalderelliData.IS.isCancer.Wang.fisher.test.results.p.value})
\par
\bigskip
\end{minipage}
%% isCancer 

 
%% isAnyCancer.GO 
<<echo = FALSE, results = hide>>=
SCRIMalderelliData.num.IS.isAnyCancer.GO <- 
    sum( SCRIMalderelliData[ SCRIMalderelliData$isAnyCancer.GO > 0, time.points ] );
SCRIMalderelliData.num.IS.NOTisAnyCancer.GO <- 
    sum( SCRIMalderelliData[ SCRIMalderelliData$isAnyCancer.GO == 0, time.points ] );

SCRIMalderelliData.IS.isAnyCancer.GO.Wang.fisher.table <- cbind(
    c( SCRIMalderelliData.num.IS.isAnyCancer.GO, SCRIMalderelliData.num.IS.NOTisAnyCancer.GO ),
    c( WangData.num.uniqueIS.isAnyCancer.GO, WangData.num.uniqueIS.NOTisAnyCancer.GO ) );
colnames( SCRIMalderelliData.IS.isAnyCancer.GO.Wang.fisher.table ) <- c( "SCRIMalderelli", "Wang" );
rownames( SCRIMalderelliData.IS.isAnyCancer.GO.Wang.fisher.table ) <- c( "isAnyCancer.GO", "NOTisAnyCancer.GO" );
SCRIMalderelliData.IS.isAnyCancer.GO.Wang.fisher.test.results <- fisher.test( SCRIMalderelliData.IS.isAnyCancer.GO.Wang.fisher.table );
SCRIMalderelliData.IS.isAnyCancer.GO.Wang.fisher.test.results.p.value <- prettyPrintPValuesTo4Digits( SCRIMalderelliData.IS.isAnyCancer.GO.Wang.fisher.test.results$p.value, " = ", " < " );

SCRIMalderelliData.num.IS.proliferating.isAnyCancer.GO <- 
    sum( SCRIMalderelliData[ ( SCRIMalderelliData$Proliferating > 0 ) & ( SCRIMalderelliData$isAnyCancer.GO > 0 ), time.points ] );
SCRIMalderelliData.num.IS.proliferating.NOTisAnyCancer.GO <- 
    sum( SCRIMalderelliData[ ( SCRIMalderelliData$Proliferating > 0 ) & ( SCRIMalderelliData$isAnyCancer.GO == 0 ), time.points ] );

SCRIMalderelliData.num.IS.nonproliferating.isAnyCancer.GO <- 
    sum( SCRIMalderelliData[ ( SCRIMalderelliData$Proliferating == 0 ) & ( SCRIMalderelliData$isAnyCancer.GO > 0 ), time.points ] );
SCRIMalderelliData.num.IS.nonproliferating.NOTisAnyCancer.GO <- 
    sum( SCRIMalderelliData[ ( SCRIMalderelliData$Proliferating == 0 ) & ( SCRIMalderelliData$isAnyCancer.GO == 0 ), time.points ] );

SCRIMalderelliData.IS.proliferating.isAnyCancer.GO.Wang.fisher.table <- cbind(
    c( SCRIMalderelliData.num.IS.proliferating.isAnyCancer.GO, SCRIMalderelliData.num.IS.proliferating.NOTisAnyCancer.GO ),
    c( WangData.num.uniqueIS.isAnyCancer.GO, WangData.num.uniqueIS.NOTisAnyCancer.GO ) );
colnames( SCRIMalderelliData.IS.proliferating.isAnyCancer.GO.Wang.fisher.table ) <- c( "SCRIMalderelli", "Wang" );
rownames( SCRIMalderelliData.IS.proliferating.isAnyCancer.GO.Wang.fisher.table ) <- c( "isAnyCancer.GO", "NOTisAnyCancer.GO" );
SCRIMalderelliData.IS.proliferating.isAnyCancer.GO.Wang.fisher.test.results <- fisher.test( SCRIMalderelliData.IS.proliferating.isAnyCancer.GO.Wang.fisher.table );
SCRIMalderelliData.IS.proliferating.isAnyCancer.GO.Wang.fisher.test.results.p.value <- prettyPrintPValuesTo4Digits( SCRIMalderelliData.IS.proliferating.isAnyCancer.GO.Wang.fisher.test.results$p.value, " = ", " < " );

SCRIMalderelliData.IS.nonproliferating.isAnyCancer.GO.Wang.fisher.table <- cbind(
    c( SCRIMalderelliData.num.IS.nonproliferating.isAnyCancer.GO, SCRIMalderelliData.num.IS.nonproliferating.NOTisAnyCancer.GO ),
    c( WangData.num.uniqueIS.isAnyCancer.GO, WangData.num.uniqueIS.NOTisAnyCancer.GO ) );
colnames( SCRIMalderelliData.IS.nonproliferating.isAnyCancer.GO.Wang.fisher.table ) <- c( "SCRIMalderelli", "Wang" );
rownames( SCRIMalderelliData.IS.nonproliferating.isAnyCancer.GO.Wang.fisher.table ) <- c( "isAnyCancer.GO", "NOTisAnyCancer.GO" );
SCRIMalderelliData.IS.nonproliferating.isAnyCancer.GO.Wang.fisher.test.results <- fisher.test( SCRIMalderelliData.IS.nonproliferating.isAnyCancer.GO.Wang.fisher.table );
SCRIMalderelliData.IS.nonproliferating.isAnyCancer.GO.Wang.fisher.test.results.p.value <- prettyPrintPValuesTo4Digits( SCRIMalderelliData.IS.nonproliferating.isAnyCancer.GO.Wang.fisher.test.results$p.value, " = ", " < " );
@ 

Figure~\ref{fig:SCRIMalderelliData.IS.p.value.isAnyCancer.GO} shows the significance of the enrichment of the isAnyCancer.GO feature among SCRIMalderelli ISs, by showing where the count of ISs with this feature falls in the null distribution that is obtained by independently drawing the appropriate number of ISs from the Wang data set. The probability of seeing such an extreme count statistic under the null hypothesis that the isAnyCancer.GO feature has the same abundance among SCRIMalderelli ISs as among Wang ISs is p\Sexpr{prettyPrintPValuesTo4Digits( SCRIMalderelliData.IS.p.values.by.feature[ "isAnyCancer.GO" ], " = ", "< " )}.

\begin{minipage}{\linewidth}
\centering
\par
\bigskip
\captionof{figure}{\bf SCRIMalderelli ISs vs Wang: isAnyCancer.GO} \label{fig:SCRIMalderelliData.IS.p.value.isAnyCancer.GO}
<<echo = FALSE, results = hide, fig = TRUE>>=
.feature <- "isAnyCancer.GO";
qplot(
    c( SCRIMalderelliData.IS.feature.nulls[[ "total" ]][ , .feature ] ),
    geom = "histogram",
    main = "Histogram of null counts", 
    xlab = "Counts of ISs in genes that are isAnyCancer.GO",  
    fill=I("blue"), 
    col=I("black"),
    alpha=I(.2) ) + aes( y = ..density.. ) + labs( y = "Density" ) + geom_vline( xintercept = SCRIMalderelliData.num.IS.by.feature[ .feature ], color = "red", linetype = "longdash" );
@ 
\par
\bigskip
SCRIMalderelli ISs vs Wang: isAnyCancer.GO \par
(p\Sexpr{prettyPrintPValuesTo4Digits( SCRIMalderelliData.IS.p.values.by.feature[ "isAnyCancer.GO" ], " = ", "< " )})
\par
\bigskip
\end{minipage}

Table~\ref{tab:SCRIMalderelliData.IS.isAnyCancer.GO.Wang.fisher} shows the comparison of isAnyCancer.GO between SCRIMalderelli (ISs) and Wang that conditions on both margins (Fisher's exact test p\Sexpr{SCRIMalderelliData.IS.isAnyCancer.GO.Wang.fisher.test.results.p.value}).

\begin{minipage}{\linewidth}
\centering
\par
\bigskip
\captionof{table}{\bf isAnyCancer.GO: SCRIMalderelli ISs vs Wang} \label{tab:SCRIMalderelliData.IS.isAnyCancer.GO.Wang.fisher}
<<echo = FALSE, results = tex>>=
print( xtable( SCRIMalderelliData.IS.isAnyCancer.GO.Wang.fisher.table, digits=2 ), floating = FALSE );
@ 
\par
\bigskip
isAnyCancer.GO: SCRIMalderelli ISs vs Wang (Fisher's exact test p\Sexpr{SCRIMalderelliData.IS.isAnyCancer.GO.Wang.fisher.test.results.p.value})
\par
\bigskip
\end{minipage}

\begin{minipage}{\linewidth}
\centering
\par
\bigskip
\captionof{table}{\bf SCRIMalderelli ISs vs Wang: Holm-adjusted p-values of primary Tenofovir features} \label{tab:SCRIMalderelliData.IS.p.values.by.feature.adjusted.primaryFeatures.Tenofovir}
<<echo = FALSE, results = tex>>=
.tab <- as.matrix( SCRIMalderelliData.IS.p.values.by.feature.adjusted[ primaryFeatures.Tenofovir ] );
colnames( .tab ) <- "Holm-adjusted p-value";
print( xtable( .tab, digits=4 ), floating = FALSE );
@ 
\par
\bigskip
SCRIMalderelli ISs vs Wang: Holm-adjusted p-values of primary Tenofovir features.
\par
\bigskip
\end{minipage}
 
%% isDownregulatedByTenofovir.Rectal 
<<echo = FALSE, results = hide>>=
SCRIMalderelliData.num.IS.isDownregulatedByTenofovir.Rectal <- 
    sum( SCRIMalderelliData[ !is.na( SCRIMalderelliData$isDownregulatedByTenofovir.Rectal ) & SCRIMalderelliData$isDownregulatedByTenofovir.Rectal > 0, time.points ] );
SCRIMalderelliData.num.IS.NOTisDownregulatedByTenofovir.Rectal <- 
    sum( SCRIMalderelliData[ !is.na( SCRIMalderelliData$isDownregulatedByTenofovir.Rectal ) & SCRIMalderelliData$isDownregulatedByTenofovir.Rectal == 0, time.points ] );

SCRIMalderelliData.IS.isDownregulatedByTenofovir.Rectal.Wang.fisher.table <- cbind(
    c( SCRIMalderelliData.num.IS.isDownregulatedByTenofovir.Rectal, SCRIMalderelliData.num.IS.NOTisDownregulatedByTenofovir.Rectal ),
    c( WangData.num.uniqueIS.isDownregulatedByTenofovir.Rectal, WangData.num.uniqueIS.NOTisDownregulatedByTenofovir.Rectal ) );
colnames( SCRIMalderelliData.IS.isDownregulatedByTenofovir.Rectal.Wang.fisher.table ) <- c( "SCRIMalderelli", "Wang" );
rownames( SCRIMalderelliData.IS.isDownregulatedByTenofovir.Rectal.Wang.fisher.table ) <- c( "isDownregulatedByTenofovir.Rectal", "NOTisDownregulatedByTenofovir.Rectal" );
SCRIMalderelliData.IS.isDownregulatedByTenofovir.Rectal.Wang.fisher.test.results <- fisher.test( SCRIMalderelliData.IS.isDownregulatedByTenofovir.Rectal.Wang.fisher.table );
SCRIMalderelliData.IS.isDownregulatedByTenofovir.Rectal.Wang.fisher.test.results.p.value <- prettyPrintPValuesTo4Digits( SCRIMalderelliData.IS.isDownregulatedByTenofovir.Rectal.Wang.fisher.test.results$p.value, " = ", " < " );

SCRIMalderelliData.num.IS.proliferating.isDownregulatedByTenofovir.Rectal <- 
    sum( SCRIMalderelliData[ ( SCRIMalderelliData$Proliferating > 0 ) & !is.na( SCRIMalderelliData$isDownregulatedByTenofovir.Rectal ) & ( SCRIMalderelliData$isDownregulatedByTenofovir.Rectal > 0 ), time.points ] );
SCRIMalderelliData.num.IS.proliferating.NOTisDownregulatedByTenofovir.Rectal <- 
    sum( SCRIMalderelliData[ ( SCRIMalderelliData$Proliferating > 0 ) & !is.na( SCRIMalderelliData$isDownregulatedByTenofovir.Rectal ) & ( SCRIMalderelliData$isDownregulatedByTenofovir.Rectal == 0 ), time.points ] );

SCRIMalderelliData.num.IS.nonproliferating.isDownregulatedByTenofovir.Rectal <- 
    sum( SCRIMalderelliData[ ( SCRIMalderelliData$Proliferating == 0 ) & !is.na( SCRIMalderelliData$isDownregulatedByTenofovir.Rectal ) & ( SCRIMalderelliData$isDownregulatedByTenofovir.Rectal > 0 ), time.points ] );
SCRIMalderelliData.num.IS.nonproliferating.NOTisDownregulatedByTenofovir.Rectal <- 
    sum( SCRIMalderelliData[ ( SCRIMalderelliData$Proliferating == 0 ) & !is.na( SCRIMalderelliData$isDownregulatedByTenofovir.Rectal ) & ( SCRIMalderelliData$isDownregulatedByTenofovir.Rectal == 0 ), time.points ] );

SCRIMalderelliData.IS.proliferating.isDownregulatedByTenofovir.Rectal.Wang.fisher.table <- cbind(
    c( SCRIMalderelliData.num.IS.proliferating.isDownregulatedByTenofovir.Rectal, SCRIMalderelliData.num.IS.proliferating.NOTisDownregulatedByTenofovir.Rectal ),
    c( WangData.num.uniqueIS.isDownregulatedByTenofovir.Rectal, WangData.num.uniqueIS.NOTisDownregulatedByTenofovir.Rectal ) );
colnames( SCRIMalderelliData.IS.proliferating.isDownregulatedByTenofovir.Rectal.Wang.fisher.table ) <- c( "SCRIMalderelli", "Wang" );
rownames( SCRIMalderelliData.IS.proliferating.isDownregulatedByTenofovir.Rectal.Wang.fisher.table ) <- c( "isDownregulatedByTenofovir.Rectal", "NOTisDownregulatedByTenofovir.Rectal" );
SCRIMalderelliData.IS.proliferating.isDownregulatedByTenofovir.Rectal.Wang.fisher.test.results <- fisher.test( SCRIMalderelliData.IS.proliferating.isDownregulatedByTenofovir.Rectal.Wang.fisher.table );
SCRIMalderelliData.IS.proliferating.isDownregulatedByTenofovir.Rectal.Wang.fisher.test.results.p.value <- prettyPrintPValuesTo4Digits( SCRIMalderelliData.IS.proliferating.isDownregulatedByTenofovir.Rectal.Wang.fisher.test.results$p.value, " = ", " < " );

SCRIMalderelliData.IS.nonproliferating.isDownregulatedByTenofovir.Rectal.Wang.fisher.table <- cbind(
    c( SCRIMalderelliData.num.IS.nonproliferating.isDownregulatedByTenofovir.Rectal, SCRIMalderelliData.num.IS.nonproliferating.NOTisDownregulatedByTenofovir.Rectal ),
    c( WangData.num.uniqueIS.isDownregulatedByTenofovir.Rectal, WangData.num.uniqueIS.NOTisDownregulatedByTenofovir.Rectal ) );
colnames( SCRIMalderelliData.IS.nonproliferating.isDownregulatedByTenofovir.Rectal.Wang.fisher.table ) <- c( "SCRIMalderelli", "Wang" );
rownames( SCRIMalderelliData.IS.nonproliferating.isDownregulatedByTenofovir.Rectal.Wang.fisher.table ) <- c( "isDownregulatedByTenofovir.Rectal", "NOTisDownregulatedByTenofovir.Rectal" );
SCRIMalderelliData.IS.nonproliferating.isDownregulatedByTenofovir.Rectal.Wang.fisher.test.results <- fisher.test( SCRIMalderelliData.IS.nonproliferating.isDownregulatedByTenofovir.Rectal.Wang.fisher.table );
SCRIMalderelliData.IS.nonproliferating.isDownregulatedByTenofovir.Rectal.Wang.fisher.test.results.p.value <- prettyPrintPValuesTo4Digits( SCRIMalderelliData.IS.nonproliferating.isDownregulatedByTenofovir.Rectal.Wang.fisher.test.results$p.value, " = ", " < " );
@ 

Figure~\ref{fig:SCRIMalderelliData.IS.p.value.isDownregulatedByTenofovir.Rectal} shows the significance of the enrichment of the isDownregulatedByTenofovir.Rectal feature among SCRIMalderelli ISs, by showing where the count of ISs with this feature falls in the null distribution that is obtained by independently drawing the appropriate number of ISs from the Wang data set. The probability of seeing such an extreme count statistic under the null hypothesis that the isDownregulatedByTenofovir.Rectal feature has the same abundance among SCRIMalderelli ISs as among Wang ISs is p\Sexpr{prettyPrintPValuesTo4Digits( SCRIMalderelliData.IS.p.values.by.feature[ "isDownregulatedByTenofovir.Rectal" ], " = ", "< " )}.

\begin{minipage}{\linewidth}
\centering
\par
\bigskip
\captionof{figure}{\bf SCRIMalderelli ISs vs Wang: isDownregulatedByTenofovir.Rectal} \label{fig:SCRIMalderelliData.IS.p.value.isDownregulatedByTenofovir.Rectal}
<<echo = FALSE, results = hide, fig = TRUE>>=
.feature <- "isDownregulatedByTenofovir.Rectal";
qplot(
    c( SCRIMalderelliData.IS.feature.nulls[[ "total" ]][ , .feature ] ),
    geom = "histogram",
    main = "Histogram of null counts", 
    xlab = "Counts of ISs in genes that are isDownregulatedByTenofovir.Rectal",  
    fill=I("blue"), 
    col=I("black"),
    alpha=I(.2) ) + aes( y = ..density.. ) + labs( y = "Density" ) + geom_vline( xintercept = SCRIMalderelliData.num.IS.by.feature[ .feature ], color = "red", linetype = "longdash" );
@ 
\par
\bigskip
SCRIMalderelli ISs vs Wang: isDownregulatedByTenofovir.Rectal \par
(p\Sexpr{prettyPrintPValuesTo4Digits( SCRIMalderelliData.IS.p.values.by.feature[ "isDownregulatedByTenofovir.Rectal" ], " = ", "< " )})
\par
\bigskip
\end{minipage}

Table~\ref{tab:SCRIMalderelliData.IS.isDownregulatedByTenofovir.Rectal.Wang.fisher} shows the comparison of isDownregulatedByTenofovir.Rectal between SCRIMalderelli (ISs) and Wang that conditions on both margins (Fisher's exact test p\Sexpr{SCRIMalderelliData.IS.isDownregulatedByTenofovir.Rectal.Wang.fisher.test.results.p.value}).

\begin{minipage}{\linewidth}
\centering
\par
\bigskip
\captionof{table}{\bf isDownregulatedByTenofovir.Rectal: SCRIMalderelli ISs vs Wang} \label{tab:SCRIMalderelliData.IS.isDownregulatedByTenofovir.Rectal.Wang.fisher}
<<echo = FALSE, results = tex>>=
print( xtable( SCRIMalderelliData.IS.isDownregulatedByTenofovir.Rectal.Wang.fisher.table, digits=2 ), floating = FALSE );
@ 
\par
\bigskip
isDownregulatedByTenofovir.Rectal: SCRIMalderelli ISs vs Wang (Fisher's exact test p\Sexpr{SCRIMalderelliData.IS.isDownregulatedByTenofovir.Rectal.Wang.fisher.test.results.p.value})
\par
\bigskip
\end{minipage}

%% isUpregulatedByTenofovir.Rectal 
<<echo = FALSE, results = hide>>=
SCRIMalderelliData.num.IS.isUpregulatedByTenofovir.Rectal <- 
    sum( SCRIMalderelliData[ !is.na( SCRIMalderelliData$isUpregulatedByTenofovir.Rectal ) & SCRIMalderelliData$isUpregulatedByTenofovir.Rectal > 0, time.points ] );
SCRIMalderelliData.num.IS.NOTisUpregulatedByTenofovir.Rectal <- 
    sum( SCRIMalderelliData[ !is.na( SCRIMalderelliData$isUpregulatedByTenofovir.Rectal ) & SCRIMalderelliData$isUpregulatedByTenofovir.Rectal == 0, time.points ] );

SCRIMalderelliData.IS.isUpregulatedByTenofovir.Rectal.Wang.fisher.table <- cbind(
    c( SCRIMalderelliData.num.IS.isUpregulatedByTenofovir.Rectal, SCRIMalderelliData.num.IS.NOTisUpregulatedByTenofovir.Rectal ),
    c( WangData.num.uniqueIS.isUpregulatedByTenofovir.Rectal, WangData.num.uniqueIS.NOTisUpregulatedByTenofovir.Rectal ) );
colnames( SCRIMalderelliData.IS.isUpregulatedByTenofovir.Rectal.Wang.fisher.table ) <- c( "SCRIMalderelli", "Wang" );
rownames( SCRIMalderelliData.IS.isUpregulatedByTenofovir.Rectal.Wang.fisher.table ) <- c( "isUpregulatedByTenofovir.Rectal", "NOTisUpregulatedByTenofovir.Rectal" );
SCRIMalderelliData.IS.isUpregulatedByTenofovir.Rectal.Wang.fisher.test.results <- fisher.test( SCRIMalderelliData.IS.isUpregulatedByTenofovir.Rectal.Wang.fisher.table );
SCRIMalderelliData.IS.isUpregulatedByTenofovir.Rectal.Wang.fisher.test.results.p.value <- prettyPrintPValuesTo4Digits( SCRIMalderelliData.IS.isUpregulatedByTenofovir.Rectal.Wang.fisher.test.results$p.value, " = ", " < " );

SCRIMalderelliData.num.IS.proliferating.isUpregulatedByTenofovir.Rectal <- 
    sum( SCRIMalderelliData[ ( SCRIMalderelliData$Proliferating > 0 ) & !is.na( SCRIMalderelliData$isUpregulatedByTenofovir.Rectal ) & ( SCRIMalderelliData$isUpregulatedByTenofovir.Rectal > 0 ), time.points ] );
SCRIMalderelliData.num.IS.proliferating.NOTisUpregulatedByTenofovir.Rectal <- 
    sum( SCRIMalderelliData[ ( SCRIMalderelliData$Proliferating > 0 ) & !is.na( SCRIMalderelliData$isUpregulatedByTenofovir.Rectal ) & ( SCRIMalderelliData$isUpregulatedByTenofovir.Rectal == 0 ), time.points ] );

SCRIMalderelliData.num.IS.nonproliferating.isUpregulatedByTenofovir.Rectal <- 
    sum( SCRIMalderelliData[ ( SCRIMalderelliData$Proliferating == 0 ) & !is.na( SCRIMalderelliData$isUpregulatedByTenofovir.Rectal ) & ( SCRIMalderelliData$isUpregulatedByTenofovir.Rectal > 0 ), time.points ] );
SCRIMalderelliData.num.IS.nonproliferating.NOTisUpregulatedByTenofovir.Rectal <- 
    sum( SCRIMalderelliData[ ( SCRIMalderelliData$Proliferating == 0 ) & !is.na( SCRIMalderelliData$isUpregulatedByTenofovir.Rectal ) & ( SCRIMalderelliData$isUpregulatedByTenofovir.Rectal == 0 ), time.points ] );

SCRIMalderelliData.IS.proliferating.isUpregulatedByTenofovir.Rectal.Wang.fisher.table <- cbind(
    c( SCRIMalderelliData.num.IS.proliferating.isUpregulatedByTenofovir.Rectal, SCRIMalderelliData.num.IS.proliferating.NOTisUpregulatedByTenofovir.Rectal ),
    c( WangData.num.uniqueIS.isUpregulatedByTenofovir.Rectal, WangData.num.uniqueIS.NOTisUpregulatedByTenofovir.Rectal ) );
colnames( SCRIMalderelliData.IS.proliferating.isUpregulatedByTenofovir.Rectal.Wang.fisher.table ) <- c( "SCRIMalderelli", "Wang" );
rownames( SCRIMalderelliData.IS.proliferating.isUpregulatedByTenofovir.Rectal.Wang.fisher.table ) <- c( "isUpregulatedByTenofovir.Rectal", "NOTisUpregulatedByTenofovir.Rectal" );
SCRIMalderelliData.IS.proliferating.isUpregulatedByTenofovir.Rectal.Wang.fisher.test.results <- fisher.test( SCRIMalderelliData.IS.proliferating.isUpregulatedByTenofovir.Rectal.Wang.fisher.table );
SCRIMalderelliData.IS.proliferating.isUpregulatedByTenofovir.Rectal.Wang.fisher.test.results.p.value <- prettyPrintPValuesTo4Digits( SCRIMalderelliData.IS.proliferating.isUpregulatedByTenofovir.Rectal.Wang.fisher.test.results$p.value, " = ", " < " );

SCRIMalderelliData.IS.nonproliferating.isUpregulatedByTenofovir.Rectal.Wang.fisher.table <- cbind(
    c( SCRIMalderelliData.num.IS.nonproliferating.isUpregulatedByTenofovir.Rectal, SCRIMalderelliData.num.IS.nonproliferating.NOTisUpregulatedByTenofovir.Rectal ),
    c( WangData.num.uniqueIS.isUpregulatedByTenofovir.Rectal, WangData.num.uniqueIS.NOTisUpregulatedByTenofovir.Rectal ) );
colnames( SCRIMalderelliData.IS.nonproliferating.isUpregulatedByTenofovir.Rectal.Wang.fisher.table ) <- c( "SCRIMalderelli", "Wang" );
rownames( SCRIMalderelliData.IS.nonproliferating.isUpregulatedByTenofovir.Rectal.Wang.fisher.table ) <- c( "isUpregulatedByTenofovir.Rectal", "NOTisUpregulatedByTenofovir.Rectal" );
SCRIMalderelliData.IS.nonproliferating.isUpregulatedByTenofovir.Rectal.Wang.fisher.test.results <- fisher.test( SCRIMalderelliData.IS.nonproliferating.isUpregulatedByTenofovir.Rectal.Wang.fisher.table );
SCRIMalderelliData.IS.nonproliferating.isUpregulatedByTenofovir.Rectal.Wang.fisher.test.results.p.value <- prettyPrintPValuesTo4Digits( SCRIMalderelliData.IS.nonproliferating.isUpregulatedByTenofovir.Rectal.Wang.fisher.test.results$p.value, " = ", " < " );
@ 

Figure~\ref{fig:SCRIMalderelliData.IS.p.value.isUpregulatedByTenofovir.Rectal} shows the significance of the enrichment of the isUpregulatedByTenofovir.Rectal feature among SCRIMalderelli ISs, by showing where the count of ISs with this feature falls in the null distribution that is obtained by independently drawing the appropriate number of ISs from the Wang data set. The probability of seeing such an extreme count statistic under the null hypothesis that the isUpregulatedByTenofovir.Rectal feature has the same abundance among SCRIMalderelli ISs as among Wang ISs is p\Sexpr{prettyPrintPValuesTo4Digits( SCRIMalderelliData.IS.p.values.by.feature[ "isUpregulatedByTenofovir.Rectal" ], " = ", "< " )}.

\begin{minipage}{\linewidth}
\centering
\par
\bigskip
\captionof{figure}{\bf SCRIMalderelli ISs vs Wang: isUpregulatedByTenofovir.Rectal} \label{fig:SCRIMalderelliData.IS.p.value.isUpregulatedByTenofovir.Rectal}
<<echo = FALSE, results = hide, fig = TRUE>>=
.feature <- "isUpregulatedByTenofovir.Rectal";
qplot(
    c( SCRIMalderelliData.IS.feature.nulls[[ "total" ]][ , .feature ] ),
    geom = "histogram",
    main = "Histogram of null counts", 
    xlab = "Counts of ISs in genes that are isUpregulatedByTenofovir.Rectal",  
    fill=I("blue"), 
    col=I("black"),
    alpha=I(.2) ) + aes( y = ..density.. ) + labs( y = "Density" ) + geom_vline( xintercept = SCRIMalderelliData.num.IS.by.feature[ .feature ], color = "red", linetype = "longdash" );
@ 
\par
\bigskip
SCRIMalderelli ISs vs Wang: isUpregulatedByTenofovir.Rectal \par
(p\Sexpr{prettyPrintPValuesTo4Digits( SCRIMalderelliData.IS.p.values.by.feature[ "isUpregulatedByTenofovir.Rectal" ], " = ", "< " )})
\par
\bigskip
\end{minipage}

Table~\ref{tab:SCRIMalderelliData.IS.isUpregulatedByTenofovir.Rectal.Wang.fisher} shows the comparison of isUpregulatedByTenofovir.Rectal between SCRIMalderelli (ISs) and Wang that conditions on both margins (Fisher's exact test p\Sexpr{SCRIMalderelliData.IS.isUpregulatedByTenofovir.Rectal.Wang.fisher.test.results.p.value}).

\begin{minipage}{\linewidth}
\centering
\par
\bigskip
\captionof{table}{\bf isUpregulatedByTenofovir.Rectal: SCRIMalderelli ISs vs Wang} \label{tab:SCRIMalderelliData.IS.isUpregulatedByTenofovir.Rectal.Wang.fisher}
<<echo = FALSE, results = tex>>=
print( xtable( SCRIMalderelliData.IS.isUpregulatedByTenofovir.Rectal.Wang.fisher.table, digits=2 ), floating = FALSE );
@ 
\par
\bigskip
isUpregulatedByTenofovir.Rectal: SCRIMalderelli ISs vs Wang (Fisher's exact test p\Sexpr{SCRIMalderelliData.IS.isUpregulatedByTenofovir.Rectal.Wang.fisher.test.results.p.value})
\par
\bigskip
\end{minipage}

%% mark
%% isDownregulatedByTenofovir.exvivo 
<<echo = FALSE, results = hide>>=
SCRIMalderelliData.num.IS.isDownregulatedByTenofovir.exvivo <- 
    sum( SCRIMalderelliData[ !is.na( SCRIMalderelliData$isDownregulatedByTenofovir.exvivo ) & SCRIMalderelliData$isDownregulatedByTenofovir.exvivo > 0, time.points ] );
SCRIMalderelliData.num.IS.NOTisDownregulatedByTenofovir.exvivo <- 
    sum( SCRIMalderelliData[ !is.na( SCRIMalderelliData$isDownregulatedByTenofovir.exvivo ) & SCRIMalderelliData$isDownregulatedByTenofovir.exvivo == 0, time.points ] );

SCRIMalderelliData.IS.isDownregulatedByTenofovir.exvivo.Wang.fisher.table <- cbind(
    c( SCRIMalderelliData.num.IS.isDownregulatedByTenofovir.exvivo, SCRIMalderelliData.num.IS.NOTisDownregulatedByTenofovir.exvivo ),
    c( WangData.num.uniqueIS.isDownregulatedByTenofovir.exvivo, WangData.num.uniqueIS.NOTisDownregulatedByTenofovir.exvivo ) );
colnames( SCRIMalderelliData.IS.isDownregulatedByTenofovir.exvivo.Wang.fisher.table ) <- c( "SCRIMalderelli", "Wang" );
rownames( SCRIMalderelliData.IS.isDownregulatedByTenofovir.exvivo.Wang.fisher.table ) <- c( "isDownregulatedByTenofovir.exvivo", "NOTisDownregulatedByTenofovir.exvivo" );
SCRIMalderelliData.IS.isDownregulatedByTenofovir.exvivo.Wang.fisher.test.results <- fisher.test( SCRIMalderelliData.IS.isDownregulatedByTenofovir.exvivo.Wang.fisher.table );
SCRIMalderelliData.IS.isDownregulatedByTenofovir.exvivo.Wang.fisher.test.results.p.value <- prettyPrintPValuesTo4Digits( SCRIMalderelliData.IS.isDownregulatedByTenofovir.exvivo.Wang.fisher.test.results$p.value, " = ", " < " );

SCRIMalderelliData.num.IS.proliferating.isDownregulatedByTenofovir.exvivo <- 
    sum( SCRIMalderelliData[ ( SCRIMalderelliData$Proliferating > 0 ) & !is.na( SCRIMalderelliData$isDownregulatedByTenofovir.exvivo ) & ( SCRIMalderelliData$isDownregulatedByTenofovir.exvivo > 0 ), time.points ] );
SCRIMalderelliData.num.IS.proliferating.NOTisDownregulatedByTenofovir.exvivo <- 
    sum( SCRIMalderelliData[ ( SCRIMalderelliData$Proliferating > 0 ) & !is.na( SCRIMalderelliData$isDownregulatedByTenofovir.exvivo ) & ( SCRIMalderelliData$isDownregulatedByTenofovir.exvivo == 0 ), time.points ] );

SCRIMalderelliData.num.IS.nonproliferating.isDownregulatedByTenofovir.exvivo <- 
    sum( SCRIMalderelliData[ ( SCRIMalderelliData$Proliferating == 0 ) & !is.na( SCRIMalderelliData$isDownregulatedByTenofovir.exvivo ) & ( SCRIMalderelliData$isDownregulatedByTenofovir.exvivo > 0 ), time.points ] );
SCRIMalderelliData.num.IS.nonproliferating.NOTisDownregulatedByTenofovir.exvivo <- 
    sum( SCRIMalderelliData[ ( SCRIMalderelliData$Proliferating == 0 ) & !is.na( SCRIMalderelliData$isDownregulatedByTenofovir.exvivo ) & ( SCRIMalderelliData$isDownregulatedByTenofovir.exvivo == 0 ), time.points ] );

SCRIMalderelliData.IS.proliferating.isDownregulatedByTenofovir.exvivo.Wang.fisher.table <- cbind(
    c( SCRIMalderelliData.num.IS.proliferating.isDownregulatedByTenofovir.exvivo, SCRIMalderelliData.num.IS.proliferating.NOTisDownregulatedByTenofovir.exvivo ),
    c( WangData.num.uniqueIS.isDownregulatedByTenofovir.exvivo, WangData.num.uniqueIS.NOTisDownregulatedByTenofovir.exvivo ) );
colnames( SCRIMalderelliData.IS.proliferating.isDownregulatedByTenofovir.exvivo.Wang.fisher.table ) <- c( "SCRIMalderelli", "Wang" );
rownames( SCRIMalderelliData.IS.proliferating.isDownregulatedByTenofovir.exvivo.Wang.fisher.table ) <- c( "isDownregulatedByTenofovir.exvivo", "NOTisDownregulatedByTenofovir.exvivo" );
SCRIMalderelliData.IS.proliferating.isDownregulatedByTenofovir.exvivo.Wang.fisher.test.results <- fisher.test( SCRIMalderelliData.IS.proliferating.isDownregulatedByTenofovir.exvivo.Wang.fisher.table );
SCRIMalderelliData.IS.proliferating.isDownregulatedByTenofovir.exvivo.Wang.fisher.test.results.p.value <- prettyPrintPValuesTo4Digits( SCRIMalderelliData.IS.proliferating.isDownregulatedByTenofovir.exvivo.Wang.fisher.test.results$p.value, " = ", " < " );

SCRIMalderelliData.IS.nonproliferating.isDownregulatedByTenofovir.exvivo.Wang.fisher.table <- cbind(
    c( SCRIMalderelliData.num.IS.nonproliferating.isDownregulatedByTenofovir.exvivo, SCRIMalderelliData.num.IS.nonproliferating.NOTisDownregulatedByTenofovir.exvivo ),
    c( WangData.num.uniqueIS.isDownregulatedByTenofovir.exvivo, WangData.num.uniqueIS.NOTisDownregulatedByTenofovir.exvivo ) );
colnames( SCRIMalderelliData.IS.nonproliferating.isDownregulatedByTenofovir.exvivo.Wang.fisher.table ) <- c( "SCRIMalderelli", "Wang" );
rownames( SCRIMalderelliData.IS.nonproliferating.isDownregulatedByTenofovir.exvivo.Wang.fisher.table ) <- c( "isDownregulatedByTenofovir.exvivo", "NOTisDownregulatedByTenofovir.exvivo" );
SCRIMalderelliData.IS.nonproliferating.isDownregulatedByTenofovir.exvivo.Wang.fisher.test.results <- fisher.test( SCRIMalderelliData.IS.nonproliferating.isDownregulatedByTenofovir.exvivo.Wang.fisher.table );
SCRIMalderelliData.IS.nonproliferating.isDownregulatedByTenofovir.exvivo.Wang.fisher.test.results.p.value <- prettyPrintPValuesTo4Digits( SCRIMalderelliData.IS.nonproliferating.isDownregulatedByTenofovir.exvivo.Wang.fisher.test.results$p.value, " = ", " < " );
@ 

Figure~\ref{fig:SCRIMalderelliData.IS.p.value.isDownregulatedByTenofovir.exvivo} shows the significance of the enrichment of the isDownregulatedByTenofovir.exvivo feature among SCRIMalderelli ISs, by showing where the count of ISs with this feature falls in the null distribution that is obtained by independently drawing the appropriate number of ISs from the Wang data set. The probability of seeing such an extreme count statistic under the null hypothesis that the isDownregulatedByTenofovir.exvivo feature has the same abundance among SCRIMalderelli ISs as among Wang ISs is p\Sexpr{prettyPrintPValuesTo4Digits( SCRIMalderelliData.IS.p.values.by.feature[ "isDownregulatedByTenofovir.exvivo" ], " = ", "< " )}.

\begin{minipage}{\linewidth}
\centering
\par
\bigskip
\captionof{figure}{\bf SCRIMalderelli ISs vs Wang: isDownregulatedByTenofovir.exvivo} \label{fig:SCRIMalderelliData.IS.p.value.isDownregulatedByTenofovir.exvivo}
<<echo = FALSE, results = hide, fig = TRUE>>=
.feature <- "isDownregulatedByTenofovir.exvivo";
qplot(
    c( SCRIMalderelliData.IS.feature.nulls[[ "total" ]][ , .feature ] ),
    geom = "histogram",
    main = "Histogram of null counts", 
    xlab = "Counts of ISs in genes that are isDownregulatedByTenofovir.exvivo",  
    fill=I("blue"), 
    col=I("black"),
    alpha=I(.2) ) + aes( y = ..density.. ) + labs( y = "Density" ) + geom_vline( xintercept = SCRIMalderelliData.num.IS.by.feature[ .feature ], color = "red", linetype = "longdash" );
@ 
\par
\bigskip
SCRIMalderelli ISs vs Wang: isDownregulatedByTenofovir.exvivo \par
(p\Sexpr{prettyPrintPValuesTo4Digits( SCRIMalderelliData.IS.p.values.by.feature[ "isDownregulatedByTenofovir.exvivo" ], " = ", "< " )})
\par
\bigskip
\end{minipage}

Table~\ref{tab:SCRIMalderelliData.IS.isDownregulatedByTenofovir.exvivo.Wang.fisher} shows the comparison of isDownregulatedByTenofovir.exvivo between SCRIMalderelli (ISs) and Wang that conditions on both margins (Fisher's exact test p\Sexpr{SCRIMalderelliData.IS.isDownregulatedByTenofovir.exvivo.Wang.fisher.test.results.p.value}).

\begin{minipage}{\linewidth}
\centering
\par
\bigskip
\captionof{table}{\bf isDownregulatedByTenofovir.exvivo: SCRIMalderelli ISs vs Wang} \label{tab:SCRIMalderelliData.IS.isDownregulatedByTenofovir.exvivo.Wang.fisher}
<<echo = FALSE, results = tex>>=
print( xtable( SCRIMalderelliData.IS.isDownregulatedByTenofovir.exvivo.Wang.fisher.table, digits=2 ), floating = FALSE );
@ 
\par
\bigskip
isDownregulatedByTenofovir.exvivo: SCRIMalderelli ISs vs Wang (Fisher's exact test p\Sexpr{SCRIMalderelliData.IS.isDownregulatedByTenofovir.exvivo.Wang.fisher.test.results.p.value})
\par
\bigskip
\end{minipage}

%% isUpregulatedByTenofovir.exvivo 
<<echo = FALSE, results = hide>>=
SCRIMalderelliData.num.IS.isUpregulatedByTenofovir.exvivo <- 
    sum( SCRIMalderelliData[ !is.na( SCRIMalderelliData$isUpregulatedByTenofovir.exvivo ) & SCRIMalderelliData$isUpregulatedByTenofovir.exvivo > 0, time.points ] );
SCRIMalderelliData.num.IS.NOTisUpregulatedByTenofovir.exvivo <- 
    sum( SCRIMalderelliData[ !is.na( SCRIMalderelliData$isUpregulatedByTenofovir.exvivo ) & SCRIMalderelliData$isUpregulatedByTenofovir.exvivo == 0, time.points ] );

SCRIMalderelliData.IS.isUpregulatedByTenofovir.exvivo.Wang.fisher.table <- cbind(
    c( SCRIMalderelliData.num.IS.isUpregulatedByTenofovir.exvivo, SCRIMalderelliData.num.IS.NOTisUpregulatedByTenofovir.exvivo ),
    c( WangData.num.uniqueIS.isUpregulatedByTenofovir.exvivo, WangData.num.uniqueIS.NOTisUpregulatedByTenofovir.exvivo ) );
colnames( SCRIMalderelliData.IS.isUpregulatedByTenofovir.exvivo.Wang.fisher.table ) <- c( "SCRIMalderelli", "Wang" );
rownames( SCRIMalderelliData.IS.isUpregulatedByTenofovir.exvivo.Wang.fisher.table ) <- c( "isUpregulatedByTenofovir.exvivo", "NOTisUpregulatedByTenofovir.exvivo" );
SCRIMalderelliData.IS.isUpregulatedByTenofovir.exvivo.Wang.fisher.test.results <- fisher.test( SCRIMalderelliData.IS.isUpregulatedByTenofovir.exvivo.Wang.fisher.table );
SCRIMalderelliData.IS.isUpregulatedByTenofovir.exvivo.Wang.fisher.test.results.p.value <- prettyPrintPValuesTo4Digits( SCRIMalderelliData.IS.isUpregulatedByTenofovir.exvivo.Wang.fisher.test.results$p.value, " = ", " < " );

SCRIMalderelliData.num.IS.proliferating.isUpregulatedByTenofovir.exvivo <- 
    sum( SCRIMalderelliData[ ( SCRIMalderelliData$Proliferating > 0 ) & !is.na( SCRIMalderelliData$isUpregulatedByTenofovir.exvivo ) & ( SCRIMalderelliData$isUpregulatedByTenofovir.exvivo > 0 ), time.points ] );
SCRIMalderelliData.num.IS.proliferating.NOTisUpregulatedByTenofovir.exvivo <- 
    sum( SCRIMalderelliData[ ( SCRIMalderelliData$Proliferating > 0 ) & !is.na( SCRIMalderelliData$isUpregulatedByTenofovir.exvivo ) & ( SCRIMalderelliData$isUpregulatedByTenofovir.exvivo == 0 ), time.points ] );

SCRIMalderelliData.num.IS.nonproliferating.isUpregulatedByTenofovir.exvivo <- 
    sum( SCRIMalderelliData[ ( SCRIMalderelliData$Proliferating == 0 ) & !is.na( SCRIMalderelliData$isUpregulatedByTenofovir.exvivo ) & ( SCRIMalderelliData$isUpregulatedByTenofovir.exvivo > 0 ), time.points ] );
SCRIMalderelliData.num.IS.nonproliferating.NOTisUpregulatedByTenofovir.exvivo <- 
    sum( SCRIMalderelliData[ ( SCRIMalderelliData$Proliferating == 0 ) & !is.na( SCRIMalderelliData$isUpregulatedByTenofovir.exvivo ) & ( SCRIMalderelliData$isUpregulatedByTenofovir.exvivo == 0 ), time.points ] );

SCRIMalderelliData.IS.proliferating.isUpregulatedByTenofovir.exvivo.Wang.fisher.table <- cbind(
    c( SCRIMalderelliData.num.IS.proliferating.isUpregulatedByTenofovir.exvivo, SCRIMalderelliData.num.IS.proliferating.NOTisUpregulatedByTenofovir.exvivo ),
    c( WangData.num.uniqueIS.isUpregulatedByTenofovir.exvivo, WangData.num.uniqueIS.NOTisUpregulatedByTenofovir.exvivo ) );
colnames( SCRIMalderelliData.IS.proliferating.isUpregulatedByTenofovir.exvivo.Wang.fisher.table ) <- c( "SCRIMalderelli", "Wang" );
rownames( SCRIMalderelliData.IS.proliferating.isUpregulatedByTenofovir.exvivo.Wang.fisher.table ) <- c( "isUpregulatedByTenofovir.exvivo", "NOTisUpregulatedByTenofovir.exvivo" );
SCRIMalderelliData.IS.proliferating.isUpregulatedByTenofovir.exvivo.Wang.fisher.test.results <- fisher.test( SCRIMalderelliData.IS.proliferating.isUpregulatedByTenofovir.exvivo.Wang.fisher.table );
SCRIMalderelliData.IS.proliferating.isUpregulatedByTenofovir.exvivo.Wang.fisher.test.results.p.value <- prettyPrintPValuesTo4Digits( SCRIMalderelliData.IS.proliferating.isUpregulatedByTenofovir.exvivo.Wang.fisher.test.results$p.value, " = ", " < " );

SCRIMalderelliData.IS.nonproliferating.isUpregulatedByTenofovir.exvivo.Wang.fisher.table <- cbind(
    c( SCRIMalderelliData.num.IS.nonproliferating.isUpregulatedByTenofovir.exvivo, SCRIMalderelliData.num.IS.nonproliferating.NOTisUpregulatedByTenofovir.exvivo ),
    c( WangData.num.uniqueIS.isUpregulatedByTenofovir.exvivo, WangData.num.uniqueIS.NOTisUpregulatedByTenofovir.exvivo ) );
colnames( SCRIMalderelliData.IS.nonproliferating.isUpregulatedByTenofovir.exvivo.Wang.fisher.table ) <- c( "SCRIMalderelli", "Wang" );
rownames( SCRIMalderelliData.IS.nonproliferating.isUpregulatedByTenofovir.exvivo.Wang.fisher.table ) <- c( "isUpregulatedByTenofovir.exvivo", "NOTisUpregulatedByTenofovir.exvivo" );
SCRIMalderelliData.IS.nonproliferating.isUpregulatedByTenofovir.exvivo.Wang.fisher.test.results <- fisher.test( SCRIMalderelliData.IS.nonproliferating.isUpregulatedByTenofovir.exvivo.Wang.fisher.table );
SCRIMalderelliData.IS.nonproliferating.isUpregulatedByTenofovir.exvivo.Wang.fisher.test.results.p.value <- prettyPrintPValuesTo4Digits( SCRIMalderelliData.IS.nonproliferating.isUpregulatedByTenofovir.exvivo.Wang.fisher.test.results$p.value, " = ", " < " );
@ 

Figure~\ref{fig:SCRIMalderelliData.IS.p.value.isUpregulatedByTenofovir.exvivo} shows the significance of the enrichment of the isUpregulatedByTenofovir.exvivo feature among SCRIMalderelli ISs, by showing where the count of ISs with this feature falls in the null distribution that is obtained by independently drawing the appropriate number of ISs from the Wang data set. The probability of seeing such an extreme count statistic under the null hypothesis that the isUpregulatedByTenofovir.exvivo feature has the same abundance among SCRIMalderelli ISs as among Wang ISs is p\Sexpr{prettyPrintPValuesTo4Digits( SCRIMalderelliData.IS.p.values.by.feature[ "isUpregulatedByTenofovir.exvivo" ], " = ", "< " )}.

\begin{minipage}{\linewidth}
\centering
\par
\bigskip
\captionof{figure}{\bf SCRIMalderelli ISs vs Wang: isUpregulatedByTenofovir.exvivo} \label{fig:SCRIMalderelliData.IS.p.value.isUpregulatedByTenofovir.exvivo}
<<echo = FALSE, results = hide, fig = TRUE>>=
.feature <- "isUpregulatedByTenofovir.exvivo";
qplot(
    c( SCRIMalderelliData.IS.feature.nulls[[ "total" ]][ , .feature ] ),
    geom = "histogram",
    main = "Histogram of null counts", 
    xlab = "Counts of ISs in genes that are isUpregulatedByTenofovir.exvivo",  
    fill=I("blue"), 
    col=I("black"),
    alpha=I(.2) ) + aes( y = ..density.. ) + labs( y = "Density" ) + geom_vline( xintercept = SCRIMalderelliData.num.IS.by.feature[ .feature ], color = "red", linetype = "longdash" );
@ 
\par
\bigskip
SCRIMalderelli ISs vs Wang: isUpregulatedByTenofovir.exvivo \par
(p\Sexpr{prettyPrintPValuesTo4Digits( SCRIMalderelliData.IS.p.values.by.feature[ "isUpregulatedByTenofovir.exvivo" ], " = ", "< " )})
\par
\bigskip
\end{minipage}

Table~\ref{tab:SCRIMalderelliData.IS.isUpregulatedByTenofovir.exvivo.Wang.fisher} shows the comparison of isUpregulatedByTenofovir.exvivo between SCRIMalderelli (ISs) and Wang that conditions on both margins (Fisher's exact test p\Sexpr{SCRIMalderelliData.IS.isUpregulatedByTenofovir.exvivo.Wang.fisher.test.results.p.value}).

\begin{minipage}{\linewidth}
\centering
\par
\bigskip
\captionof{table}{\bf isUpregulatedByTenofovir.exvivo: SCRIMalderelli ISs vs Wang} \label{tab:SCRIMalderelliData.IS.isUpregulatedByTenofovir.exvivo.Wang.fisher}
<<echo = FALSE, results = tex>>=
print( xtable( SCRIMalderelliData.IS.isUpregulatedByTenofovir.exvivo.Wang.fisher.table, digits=2 ), floating = FALSE );
@ 
\par
\bigskip
isUpregulatedByTenofovir.exvivo: SCRIMalderelli ISs vs Wang (Fisher's exact test p\Sexpr{SCRIMalderelliData.IS.isUpregulatedByTenofovir.exvivo.Wang.fisher.test.results.p.value})
\par
\bigskip
\end{minipage}


\clearpage

<<echo = FALSE>>=
# (un)Setup for prettier Sweave output.
options( continue = old.continue.option$continue )
@ 

\end{document}

